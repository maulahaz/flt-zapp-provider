// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const html = dart_sdk.html;
  const convert = dart_sdk.convert;
  const _internal = dart_sdk._internal;
  const collection = dart_sdk.collection;
  const developer = dart_sdk.developer;
  const math = dart_sdk.math;
  const _http = dart_sdk._http;
  const io = dart_sdk.io;
  const typed_data = dart_sdk.typed_data;
  const _native_typed_data = dart_sdk._native_typed_data;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const framework = flutter_sdk.src__widgets__framework;
  const binding = flutter_sdk.src__widgets__binding;
  const plugin_registry = flutter_sdk.src__plugin_registry;
  const change_notifier = flutter_sdk.src__foundation__change_notifier;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text$ = flutter_sdk.src__widgets__text;
  const single_child_scroll_view = flutter_sdk.src__widgets__single_child_scroll_view;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const basic = flutter_sdk.src__widgets__basic;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const assertions = flutter_sdk.src__foundation__assertions;
  const diagnostics = flutter_sdk.src__foundation__diagnostics;
  const sliver = flutter_sdk.src__widgets__sliver;
  const layout_builder = flutter_sdk.src__widgets__layout_builder;
  const equality = flutter_sdk.src__equality;
  const value_listenable_builder = flutter_sdk.src__widgets__value_listenable_builder;
  const colors = flutter_sdk.src__material__colors;
  const colors$ = flutter_sdk.src__painting__colors;
  const gradient = flutter_sdk.src__painting__gradient;
  const alignment = flutter_sdk.src__painting__alignment;
  const input_border = flutter_sdk.src__material__input_border;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const borders = flutter_sdk.src__painting__borders;
  const box_shadow = flutter_sdk.src__painting__box_shadow;
  const text_style = flutter_sdk.src__painting__text_style;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const theme_data = flutter_sdk.src__material__theme_data;
  const color_scheme = flutter_sdk.src__material__color_scheme;
  const icon_theme_data = flutter_sdk.src__widgets__icon_theme_data;
  const app_bar_theme = flutter_sdk.src__material__app_bar_theme;
  const media_query = flutter_sdk.src__widgets__media_query;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const box = flutter_sdk.src__rendering__box;
  const container = flutter_sdk.src__widgets__container;
  const material_button = flutter_sdk.src__material__material_button;
  const icon_button = flutter_sdk.src__material__icon_button;
  const navigator = flutter_sdk.src__widgets__navigator;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const list_tile = flutter_sdk.src__material__list_tile;
  const preferred_size = flutter_sdk.src__widgets__preferred_size;
  const flexible_space_bar = flutter_sdk.src__material__flexible_space_bar;
  const image = flutter_sdk.src__widgets__image;
  const box_fit = flutter_sdk.src__painting__box_fit;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const box_border = flutter_sdk.src__painting__box_border;
  const flex = flutter_sdk.src__rendering__flex;
  const progress_indicator = flutter_sdk.src__material__progress_indicator;
  const dialog = flutter_sdk.src__material__dialog;
  const snack_bar = flutter_sdk.src__material__snack_bar;
  const text_form_field = flutter_sdk.src__material__text_form_field;
  const text_input = flutter_sdk.src__services__text_input;
  const decoration_image = flutter_sdk.src__painting__decoration_image;
  const image_resolution = flutter_sdk.src__painting__image_resolution;
  const gesture_detector = flutter_sdk.src__widgets__gesture_detector;
  const platform_channel = flutter_sdk.src__services__platform_channel;
  const message_codecs = flutter_sdk.src__services__message_codecs;
  const page = flutter_sdk.src__material__page;
  const number_format = flutter_sdk.src__intl__number_format;
  const date_format = flutter_sdk.src__intl__date_format;
  const string_scanner = flutter_sdk.src__string_scanner;
  const canonicalized_map = flutter_sdk.src__canonicalized_map;
  const span_exception = flutter_sdk.src__span_exception;
  const queue_list = flutter_sdk.src__queue_list;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var provider = Object.create(dart.library);
  var cart_prov = Object.create(dart.library);
  var x_configs = Object.create(dart.library);
  var x_features = Object.create(dart.library);
  var x_homes = Object.create(dart.library);
  var x_product = Object.create(dart.library);
  var x_sliver_screens = Object.create(dart.library);
  var form_input_pg = Object.create(dart.library);
  var shared_preferences_web = Object.create(dart.library);
  var async_provider = Object.create(dart.library);
  var change_notifier_provider = Object.create(dart.library);
  var consumer = Object.create(dart.library);
  var listenable_provider = Object.create(dart.library);
  var provider$ = Object.create(dart.library);
  var proxy_provider = Object.create(dart.library);
  var reassemble_handler = Object.create(dart.library);
  var selector$ = Object.create(dart.library);
  var value_listenable_provider = Object.create(dart.library);
  var x_models = Object.create(dart.library);
  var colors$0 = Object.create(dart.library);
  var keys = Object.create(dart.library);
  var paths = Object.create(dart.library);
  var styles = Object.create(dart.library);
  var themes = Object.create(dart.library);
  var variables = Object.create(dart.library);
  var button_pg = Object.create(dart.library);
  var home_pg = Object.create(dart.library);
  var product_pg = Object.create(dart.library);
  var cart_pg = Object.create(dart.library);
  var car_mdl = Object.create(dart.library);
  var sliver_vw = Object.create(dart.library);
  var x_widgets = Object.create(dart.library);
  var shared_preferences_platform_interface = Object.create(dart.library);
  var types = Object.create(dart.library);
  var nested = Object.create(dart.library);
  var product_mdl = Object.create(dart.library);
  var store_mdl = Object.create(dart.library);
  var x_helpers = Object.create(dart.library);
  var x_pages = Object.create(dart.library);
  var x_widgets$ = Object.create(dart.library);
  var product_dt = Object.create(dart.library);
  var x_models$ = Object.create(dart.library);
  var cart_prov$ = Object.create(dart.library);
  var button_wdg = Object.create(dart.library);
  var dialog_wdg = Object.create(dart.library);
  var snackbar_wdg = Object.create(dart.library);
  var textfield_wdg = Object.create(dart.library);
  var form_input_wdg = Object.create(dart.library);
  var my_box_decoration = Object.create(dart.library);
  var my_text = Object.create(dart.library);
  var plugin_platform_interface = Object.create(dart.library);
  var method_channel_shared_preferences = Object.create(dart.library);
  var base_client_http_hlp = Object.create(dart.library);
  var exception_hlp = Object.create(dart.library);
  var extension_hlp = Object.create(dart.library);
  var dialog_hlp = Object.create(dart.library);
  var material_color_hlp = Object.create(dart.library);
  var responsive_hlp = Object.create(dart.library);
  var session_hlp = Object.create(dart.library);
  var utils_hlp = Object.create(dart.library);
  var widgets_hlp = Object.create(dart.library);
  var form_input_pg$ = Object.create(dart.library);
  var button_wdg$ = Object.create(dart.library);
  var dialog_wdg$ = Object.create(dart.library);
  var snackbar_wdg$ = Object.create(dart.library);
  var textfield_wdg$ = Object.create(dart.library);
  var form_input_wdg$ = Object.create(dart.library);
  var my_box_decoration$ = Object.create(dart.library);
  var my_text$ = Object.create(dart.library);
  var product_mdl$ = Object.create(dart.library);
  var store_mdl$ = Object.create(dart.library);
  var x_helpers$ = Object.create(dart.library);
  var http = Object.create(dart.library);
  var x_configs$ = Object.create(dart.library);
  var shared_preferences = Object.create(dart.library);
  var base_client_http_hlp$ = Object.create(dart.library);
  var exception_hlp$ = Object.create(dart.library);
  var extension_hlp$ = Object.create(dart.library);
  var dialog_hlp$ = Object.create(dart.library);
  var material_color_hlp$ = Object.create(dart.library);
  var responsive_hlp$ = Object.create(dart.library);
  var session_hlp$ = Object.create(dart.library);
  var utils_hlp$ = Object.create(dart.library);
  var widgets_hlp$ = Object.create(dart.library);
  var client$ = Object.create(dart.library);
  var exception = Object.create(dart.library);
  var request$ = Object.create(dart.library);
  var response$ = Object.create(dart.library);
  var streamed_request = Object.create(dart.library);
  var base_client = Object.create(dart.library);
  var base_request = Object.create(dart.library);
  var base_response = Object.create(dart.library);
  var byte_stream = Object.create(dart.library);
  var multipart_file = Object.create(dart.library);
  var multipart_request = Object.create(dart.library);
  var streamed_response = Object.create(dart.library);
  var colors$1 = Object.create(dart.library);
  var keys$ = Object.create(dart.library);
  var paths$ = Object.create(dart.library);
  var styles$ = Object.create(dart.library);
  var themes$ = Object.create(dart.library);
  var variables$ = Object.create(dart.library);
  var browser_client = Object.create(dart.library);
  var http_parser = Object.create(dart.library);
  var utils = Object.create(dart.library);
  var multipart_file_stub = Object.create(dart.library);
  var boundary_characters = Object.create(dart.library);
  var authentication_challenge = Object.create(dart.library);
  var case_insensitive_map = Object.create(dart.library);
  var chunked_coding = Object.create(dart.library);
  var http_date = Object.create(dart.library);
  var media_type = Object.create(dart.library);
  var scan = Object.create(dart.library);
  var utils$ = Object.create(dart.library);
  var decoder = Object.create(dart.library);
  var encoder = Object.create(dart.library);
  var typed_data$ = Object.create(dart.library);
  var charcodes = Object.create(dart.library);
  var typed_queue = Object.create(dart.library);
  var typed_buffers = Object.create(dart.library);
  var typed_buffer = Object.create(dart.library);
  var $toString = dartx.toString;
  var $add = dartx.add;
  var $remove = dartx.remove;
  var $clear = dartx.clear;
  var $fold = dartx.fold;
  var $localStorage = dartx.localStorage;
  var $forEach = dartx.forEach;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $keys = dartx.keys;
  var $startsWith = dartx.startsWith;
  var $where = dartx.where;
  var $cast = dartx.cast;
  var $runtimeType = dartx.runtimeType;
  var $isNotEmpty = dartx.isNotEmpty;
  var $length = dartx.length;
  var $removeWhere = dartx.removeWhere;
  var $reversed = dartx.reversed;
  var $firstWhere = dartx.firstWhere;
  var $addAll = dartx.addAll;
  var $toList = dartx.toList;
  var $substring = dartx.substring;
  var $toUpperCase = dartx.toUpperCase;
  var $toLowerCase = dartx.toLowerCase;
  var $containsKey = dartx.containsKey;
  var $isEmpty = dartx.isEmpty;
  var $map = dartx.map;
  var $hashCode = dartx.hashCode;
  var $entries = dartx.entries;
  var $replaceAll = dartx.replaceAll;
  var $responseType = dartx.responseType;
  var $onLoad = dartx.onLoad;
  var $response = dartx.response;
  var $asUint8List = dartx.asUint8List;
  var $responseHeaders = dartx.responseHeaders;
  var $onError = dartx.onError;
  var $join = dartx.join;
  var $buffer = dartx.buffer;
  var $contains = dartx.contains;
  var $indexOf = dartx.indexOf;
  var $split = dartx.split;
  var $replaceAllMapped = dartx.replaceAllMapped;
  var $_equals = dartx._equals;
  var $toRadixString = dartx.toRadixString;
  var $codeUnits = dartx.codeUnits;
  var $setRange = dartx.setRange;
  var $fillRange = dartx.fillRange;
  var $rightShift = dartx['>>'];
  var $sublist = dartx.sublist;
  var $elementSizeInBytes = dartx.elementSizeInBytes;
  var $offsetInBytes = dartx.offsetInBytes;
  var $insertAll = dartx.insertAll;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T$ = {
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T$.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T$.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ListOfString()])))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T$.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T$.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T$.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    BuildContextToHomePage: () => (T$.BuildContextToHomePage = dart.constFn(dart.fnType(home_pg.HomePage, [framework.BuildContext])))(),
    BuildContextToProductPage: () => (T$.BuildContextToProductPage = dart.constFn(dart.fnType(product_pg.ProductPage, [framework.BuildContext])))(),
    BuildContextToCartPage: () => (T$.BuildContextToCartPage = dart.constFn(dart.fnType(cart_pg.CartPage, [framework.BuildContext])))(),
    BuildContextToButtonPage: () => (T$.BuildContextToButtonPage = dart.constFn(dart.fnType(button_pg.ButtonPage, [framework.BuildContext])))(),
    BuildContextToFormInputPage: () => (T$.BuildContextToFormInputPage = dart.constFn(dart.fnType(form_input_pg.FormInputPage, [framework.BuildContext])))(),
    BuildContextToSliverView: () => (T$.BuildContextToSliverView = dart.constFn(dart.fnType(sliver_vw.SliverView, [framework.BuildContext])))(),
    BuildContextToWidget: () => (T$.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    IdentityMapOfString$BuildContextToWidget: () => (T$.IdentityMapOfString$BuildContextToWidget = dart.constFn(_js_helper.IdentityMap$(core.String, T$.BuildContextToWidget())))(),
    ChangeNotifierProviderOfCartProvider: () => (T$.ChangeNotifierProviderOfCartProvider = dart.constFn(change_notifier_provider.ChangeNotifierProvider$(cart_prov.CartProvider)))(),
    BuildContextToCartProvider: () => (T$.BuildContextToCartProvider = dart.constFn(dart.fnType(cart_prov.CartProvider, [framework.BuildContext])))(),
    JSArrayOfProductModel: () => (T$.JSArrayOfProductModel = dart.constFn(_interceptors.JSArray$(product_mdl.ProductModel)))(),
    doubleAndProductModelTodouble: () => (T$.doubleAndProductModelTodouble = dart.constFn(dart.fnType(core.double, [core.double, product_mdl.ProductModel])))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    MapOfString$Object: () => (T$.MapOfString$Object = dart.constFn(core.Map$(core.String, core.Object)))(),
    IdentityMapOfString$Object: () => (T$.IdentityMapOfString$Object = dart.constFn(_js_helper.IdentityMap$(core.String, core.Object)))(),
    StringTobool: () => (T$.StringTobool = dart.constFn(dart.fnType(core.bool, [core.String])))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    ExpandoOfObject: () => (T$.ExpandoOfObject = dart.constFn(core.Expando$(core.Object)))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    ObjectNToNull: () => (T$.ObjectNToNull = dart.constFn(dart.fnType(core.Null, [T$.ObjectN()])))(),
    ChangeNotifierN: () => (T$.ChangeNotifierN = dart.constFn(dart.nullable(change_notifier.ChangeNotifier)))(),
    BuildContextAndChangeNotifierNTovoid: () => (T$.BuildContextAndChangeNotifierNTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T$.ChangeNotifierN()])))(),
    ListenableN: () => (T$.ListenableN = dart.constFn(dart.nullable(change_notifier.Listenable)))(),
    InheritedContextOfListenableN: () => (T$.InheritedContextOfListenableN = dart.constFn(provider$.InheritedContext$(T$.ListenableN())))(),
    InheritedContextOfListenableNAndListenableNToFn: () => (T$.InheritedContextOfListenableNAndListenableNToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [T$.InheritedContextOfListenableN(), T$.ListenableN()])))(),
    TTovoid$1: () => (T$.TTovoid$1 = dart.constFn(dart.gFnType(T => [dart.void, [T]], T => [T$.ObjectN()])))(),
    JSArrayOfPostEventCall: () => (T$.JSArrayOfPostEventCall = dart.constFn(_interceptors.JSArray$(provider$.PostEventCall)))(),
    IdentityMapOfString$ProviderNode: () => (T$.IdentityMapOfString$ProviderNode = dart.constFn(_js_helper.IdentityMap$(core.String, provider$.ProviderNode)))(),
    ElementTovoid: () => (T$.ElementTovoid = dart.constFn(dart.fnType(dart.void, [framework.Element])))(),
    _NestedHookElementN: () => (T$._NestedHookElementN = dart.constFn(dart.nullable(nested._NestedHookElement)))(),
    ElementTobool: () => (T$.ElementTobool = dart.constFn(dart.fnType(core.bool, [framework.Element])))(),
    LinkedHashMapOfString$ProviderNode: () => (T$.LinkedHashMapOfString$ProviderNode = dart.constFn(collection.LinkedHashMap$(core.String, provider$.ProviderNode)))(),
    FutureOfNull: () => (T$.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    JSArrayOfDiagnosticsNode: () => (T$.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))(),
    DefaultEqualityOfNever: () => (T$.DefaultEqualityOfNever = dart.constFn(equality.DefaultEquality$(dart.Never)))(),
    FnToR: () => (T$.FnToR = dart.constFn(dart.gFnType((T, R) => {
      var __t$TToR = () => (__t$TToR = dart.constFn(dart.fnType(R, [T])))();
      return [R, [__t$TToR()]];
    }, (T, R) => {
      var __t$TToR = () => (__t$TToR = dart.constFn(dart.fnType(R, [T])))();
      return [T$.ObjectN(), T$.ObjectN()];
    })))(),
    VoidToT: () => (T$.VoidToT = dart.constFn(dart.gFnType(T => [T, []], T => [T$.ObjectN()])))(),
    intN: () => (T$.intN = dart.constFn(dart.nullable(core.int)))(),
    JSArrayOfintN: () => (T$.JSArrayOfintN = dart.constFn(_interceptors.JSArray$(T$.intN())))(),
    ListOfint: () => (T$.ListOfint = dart.constFn(core.List$(core.int)))(),
    WidgetN: () => (T$.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    FutureOfObjectN: () => (T$.FutureOfObjectN = dart.constFn(async.Future$(T$.ObjectN())))(),
    VoidToFutureOfObjectN: () => (T$.VoidToFutureOfObjectN = dart.constFn(dart.fnType(T$.FutureOfObjectN(), [])))(),
    BuildContextAndintToListTile: () => (T$.BuildContextAndintToListTile = dart.constFn(dart.fnType(list_tile.ListTile, [framework.BuildContext, core.int])))(),
    ConsumerOfCartProvider: () => (T$.ConsumerOfCartProvider = dart.constFn(consumer.Consumer$(cart_prov$.CartProvider)))(),
    BuildContextAndCartProviderAndWidgetNToContainer: () => (T$.BuildContextAndCartProviderAndWidgetNToContainer = dart.constFn(dart.fnType(container.Container, [framework.BuildContext, cart_prov$.CartProvider, T$.WidgetN()])))(),
    JSArrayOfCarModel: () => (T$.JSArrayOfCarModel = dart.constFn(_interceptors.JSArray$(car_mdl.CarModel)))(),
    LinkedHashMapOfString$Object: () => (T$.LinkedHashMapOfString$Object = dart.constFn(collection.LinkedHashMap$(core.String, core.Object)))(),
    StringAndObjectTobool: () => (T$.StringAndObjectTobool = dart.constFn(dart.fnType(core.bool, [core.String, core.Object])))(),
    LinkedHashSetOf_NestedHookElement: () => (T$.LinkedHashSetOf_NestedHookElement = dart.constFn(collection.LinkedHashSet$(nested._NestedHookElement)))(),
    SingleChildStateOfSingleChildStatefulWidget: () => (T$.SingleChildStateOfSingleChildStatefulWidget = dart.constFn(nested.SingleChildState$(nested.SingleChildStatefulWidget)))(),
    SingleChildStateMixinOfStatefulWidget: () => (T$.SingleChildStateMixinOfStatefulWidget = dart.constFn(nested.SingleChildStateMixin$(framework.StatefulWidget)))(),
    StoreEnumTobool: () => (T$.StoreEnumTobool = dart.constFn(dart.fnType(core.bool, [store_mdl.StoreEnum])))(),
    VoidToStoreEnum: () => (T$.VoidToStoreEnum = dart.constFn(dart.fnType(store_mdl.StoreEnum, [])))(),
    JSArrayOfProductModel$1: () => (T$.JSArrayOfProductModel$1 = dart.constFn(_interceptors.JSArray$(product_mdl$.ProductModel)))(),
    doubleAndProductModelTodouble$1: () => (T$.doubleAndProductModelTodouble$1 = dart.constFn(dart.fnType(core.double, [core.double, product_mdl$.ProductModel])))(),
    BuildContextToDialog: () => (T$.BuildContextToDialog = dart.constFn(dart.fnType(dialog.Dialog, [framework.BuildContext])))(),
    BuildContextToAlertDialog: () => (T$.BuildContextToAlertDialog = dart.constFn(dart.fnType(dialog.AlertDialog, [framework.BuildContext])))(),
    StringTovoid: () => (T$.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    JSArrayOfBoxShadow: () => (T$.JSArrayOfBoxShadow = dart.constFn(_interceptors.JSArray$(box_shadow.BoxShadow)))(),
    IdentityMapOfString$dynamic: () => (T$.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    IdentityMapOfString$String: () => (T$.IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))(),
    TNTovoid: () => (T$.TNTovoid = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      return [dart.void, [], [__t$TN()]];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      return [core.Object];
    })))(),
    RouteTobool: () => (T$.RouteTobool = dart.constFn(dart.fnType(core.bool, [navigator.Route])))(),
    VoidTovoid$1: () => (T$.VoidTovoid$1 = dart.constFn(dart.gFnType(T => [dart.void, []], T => [core.Object])))(),
    StringN: () => (T$.StringN = dart.constFn(dart.nullable(core.String)))(),
    WidgetAndStringNToFutureOfTN: () => (T$.WidgetAndStringNToFutureOfTN = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      return [__t$FutureOfTN(), [framework.Widget], [T$.StringN()]];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      return [core.Object];
    })))(),
    WidgetToFutureOfTN: () => (T$.WidgetToFutureOfTN = dart.constFn(dart.gFnType((T, TO) => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      return [__t$FutureOfTN(), [framework.Widget]];
    }, (T, TO) => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      return [core.Object, core.Object];
    })))(),
    WidgetAndFnToFutureOfTN: () => (T$.WidgetAndFnToFutureOfTN = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      return [__t$FutureOfTN(), [framework.Widget, T$.RouteTobool()]];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      return [core.Object];
    })))(),
    VoidToString: () => (T$.VoidToString = dart.constFn(dart.fnType(core.String, [])))(),
    IdentityMapOfint$Color: () => (T$.IdentityMapOfint$Color = dart.constFn(_js_helper.IdentityMap$(core.int, ui.Color)))(),
    BuildContextAndBoxConstraintsToWidget: () => (T$.BuildContextAndBoxConstraintsToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, box.BoxConstraints])))(),
    StoreEnumTobool$1: () => (T$.StoreEnumTobool$1 = dart.constFn(dart.fnType(core.bool, [store_mdl$.StoreEnum])))(),
    VoidToStoreEnum$1: () => (T$.VoidToStoreEnum$1 = dart.constFn(dart.fnType(store_mdl$.StoreEnum, [])))(),
    FutureOfResponse: () => (T$.FutureOfResponse = dart.constFn(async.Future$(response$.Response)))(),
    ClientToFutureOfResponse: () => (T$.ClientToFutureOfResponse = dart.constFn(dart.fnType(T$.FutureOfResponse(), [client$.Client])))(),
    FutureOfString: () => (T$.FutureOfString = dart.constFn(async.Future$(core.String)))(),
    ClientToFutureOfString: () => (T$.ClientToFutureOfString = dart.constFn(dart.fnType(T$.FutureOfString(), [client$.Client])))(),
    FutureOfUint8List: () => (T$.FutureOfUint8List = dart.constFn(async.Future$(typed_data.Uint8List)))(),
    ClientToFutureOfUint8List: () => (T$.ClientToFutureOfUint8List = dart.constFn(dart.fnType(T$.FutureOfUint8List(), [client$.Client])))(),
    CompleterOfSharedPreferences: () => (T$.CompleterOfSharedPreferences = dart.constFn(async.Completer$(shared_preferences.SharedPreferences)))(),
    LinkedHashSetOfString: () => (T$.LinkedHashSetOfString = dart.constFn(collection.LinkedHashSet$(core.String)))(),
    boolN: () => (T$.boolN = dart.constFn(dart.nullable(core.bool)))(),
    doubleN: () => (T$.doubleN = dart.constFn(dart.nullable(core.double)))(),
    ListN: () => (T$.ListN = dart.constFn(dart.nullable(core.List)))(),
    ListNOfString: () => (T$.ListNOfString = dart.constFn(dart.nullable(T$.ListOfString())))(),
    MapEntryOfString$Object: () => (T$.MapEntryOfString$Object = dart.constFn(core.MapEntry$(core.String, core.Object)))(),
    StringAndObjectToMapEntryOfString$Object: () => (T$.StringAndObjectToMapEntryOfString$Object = dart.constFn(dart.fnType(T$.MapEntryOfString$Object(), [core.String, core.Object])))(),
    LinkedMapOfObjectN$ObjectN: () => (T$.LinkedMapOfObjectN$ObjectN = dart.constFn(_js_helper.LinkedMap$(T$.ObjectN(), T$.ObjectN())))(),
    VoidToClient: () => (T$.VoidToClient = dart.constFn(dart.fnType(client$.Client, [])))(),
    LinkedHashMapOfString$String: () => (T$.LinkedHashMapOfString$String = dart.constFn(collection.LinkedHashMap$(core.String, core.String)))(),
    StringAndStringTobool: () => (T$.StringAndStringTobool = dart.constFn(dart.fnType(core.bool, [core.String, core.String])))(),
    StringToint: () => (T$.StringToint = dart.constFn(dart.fnType(core.int, [core.String])))(),
    _EmptyStreamOfListOfint: () => (T$._EmptyStreamOfListOfint = dart.constFn(async._EmptyStream$(T$.ListOfint())))(),
    StreamControllerOfListOfint: () => (T$.StreamControllerOfListOfint = dart.constFn(async.StreamController$(T$.ListOfint())))(),
    StreamOfListOfint: () => (T$.StreamOfListOfint = dart.constFn(async.Stream$(T$.ListOfint())))(),
    CompleterOfUint8List: () => (T$.CompleterOfUint8List = dart.constFn(async.Completer$(typed_data.Uint8List)))(),
    ListOfintTovoid: () => (T$.ListOfintTovoid = dart.constFn(dart.fnType(dart.void, [T$.ListOfint()])))(),
    JSArrayOfMultipartFile: () => (T$.JSArrayOfMultipartFile = dart.constFn(_interceptors.JSArray$(multipart_file.MultipartFile)))(),
    StringAndStringTovoid: () => (T$.StringAndStringTovoid = dart.constFn(dart.fnType(dart.void, [core.String, core.String])))(),
    _AsyncStarImplOfListOfint: () => (T$._AsyncStarImplOfListOfint = dart.constFn(async._AsyncStarImpl$(T$.ListOfint())))(),
    intToint: () => (T$.intToint = dart.constFn(dart.fnType(core.int, [core.int])))(),
    LinkedHashSetOfHttpRequest: () => (T$.LinkedHashSetOfHttpRequest = dart.constFn(collection.LinkedHashSet$(html.HttpRequest)))(),
    CompleterOfStreamedResponse: () => (T$.CompleterOfStreamedResponse = dart.constFn(async.Completer$(streamed_response.StreamedResponse)))(),
    ProgressEventToNull: () => (T$.ProgressEventToNull = dart.constFn(dart.fnType(core.Null, [html.ProgressEvent])))(),
    JSArrayOfListOfString: () => (T$.JSArrayOfListOfString = dart.constFn(_interceptors.JSArray$(T$.ListOfString())))(),
    ListOfStringToString: () => (T$.ListOfStringToString = dart.constFn(dart.fnType(core.String, [T$.ListOfString()])))(),
    UnmodifiableMapViewOfString$String: () => (T$.UnmodifiableMapViewOfString$String = dart.constFn(collection.UnmodifiableMapView$(core.String, core.String)))(),
    CaseInsensitiveMapOfString: () => (T$.CaseInsensitiveMapOfString = dart.constFn(case_insensitive_map.CaseInsensitiveMap$(core.String)))(),
    ListOfAuthenticationChallenge: () => (T$.ListOfAuthenticationChallenge = dart.constFn(core.List$(authentication_challenge.AuthenticationChallenge)))(),
    VoidToAuthenticationChallenge: () => (T$.VoidToAuthenticationChallenge = dart.constFn(dart.fnType(authentication_challenge.AuthenticationChallenge, [])))(),
    VoidToListOfAuthenticationChallenge: () => (T$.VoidToListOfAuthenticationChallenge = dart.constFn(dart.fnType(T$.ListOfAuthenticationChallenge(), [])))(),
    StringToString: () => (T$.StringToString = dart.constFn(dart.fnType(core.String, [core.String])))(),
    VoidToDateTime: () => (T$.VoidToDateTime = dart.constFn(dart.fnType(core.DateTime, [])))(),
    VoidToMediaType: () => (T$.VoidToMediaType = dart.constFn(dart.fnType(media_type.MediaType, [])))(),
    MatchToString: () => (T$.MatchToString = dart.constFn(dart.fnType(core.String, [core.Match])))(),
    SinkOfListOfint: () => (T$.SinkOfListOfint = dart.constFn(core.Sink$(T$.ListOfint())))(),
    intAndStringTovoid: () => (T$.intAndStringTovoid = dart.constFn(dart.fnType(dart.void, [core.int, core.String])))(),
    JSArrayOfint: () => (T$.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T$.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: main.MyApp.prototype,
        [Widget_key]: null
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: core.Object.prototype
      });
    },
    get C3() {
      return C[3] = dart.fn(change_notifier_provider.ChangeNotifierProvider._dispose, T$.BuildContextAndChangeNotifierNTovoid());
    },
    get C4() {
      return C[4] = dart.fn(listenable_provider.ListenableProvider._startListening, T$.InheritedContextOfListenableNAndListenableNToFn());
    },
    get C5() {
      return C[5] = dart.constList([], core.String);
    },
    get C6() {
      return C[6] = dart.constMap(T$.ObjectN(), T$.ObjectN(), []);
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: T$.DefaultEqualityOfNever().prototype
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: equality.DeepCollectionEquality.prototype,
        [DeepCollectionEquality__unordered]: false,
        [DeepCollectionEquality__base]: C[8] || CT.C8
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293471792
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293128957
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290502395
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4287679225
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284790262
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282557941
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280391411
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280191205
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279858898
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279592384
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279060385
      });
    },
    get C11() {
      return C[11] = dart.constMap(core.int, ui.Color, [50, C[12] || CT.C12, 100, C[13] || CT.C13, 200, C[14] || CT.C14, 300, C[15] || CT.C15, 400, C[16] || CT.C16, 500, C[17] || CT.C17, 600, C[18] || CT.C18, 700, C[19] || CT.C19, 800, C[20] || CT.C20, 900, C[21] || CT.C21]);
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4280391411,
        [ColorSwatch__swatch]: C[11] || CT.C11
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285186649
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294966759
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294965700
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294964637
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294963574
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294962776
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294961979
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294826037
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294688813
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294551589
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294278935
      });
    },
    get C24() {
      return C[24] = dart.constMap(core.int, ui.Color, [50, C[25] || CT.C25, 100, C[26] || CT.C26, 200, C[27] || CT.C27, 300, C[28] || CT.C28, 400, C[29] || CT.C29, 500, C[30] || CT.C30, 600, C[31] || CT.C31, 700, C[32] || CT.C32, 800, C[33] || CT.C33, 900, C[34] || CT.C34]);
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4294961979,
        [ColorSwatch__swatch]: C[24] || CT.C24
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290888129
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279242768
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 0
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284169871
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294174670
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284900966
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294440953
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282203608
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278221823
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285298045
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280854341
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292621637
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294951175
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279739064
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294507002
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281612864
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292927712
      });
    },
    get C54() {
      return C[54] = dart.constList([C[39] || CT.C39, C[36] || CT.C36, C[39] || CT.C39], ui.Color);
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: ui.TileMode.prototype,
        [_Enum__name]: "clamp",
        [_Enum_index]: 0
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 1
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: -1
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: gradient.LinearGradient.prototype,
        [Gradient_transform]: null,
        [Gradient_stops]: null,
        [Gradient_colors]: C[54] || CT.C54,
        [LinearGradient_tileMode]: C[55] || CT.C55,
        [LinearGradient_end]: C[56] || CT.C56,
        [LinearGradient_begin]: C[57] || CT.C57
      });
    },
    get C59() {
      return C[59] = dart.constList([C[39] || CT.C39, C[36] || CT.C36], ui.Color);
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 1,
        [Alignment_x]: 0
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: -1,
        [Alignment_x]: 0
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: gradient.LinearGradient.prototype,
        [Gradient_transform]: null,
        [Gradient_stops]: null,
        [Gradient_colors]: C[59] || CT.C59,
        [LinearGradient_tileMode]: C[55] || CT.C55,
        [LinearGradient_end]: C[60] || CT.C60,
        [LinearGradient_begin]: C[61] || CT.C61
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4289838533
      });
    },
    get C63() {
      return C[63] = dart.constList([C[39] || CT.C39, C[64] || CT.C64], ui.Color);
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 1,
        [Alignment_x]: 1
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: -1,
        [Alignment_x]: -1
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: gradient.LinearGradient.prototype,
        [Gradient_transform]: null,
        [Gradient_stops]: null,
        [Gradient_colors]: C[63] || CT.C63,
        [LinearGradient_tileMode]: C[55] || CT.C55,
        [LinearGradient_end]: C[65] || CT.C65,
        [LinearGradient_begin]: C[66] || CT.C66
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_Enum__name]: "solid",
        [_Enum_index]: 1
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: -1,
        [BorderSide_style]: C[68] || CT.C68,
        [BorderSide_width]: 1,
        [BorderSide_color]: C[40] || CT.C40
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 15,
        [OffsetBase__dx]: 0
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 520093696
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: ui.BlurStyle.prototype,
        [_Enum__name]: "normal",
        [_Enum_index]: 0
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: box_shadow.BoxShadow.prototype,
        [Shadow_blurRadius]: 27,
        [Shadow_offset]: C[70] || CT.C70,
        [Shadow_color]: C[71] || CT.C71,
        [BoxShadow_blurStyle]: C[72] || CT.C72,
        [BoxShadow_spreadRadius]: 0
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 700,
        [FontWeight_index]: 6
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: 1.2,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[74] || CT.C74,
        [TextStyle_fontSize]: 21,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 15,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 15,
        [EdgeInsets_left]: 0
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 200000
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 250000
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 12,
        [EdgeInsets_right]: 12,
        [EdgeInsets_top]: 12,
        [EdgeInsets_left]: 12
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: store_mdl.StoreEnum.prototype,
        [_Enum__name]: "star",
        [_Enum_index]: 0,
        value: "Star"
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: store_mdl.StoreEnum.prototype,
        [_Enum__name]: "starPlus",
        [_Enum_index]: 1,
        value: "Star +"
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: store_mdl.StoreEnum.prototype,
        [_Enum__name]: "officialStore",
        [_Enum_index]: 2,
        value: "Official Store"
      });
    },
    get C79() {
      return C[79] = dart.constList([C[80] || CT.C80, C[81] || CT.C81, C[82] || CT.C82], store_mdl.StoreEnum);
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: -1,
        [BorderSide_style]: C[68] || CT.C68,
        [BorderSide_width]: 1,
        [BorderSide_color]: C[10] || CT.C10
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 4,
        [Radius_x]: 4
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[88] || CT.C88,
        [BorderRadius_bottomLeft]: C[88] || CT.C88,
        [BorderRadius_topRight]: C[88] || CT.C88,
        [BorderRadius_topLeft]: C[88] || CT.C88
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: input_border.OutlineInputBorder.prototype,
        [InputBorder_borderSide]: C[86] || CT.C86,
        [OutlineInputBorder_borderRadius]: C[87] || CT.C87,
        [OutlineInputBorder_gapPadding]: 4
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: -1,
        [BorderSide_style]: C[68] || CT.C68,
        [BorderSide_width]: 1,
        [BorderSide_color]: C[38] || CT.C38
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: input_border.OutlineInputBorder.prototype,
        [InputBorder_borderSide]: C[90] || CT.C90,
        [OutlineInputBorder_borderRadius]: C[87] || CT.C87,
        [OutlineInputBorder_gapPadding]: 4
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[74] || CT.C74,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 12,
        [SizedBox_width]: null
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 1,
        [OffsetBase__dx]: 0
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 400,
        [FontWeight_index]: 3
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: message_codecs.StandardMessageCodec.prototype
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: message_codecs.StandardMethodCodec.prototype,
        [StandardMethodCodec_messageCodec]: C[97] || CT.C97
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [MethodChannel__binaryMessenger]: null,
        [MethodChannel_codec]: C[96] || CT.C96,
        [MethodChannel_name]: "plugins.flutter.io/shared_preferences"
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: convert.JsonEncoder.prototype,
        [JsonEncoder__toEncodable]: null,
        [JsonEncoder_indent]: null
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: store_mdl$.StoreEnum.prototype,
        [_Enum__name]: "star",
        [_Enum_index]: 0,
        value: "Star"
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: store_mdl$.StoreEnum.prototype,
        [_Enum__name]: "starPlus",
        [_Enum_index]: 1,
        value: "Star +"
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: store_mdl$.StoreEnum.prototype,
        [_Enum__name]: "officialStore",
        [_Enum_index]: 2,
        value: "Official Store"
      });
    },
    get C99() {
      return C[99] = dart.constList([C[100] || CT.C100, C[101] || CT.C101, C[102] || CT.C102], store_mdl$.StoreEnum);
    },
    get C103() {
      return C[103] = dart.const(new _js_helper.PrivateSymbol.new('_clientToken', _clientToken));
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: T$._EmptyStreamOfListOfint().prototype
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: byte_stream.ByteStream.prototype,
        [StreamView__stream]: C[105] || CT.C105
      });
    },
    get C106() {
      return C[106] = dart.constMap(core.String, core.String, []);
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: convert.Utf8Codec.prototype,
        [Utf8Codec__allowMalformed]: false
      });
    },
    get C108() {
      return C[108] = dart.constList([13, 10], core.int);
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: convert.Latin1Codec.prototype,
        [Latin1Codec__allowInvalid]: false
      });
    },
    get C110() {
      return C[110] = dart.constList([43, 95, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], core.int);
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: chunked_coding.ChunkedCodingCodec.prototype
      });
    },
    get C112() {
      return C[112] = dart.constList(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], core.String);
    },
    get C113() {
      return C[113] = dart.constList(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], core.String);
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "boundary"
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "size"
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "size before LF"
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "body"
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "body before CR"
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "body before LF"
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "end before CR"
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "end before LF"
      });
    },
    get C122() {
      return C[122] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "end"
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: decoder.ChunkedCodingDecoder.prototype
      });
    },
    get C124() {
      return C[124] = dart.constList([], core.int);
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: encoder.ChunkedCodingEncoder.prototype
      });
    },
    get C126() {
      return C[126] = dart.const(new _js_helper.PrivateSymbol.new('_add', _add));
    },
    get C127() {
      return C[127] = dart.const(new _js_helper.PrivateSymbol.new('_head', _head$));
    },
    get C128() {
      return C[128] = dart.const(new _js_helper.PrivateSymbol.new('_writeToList', _writeToList));
    },
    get C129() {
      return C[129] = dart.const(new _js_helper.PrivateSymbol.new('_grow', _grow));
    },
    get C130() {
      return C[130] = dart.const(new _js_helper.PrivateSymbol.new('_preGrow', _preGrow));
    },
    get C131() {
      return C[131] = dart.const(new _js_helper.PrivateSymbol.new('_table', _table$));
    },
    get C132() {
      return C[132] = dart.const(new _js_helper.PrivateSymbol.new('_tail', _tail$));
    },
    get C133() {
      return C[133] = dart.const(new _js_helper.PrivateSymbol.new('_head=', _head_));
    },
    get C134() {
      return C[134] = dart.const(new _js_helper.PrivateSymbol.new('_table=', _table_));
    },
    get C135() {
      return C[135] = dart.const(new _js_helper.PrivateSymbol.new('_tail=', _tail_));
    }
  }, false);
  var C = Array(136).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "package:flutter_app/controllers/cart_prov.dart",
    "file:///zapp/project/lib/pages/examples/form_input_pg.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.6/lib/plugin_platform_interface.dart",
    "package:plugin_platform_interface/plugin_platform_interface.dart",
    "package:shared_preferences_platform_interface/shared_preferences_platform_interface.dart",
    "package:shared_preferences_web/shared_preferences_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/inherited_provider.dart",
    "package:nested/nested.dart",
    "package:provider/src/provider.dart",
    "package:provider/src/async_provider.dart",
    "package:provider/src/listenable_provider.dart",
    "package:provider/src/change_notifier_provider.dart",
    "package:provider/src/consumer.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/nested-1.0.0/lib/nested.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/deferred_inherited_provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/devtool.dart",
    "package:provider/src/proxy_provider.dart",
    "package:provider/src/reassemble_handler.dart",
    "package:provider/src/selector.dart",
    "package:provider/src/value_listenable_provider.dart",
    "file:///zapp/project/lib/configs/themes.dart",
    "file:///zapp/project/lib/modules/features/pages/button_pg.dart",
    "file:///zapp/project/lib/modules/home/pages/home_pg.dart",
    "file:///zapp/project/lib/modules/product/pages/product_pg.dart",
    "file:///zapp/project/lib/modules/product/pages/cart_pg.dart",
    "file:///zapp/project/lib/modules/sliver_screen/models/car_mdl.dart",
    "file:///zapp/project/lib/modules/sliver_screen/views/sliver_vw.dart",
    "package:shared_preferences_platform_interface/types.dart",
    "package:flutter_app/models/product_mdl.dart",
    "package:flutter_app/models/store_mdl.dart",
    "file:///zapp/project/lib/controllers/cart_prov.dart",
    "file:///zapp/project/lib/widgets/button_wdg.dart",
    "file:///zapp/project/lib/widgets/dialog_wdg.dart",
    "file:///zapp/project/lib/widgets/snackbar_wdg.dart",
    "file:///zapp/project/lib/widgets/textfield_wdg.dart",
    "file:///zapp/project/lib/widgets/form_input_wdg.dart",
    "file:///zapp/project/lib/widgets/my_box_decoration.dart",
    "file:///zapp/project/lib/widgets/my_text.dart",
    "package:shared_preferences_platform_interface/method_channel_shared_preferences.dart",
    "package:flutter_app/helpers/base_client_http_hlp.dart",
    "package:flutter_app/helpers/exception_hlp.dart",
    "package:flutter_app/helpers/dialog_hlp.dart",
    "package:flutter_app/helpers/responsive_hlp.dart",
    "package:flutter_app/helpers/session_hlp.dart",
    "package:flutter_app/helpers/utils_hlp.dart",
    "package:flutter_app/pages/examples/form_input_pg.dart",
    "package:flutter_app/widgets/button_wdg.dart",
    "package:flutter_app/widgets/dialog_wdg.dart",
    "package:flutter_app/widgets/snackbar_wdg.dart",
    "package:flutter_app/widgets/textfield_wdg.dart",
    "package:flutter_app/widgets/form_input_wdg.dart",
    "package:flutter_app/widgets/my_box_decoration.dart",
    "package:flutter_app/widgets/my_text.dart",
    "file:///zapp/project/lib/models/product_mdl.dart",
    "file:///zapp/project/lib/models/store_mdl.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/shared_preferences-2.2.2/lib/shared_preferences.dart",
    "package:shared_preferences/shared_preferences.dart",
    "file:///zapp/project/lib/helpers/base_client_http_hlp.dart",
    "file:///zapp/project/lib/helpers/exception_hlp.dart",
    "file:///zapp/project/lib/helpers/dialog_hlp.dart",
    "file:///zapp/project/lib/helpers/responsive_hlp.dart",
    "file:///zapp/project/lib/helpers/session_hlp.dart",
    "file:///zapp/project/lib/helpers/utils_hlp.dart",
    "package:http/src/client.dart",
    "package:http/src/exception.dart",
    "package:http/src/base_request.dart",
    "package:http/src/request.dart",
    "package:http/src/base_response.dart",
    "package:http/src/response.dart",
    "package:http/src/streamed_request.dart",
    "package:http/src/base_client.dart",
    "package:http/src/byte_stream.dart",
    "package:http/src/multipart_file.dart",
    "package:http/src/multipart_request.dart",
    "package:http/src/streamed_response.dart",
    "package:flutter_app/configs/themes.dart",
    "package:http/src/browser_client.dart",
    "package:http_parser/src/authentication_challenge.dart",
    "package:http_parser/src/case_insensitive_map.dart",
    "package:http_parser/src/chunked_coding.dart",
    "package:http_parser/src/media_type.dart",
    "package:http_parser/src/chunked_coding/decoder.dart",
    "package:http_parser/src/chunked_coding/encoder.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_queue.dart",
    "package:typed_data/src/typed_queue.dart",
    "package:typed_data/src/typed_buffer.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T$.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T$.ListOfStringTodynamic().as(C[0] || CT.C0)(T$.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T$.dynamicToNull()));
      }
    }, T$.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T$.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T$.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T$.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T$.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({debugShowCheckedModeBanner: false, theme: themes.Themes.light, initialRoute: "/product", routes: new (T$.IdentityMapOfString$BuildContextToWidget()).from(["/", dart.fn(context => new home_pg.HomePage.new(), T$.BuildContextToHomePage()), "/home", dart.fn(context => new home_pg.HomePage.new(), T$.BuildContextToHomePage()), "/product", dart.fn(context => new product_pg.ProductPage.new(), T$.BuildContextToProductPage()), "/cart", dart.fn(context => new cart_pg.CartPage.new(), T$.BuildContextToCartPage()), "/button", dart.fn(context => new button_pg.ButtonPage.new(), T$.BuildContextToButtonPage()), "/formInput", dart.fn(context => new form_input_pg.FormInputPage.new(), T$.BuildContextToFormInputPage()), "/sliver", dart.fn(context => new sliver_vw.SliverView.new(), T$.BuildContextToSliverView())])});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.main = function main$0() {
    binding.runApp(new (T$.ChangeNotifierProviderOfCartProvider()).new({create: dart.fn(context => new cart_prov.CartProvider.new(), T$.BuildContextToCartProvider()), child: C[1] || CT.C1}));
  };
  web_plugin_registrant.registerPlugins = function registerPlugins(pluginRegistrar = null) {
    let t0;
    let registrar = (t0 = pluginRegistrar, t0 == null ? plugin_registry.webPluginRegistrar : t0);
    shared_preferences_web.SharedPreferencesPlugin.registerWith(registrar);
    registrar.registerMessageHandler();
  };
  var _products = dart.privateName(cart_prov, "_products");
  cart_prov.CartProvider = class CartProvider extends change_notifier.ChangeNotifier {
    get products() {
      return this[_products];
    }
    add(item) {
      this[_products][$add](item);
      this.notifyListeners();
    }
    remove(item) {
      this[_products][$remove](item);
      this.notifyListeners();
    }
    removeAll() {
      this[_products][$clear]();
      this.notifyListeners();
    }
    getCartTotal() {
      return this[_products][$fold](core.double, 0, dart.fn((prevValue, element) => prevValue + element.price, T$.doubleAndProductModelTodouble()));
    }
    static ['_#new#tearOff']() {
      return new cart_prov.CartProvider.new();
    }
  };
  (cart_prov.CartProvider.new = function() {
    this[_products] = T$.JSArrayOfProductModel().of([]);
    cart_prov.CartProvider.__proto__.new.call(this);
    ;
  }).prototype = cart_prov.CartProvider.prototype;
  dart.addTypeTests(cart_prov.CartProvider);
  dart.addTypeCaches(cart_prov.CartProvider);
  dart.setMethodSignature(cart_prov.CartProvider, () => ({
    __proto__: dart.getMethods(cart_prov.CartProvider.__proto__),
    add: dart.fnType(dart.void, [product_mdl.ProductModel]),
    remove: dart.fnType(dart.void, [product_mdl.ProductModel]),
    removeAll: dart.fnType(dart.void, []),
    getCartTotal: dart.fnType(core.double, [])
  }));
  dart.setGetterSignature(cart_prov.CartProvider, () => ({
    __proto__: dart.getGetters(cart_prov.CartProvider.__proto__),
    products: core.List$(product_mdl.ProductModel)
  }));
  dart.setLibraryUri(cart_prov.CartProvider, I[1]);
  dart.setFieldSignature(cart_prov.CartProvider, () => ({
    __proto__: dart.getFields(cart_prov.CartProvider.__proto__),
    [_products]: dart.finalFieldType(core.List$(product_mdl.ProductModel))
  }));
  form_input_pg.FormInputPage = class FormInputPage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new form_input_pg.FormInputPage.new({key: key});
    }
    createState() {
      return new form_input_pg._FormInputPageState.new();
    }
  };
  (form_input_pg.FormInputPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    form_input_pg.FormInputPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = form_input_pg.FormInputPage.prototype;
  dart.addTypeTests(form_input_pg.FormInputPage);
  dart.addTypeCaches(form_input_pg.FormInputPage);
  dart.setMethodSignature(form_input_pg.FormInputPage, () => ({
    __proto__: dart.getMethods(form_input_pg.FormInputPage.__proto__),
    createState: dart.fnType(framework.State$(form_input_pg.FormInputPage), [])
  }));
  dart.setLibraryUri(form_input_pg.FormInputPage, I[2]);
  form_input_pg._FormInputPageState = class _FormInputPageState extends framework.State$(form_input_pg.FormInputPage) {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text$.Text.new("Example: Form Input")}), body: new single_child_scroll_view.SingleChildScrollView.new({padding: new edge_insets.EdgeInsets.all(10), child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new text$.Text.new("Form input Text"), form_input_wdg.MyForms.text(context, this.txtName, "Name"), new basic.SizedBox.new({height: 5}), form_input_wdg.MyForms.text(context, this.txtName, "Email"), new basic.SizedBox.new({height: 5}), form_input_wdg.MyForms.password(context, this.txtName, "Password"), new basic.SizedBox.new({height: 5}), form_input_wdg.MyForms.textIconned(context, this.txtName, "Password", new icon.Icon.new(icons.Icons.cabin))])})})});
    }
    static ['_#new#tearOff']() {
      return new form_input_pg._FormInputPageState.new();
    }
  };
  (form_input_pg._FormInputPageState.new = function() {
    this.txtName = new editable_text.TextEditingController.new();
    form_input_pg._FormInputPageState.__proto__.new.call(this);
    ;
  }).prototype = form_input_pg._FormInputPageState.prototype;
  dart.addTypeTests(form_input_pg._FormInputPageState);
  dart.addTypeCaches(form_input_pg._FormInputPageState);
  dart.setMethodSignature(form_input_pg._FormInputPageState, () => ({
    __proto__: dart.getMethods(form_input_pg._FormInputPageState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(form_input_pg._FormInputPageState, I[2]);
  dart.setFieldSignature(form_input_pg._FormInputPageState, () => ({
    __proto__: dart.getFields(form_input_pg._FormInputPageState.__proto__),
    txtName: dart.finalFieldType(editable_text.TextEditingController)
  }));
  var _getFilteredKeys = dart.privateName(shared_preferences_web, "_getFilteredKeys");
  var _decodeValue = dart.privateName(shared_preferences_web, "_decodeValue");
  var _encodeValue = dart.privateName(shared_preferences_web, "_encodeValue");
  plugin_platform_interface.PlatformInterface = class PlatformInterface extends core.Object {
    static verify(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: true});
    }
    static verifyToken(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: false});
    }
    static _verify(instance, token, opts) {
      let preventConstObject = opts && 'preventConstObject' in opts ? opts.preventConstObject : null;
      if (plugin_platform_interface.MockPlatformInterfaceMixin.is(instance)) {
        let assertionsEnabled = false;
        if (!dart.fn(() => {
          assertionsEnabled = true;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 92, 14, "() {\n        assertionsEnabled = true;\n        return true;\n      }()");
        if (!assertionsEnabled) {
          dart.throw(new core.AssertionError.new("`MockPlatformInterfaceMixin` is not intended for use in release builds."));
        }
        return;
      }
      if (preventConstObject && plugin_platform_interface.PlatformInterface._instanceTokens._get(instance) === (C[2] || CT.C2)) {
        dart.throw(new core.AssertionError.new("`const Object()` cannot be used as the token."));
      }
      if (token !== plugin_platform_interface.PlatformInterface._instanceTokens._get(instance)) {
        dart.throw(new core.AssertionError.new("Platform interfaces must not be implemented with `implements`"));
      }
    }
  };
  (plugin_platform_interface.PlatformInterface.new = function(opts) {
    let token = opts && 'token' in opts ? opts.token : null;
    plugin_platform_interface.PlatformInterface._instanceTokens._set(this, token);
  }).prototype = plugin_platform_interface.PlatformInterface.prototype;
  dart.addTypeTests(plugin_platform_interface.PlatformInterface);
  dart.addTypeCaches(plugin_platform_interface.PlatformInterface);
  dart.setStaticMethodSignature(plugin_platform_interface.PlatformInterface, () => ['verify', 'verifyToken', '_verify']);
  dart.setLibraryUri(plugin_platform_interface.PlatformInterface, I[4]);
  dart.setStaticFieldSignature(plugin_platform_interface.PlatformInterface, () => ['_instanceTokens']);
  dart.defineLazy(plugin_platform_interface.PlatformInterface, {
    /*plugin_platform_interface.PlatformInterface._instanceTokens*/get _instanceTokens() {
      return new (T$.ExpandoOfObject()).new();
    }
  }, false);
  shared_preferences_platform_interface.SharedPreferencesStorePlatform = class SharedPreferencesStorePlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      return shared_preferences_platform_interface.SharedPreferencesStorePlatform._instance;
    }
    static set instance(instance) {
      if (!instance.isMock) {
        plugin_platform_interface.PlatformInterface.verify(instance, shared_preferences_platform_interface.SharedPreferencesStorePlatform._token);
      }
      shared_preferences_platform_interface.SharedPreferencesStorePlatform._instance = instance;
    }
    get isMock() {
      return false;
    }
    clearWithPrefix(prefix) {
      dart.throw(new core.UnimplementedError.new("clearWithPrefix is not implemented."));
    }
    clearWithParameters(parameters) {
      dart.throw(new core.UnimplementedError.new("clearWithParameters is not implemented."));
    }
    getAllWithPrefix(prefix) {
      dart.throw(new core.UnimplementedError.new("getAllWithPrefix is not implemented."));
    }
    getAllWithParameters(parameters) {
      dart.throw(new core.UnimplementedError.new("getAllWithParameters is not implemented."));
    }
  };
  (shared_preferences_platform_interface.SharedPreferencesStorePlatform.new = function() {
    shared_preferences_platform_interface.SharedPreferencesStorePlatform.__proto__.new.call(this, {token: shared_preferences_platform_interface.SharedPreferencesStorePlatform._token});
    ;
  }).prototype = shared_preferences_platform_interface.SharedPreferencesStorePlatform.prototype;
  dart.addTypeTests(shared_preferences_platform_interface.SharedPreferencesStorePlatform);
  dart.addTypeCaches(shared_preferences_platform_interface.SharedPreferencesStorePlatform);
  dart.setMethodSignature(shared_preferences_platform_interface.SharedPreferencesStorePlatform, () => ({
    __proto__: dart.getMethods(shared_preferences_platform_interface.SharedPreferencesStorePlatform.__proto__),
    clearWithPrefix: dart.fnType(async.Future$(core.bool), [core.String]),
    clearWithParameters: dart.fnType(async.Future$(core.bool), [types.ClearParameters]),
    getAllWithPrefix: dart.fnType(async.Future$(core.Map$(core.String, core.Object)), [core.String]),
    getAllWithParameters: dart.fnType(async.Future$(core.Map$(core.String, core.Object)), [types.GetAllParameters])
  }));
  dart.setGetterSignature(shared_preferences_platform_interface.SharedPreferencesStorePlatform, () => ({
    __proto__: dart.getGetters(shared_preferences_platform_interface.SharedPreferencesStorePlatform.__proto__),
    isMock: core.bool
  }));
  dart.setStaticGetterSignature(shared_preferences_platform_interface.SharedPreferencesStorePlatform, () => ['instance']);
  dart.setStaticSetterSignature(shared_preferences_platform_interface.SharedPreferencesStorePlatform, () => ['instance']);
  dart.setLibraryUri(shared_preferences_platform_interface.SharedPreferencesStorePlatform, I[5]);
  dart.setStaticFieldSignature(shared_preferences_platform_interface.SharedPreferencesStorePlatform, () => ['_token', '_instance']);
  dart.defineLazy(shared_preferences_platform_interface.SharedPreferencesStorePlatform, {
    /*shared_preferences_platform_interface.SharedPreferencesStorePlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*shared_preferences_platform_interface.SharedPreferencesStorePlatform._instance*/get _instance() {
      return new method_channel_shared_preferences.MethodChannelSharedPreferencesStore.new();
    },
    set _instance(value) {}
  }, false);
  shared_preferences_web.SharedPreferencesPlugin = class SharedPreferencesPlugin extends shared_preferences_platform_interface.SharedPreferencesStorePlatform {
    static registerWith(registrar) {
      shared_preferences_platform_interface.SharedPreferencesStorePlatform.instance = new shared_preferences_web.SharedPreferencesPlugin.new();
    }
    clear() {
      return async.async(core.bool, (function* clear() {
        return this.clearWithParameters(new types.ClearParameters.new({filter: new types.PreferencesFilter.new({prefix: "flutter."})}));
      }).bind(this));
    }
    clearWithPrefix(prefix) {
      return async.async(core.bool, (function* clearWithPrefix() {
        return this.clearWithParameters(new types.ClearParameters.new({filter: new types.PreferencesFilter.new({prefix: prefix})}));
      }).bind(this));
    }
    clearWithParameters(parameters) {
      return async.async(core.bool, (function* clearWithParameters() {
        let filter = parameters.filter;
        this[_getFilteredKeys](filter.prefix, {allowList: filter.allowList})[$forEach](dart.bind(html.window[$localStorage], $remove));
        return true;
      }).bind(this));
    }
    getAll() {
      return async.async(T$.MapOfString$Object(), (function* getAll() {
        return this.getAllWithParameters(new types.GetAllParameters.new({filter: new types.PreferencesFilter.new({prefix: "flutter."})}));
      }).bind(this));
    }
    getAllWithPrefix(prefix) {
      return async.async(T$.MapOfString$Object(), (function* getAllWithPrefix() {
        return this.getAllWithParameters(new types.GetAllParameters.new({filter: new types.PreferencesFilter.new({prefix: prefix})}));
      }).bind(this));
    }
    getAllWithParameters(parameters) {
      return async.async(T$.MapOfString$Object(), (function* getAllWithParameters() {
        let filter = parameters.filter;
        let allData = new (T$.IdentityMapOfString$Object()).new();
        for (let key of this[_getFilteredKeys](filter.prefix, {allowList: filter.allowList})) {
          allData[$_set](key, this[_decodeValue](dart.nullCheck(html.window[$localStorage][$_get](key))));
        }
        return allData;
      }).bind(this));
    }
    remove(key) {
      return async.async(core.bool, function* remove() {
        html.window[$localStorage][$remove](key);
        return true;
      });
    }
    setValue(valueType, key, value) {
      return async.async(core.bool, (function* setValue() {
        html.window[$localStorage][$_set](key, this[_encodeValue](value));
        return true;
      }).bind(this));
    }
    [_getFilteredKeys](prefix, opts) {
      let allowList = opts && 'allowList' in opts ? opts.allowList : null;
      return html.window[$localStorage][$keys][$where](dart.fn(key => {
        let t0, t0$;
        return key[$startsWith](prefix) && dart.test((t0$ = (t0 = allowList, t0 == null ? null : t0.contains(key)), t0$ == null ? true : t0$));
      }, T$.StringTobool()));
    }
    [_encodeValue](value) {
      return convert.json.encode(value);
    }
    [_decodeValue](encodedValue) {
      let decodedValue = convert.json.decode(encodedValue);
      if (core.List.is(decodedValue)) {
        return decodedValue[$cast](core.String);
      }
      return dart.nullCheck(decodedValue);
    }
    static ['_#new#tearOff']() {
      return new shared_preferences_web.SharedPreferencesPlugin.new();
    }
  };
  (shared_preferences_web.SharedPreferencesPlugin.new = function() {
    shared_preferences_web.SharedPreferencesPlugin.__proto__.new.call(this);
    ;
  }).prototype = shared_preferences_web.SharedPreferencesPlugin.prototype;
  dart.addTypeTests(shared_preferences_web.SharedPreferencesPlugin);
  dart.addTypeCaches(shared_preferences_web.SharedPreferencesPlugin);
  dart.setMethodSignature(shared_preferences_web.SharedPreferencesPlugin, () => ({
    __proto__: dart.getMethods(shared_preferences_web.SharedPreferencesPlugin.__proto__),
    clear: dart.fnType(async.Future$(core.bool), []),
    getAll: dart.fnType(async.Future$(core.Map$(core.String, core.Object)), []),
    remove: dart.fnType(async.Future$(core.bool), [core.String]),
    setValue: dart.fnType(async.Future$(core.bool), [core.String, core.String, dart.nullable(core.Object)]),
    [_getFilteredKeys]: dart.fnType(core.Iterable$(core.String), [core.String], {allowList: dart.nullable(core.Set$(core.String))}, {}),
    [_encodeValue]: dart.fnType(core.String, [dart.nullable(core.Object)]),
    [_decodeValue]: dart.fnType(core.Object, [core.String])
  }));
  dart.setStaticMethodSignature(shared_preferences_web.SharedPreferencesPlugin, () => ['registerWith']);
  dart.setLibraryUri(shared_preferences_web.SharedPreferencesPlugin, I[6]);
  dart.setStaticFieldSignature(shared_preferences_web.SharedPreferencesPlugin, () => ['_defaultPrefix']);
  dart.defineLazy(shared_preferences_web.SharedPreferencesPlugin, {
    /*shared_preferences_web.SharedPreferencesPlugin._defaultPrefix*/get _defaultPrefix() {
      return "flutter.";
    }
  }, false);
  var builder$ = dart.privateName(provider$, "InheritedProvider.builder");
  var _lazy = dart.privateName(provider$, "_lazy");
  var _delegate = dart.privateName(provider$, "_delegate");
  var _child = dart.privateName(nested, "SingleChildStatelessWidget._child");
  var _child$ = dart.privateName(nested, "_child");
  nested.SingleChildStatelessWidget = class SingleChildStatelessWidget extends framework.StatelessWidget {
    get [_child$]() {
      return this[_child];
    }
    set [_child$](value) {
      super[_child$] = value;
    }
    build(context) {
      return this.buildWithChild(context, this[_child$]);
    }
    createElement() {
      return new nested.SingleChildStatelessElement.new(this);
    }
  };
  (nested.SingleChildStatelessWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[_child] = child;
    nested.SingleChildStatelessWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.SingleChildStatelessWidget.prototype;
  dart.addTypeTests(nested.SingleChildStatelessWidget);
  dart.addTypeCaches(nested.SingleChildStatelessWidget);
  nested.SingleChildStatelessWidget[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.SingleChildStatelessWidget, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatelessWidget.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    createElement: dart.fnType(nested.SingleChildStatelessElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatelessWidget, I[8]);
  dart.setFieldSignature(nested.SingleChildStatelessWidget, () => ({
    __proto__: dart.getFields(nested.SingleChildStatelessWidget.__proto__),
    [_child$]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const _is_InheritedProvider_default = Symbol('_is_InheritedProvider_default');
  provider$.InheritedProvider$ = dart.generic(T => {
    var __t$_CreateInheritedProviderOfT = () => (__t$_CreateInheritedProviderOfT = dart.constFn(provider$._CreateInheritedProvider$(T)))();
    var __t$_ValueInheritedProviderOfT = () => (__t$_ValueInheritedProviderOfT = dart.constFn(provider$._ValueInheritedProvider$(T)))();
    var __t$_InheritedProviderElementOfT = () => (__t$_InheritedProviderElementOfT = dart.constFn(provider$._InheritedProviderElement$(T)))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$_InheritedProviderScopeOfTN = () => (__t$_InheritedProviderScopeOfTN = dart.constFn(provider$._InheritedProviderScope$(__t$TN())))();
    class InheritedProvider extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose, builder: builder, lazy: lazy, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, startListening: startListening, lazy: lazy, builder: builder, child: child});
      }
      static ['_#_constructor#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let delegate = opts && 'delegate' in opts ? opts.delegate : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T))._constructor({key: key, delegate: delegate, lazy: lazy, builder: builder, child: child});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this[_delegate].debugFillProperties(properties);
      }
      createElement() {
        return new (__t$_InheritedProviderElementOfT()).new(this);
      }
      buildWithChild(context, child) {
        if (!(this.builder != null || child != null)) dart.assertFailed(dart.str(this[$runtimeType]) + " used outside of MultiProvider must specify a child", I[7], 158, 7, "builder != null || child != null");
        return new (__t$_InheritedProviderScopeOfTN()).new({owner: this, debugType: dart.str(this[$runtimeType]), child: this.builder != null ? new basic.Builder.new({builder: dart.fn(context => dart.nullCheck(this.builder)(context, child), T$.BuildContextToWidget())}) : dart.nullCheck(child)});
      }
    }
    (InheritedProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$] = builder;
      this[_lazy] = lazy;
      this[_delegate] = new (__t$_CreateInheritedProviderOfT()).new({create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose});
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    (InheritedProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$] = builder;
      this[_lazy] = lazy;
      this[_delegate] = new (__t$_ValueInheritedProviderOfT()).new({value: value, updateShouldNotify: updateShouldNotify, startListening: startListening});
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    (InheritedProvider._constructor = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$] = builder;
      this[_lazy] = lazy;
      this[_delegate] = delegate;
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    dart.addTypeTests(InheritedProvider);
    InheritedProvider.prototype[_is_InheritedProvider_default] = true;
    dart.addTypeCaches(InheritedProvider);
    dart.setMethodSignature(InheritedProvider, () => ({
      __proto__: dart.getMethods(InheritedProvider.__proto__),
      createElement: dart.fnType(provider$._InheritedProviderElement$(T), []),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(InheritedProvider, I[9]);
    dart.setFieldSignature(InheritedProvider, () => ({
      __proto__: dart.getFields(InheritedProvider.__proto__),
      [_delegate]: dart.finalFieldType(provider$._Delegate$(T)),
      [_lazy]: dart.finalFieldType(dart.nullable(core.bool)),
      builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])))
    }));
    return InheritedProvider;
  });
  provider$.InheritedProvider = provider$.InheritedProvider$();
  dart.addTypeTests(provider$.InheritedProvider, _is_InheritedProvider_default);
  const _is_DeferredInheritedProvider_default = Symbol('_is_DeferredInheritedProvider_default');
  provider$.DeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_CreateDeferredInheritedProviderOfT$R = () => (__t$_CreateDeferredInheritedProviderOfT$R = dart.constFn(provider$._CreateDeferredInheritedProvider$(T, R)))();
    var __t$_ValueDeferredInheritedProviderOfT$R = () => (__t$_ValueDeferredInheritedProviderOfT$R = dart.constFn(provider$._ValueDeferredInheritedProvider$(T, R)))();
    class DeferredInheritedProvider extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.DeferredInheritedProvider$(T, R)).new({key: key, create: create, dispose: dispose, startListening: startListening, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.DeferredInheritedProvider$(T, R)).value({key: key, value: value, startListening: startListening, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (DeferredInheritedProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      DeferredInheritedProvider.__proto__._constructor.call(this, {key: key, child: child, lazy: lazy, builder: builder, delegate: new (__t$_CreateDeferredInheritedProviderOfT$R()).new({create: create, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: startListening})});
      ;
    }).prototype = DeferredInheritedProvider.prototype;
    (DeferredInheritedProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      DeferredInheritedProvider.__proto__._constructor.call(this, {key: key, lazy: lazy, builder: builder, delegate: new (__t$_ValueDeferredInheritedProviderOfT$R()).new(value, updateShouldNotify, startListening), child: child});
      ;
    }).prototype = DeferredInheritedProvider.prototype;
    dart.addTypeTests(DeferredInheritedProvider);
    DeferredInheritedProvider.prototype[_is_DeferredInheritedProvider_default] = true;
    dart.addTypeCaches(DeferredInheritedProvider);
    dart.setLibraryUri(DeferredInheritedProvider, I[9]);
    return DeferredInheritedProvider;
  });
  provider$.DeferredInheritedProvider = provider$.DeferredInheritedProvider$();
  dart.addTypeTests(provider$.DeferredInheritedProvider, _is_DeferredInheritedProvider_default);
  const _is_StreamProvider_default = Symbol('_is_StreamProvider_default');
  async_provider.StreamProvider$ = dart.generic(T => {
    class StreamProvider extends provider$.DeferredInheritedProvider$(dart.nullable(async.Stream$(T)), T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.StreamProvider$(T)).new({key: key, create: create, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.StreamProvider$(T)).value({key: key, value: value, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (StreamProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      StreamProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, updateShouldNotify: updateShouldNotify, startListening: async_provider._streamStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = StreamProvider.prototype;
    (StreamProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      StreamProvider.__proto__.value.call(this, {key: key, lazy: lazy, builder: builder, value: value, updateShouldNotify: updateShouldNotify, startListening: async_provider._streamStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = StreamProvider.prototype;
    dart.addTypeTests(StreamProvider);
    StreamProvider.prototype[_is_StreamProvider_default] = true;
    dart.addTypeCaches(StreamProvider);
    dart.setLibraryUri(StreamProvider, I[10]);
    return StreamProvider;
  });
  async_provider.StreamProvider = async_provider.StreamProvider$();
  dart.addTypeTests(async_provider.StreamProvider, _is_StreamProvider_default);
  const _is_FutureProvider_default = Symbol('_is_FutureProvider_default');
  async_provider.FutureProvider$ = dart.generic(T => {
    class FutureProvider extends provider$.DeferredInheritedProvider$(dart.nullable(async.Future$(T)), T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.FutureProvider$(T)).new({key: key, create: create, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.FutureProvider$(T)).value({key: key, value: value, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
    }
    (FutureProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      FutureProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, updateShouldNotify: updateShouldNotify, startListening: async_provider._futureStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = FutureProvider.prototype;
    (FutureProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      FutureProvider.__proto__.value.call(this, {key: key, builder: builder, lazy: false, value: value, updateShouldNotify: updateShouldNotify, startListening: async_provider._futureStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = FutureProvider.prototype;
    dart.addTypeTests(FutureProvider);
    FutureProvider.prototype[_is_FutureProvider_default] = true;
    dart.addTypeCaches(FutureProvider);
    dart.setLibraryUri(FutureProvider, I[10]);
    return FutureProvider;
  });
  async_provider.FutureProvider = async_provider.FutureProvider$();
  dart.addTypeTests(async_provider.FutureProvider, _is_FutureProvider_default);
  async_provider._streamStartListening = function _streamStartListening(T, opts) {
    let initialData = opts && 'initialData' in opts ? opts.initialData : null;
    let catchError = opts && 'catchError' in opts ? opts.catchError : null;
    return dart.fn((e, setState, controller, __) => {
      if (!e.hasValue) {
        setState(initialData);
      }
      if (controller == null) {
        return dart.fn(() => {
        }, T$.VoidTovoid());
      }
      let sub = controller.listen(setState, {onError: dart.fn(error => {
          if (catchError != null) {
            setState(catchError(e, error));
          } else {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({library: "provider", exception: assertions.FlutterError.new("An exception was throw by " + dart.str(dart.runtimeType(controller)) + " listened by\nStreamProvider<" + dart.str(dart.wrapType(T)) + ">, but no `catchError` was provided.\n\nException:\n" + dart.str(error) + "\n")}));
          }
        }, T$.ObjectNToNull())});
      return dart.bind(sub, 'cancel');
    }, dart.fnType(T$.VoidTovoid(), [provider$.InheritedContext$(dart.nullable(T)), dart.fnType(dart.void, [T]), dart.nullable(async.Stream$(T)), dart.nullable(T)]));
  };
  async_provider._futureStartListening = function _futureStartListening(T, opts) {
    let initialData = opts && 'initialData' in opts ? opts.initialData : null;
    let catchError = opts && 'catchError' in opts ? opts.catchError : null;
    return dart.fn((e, setState, controller, __) => {
      let t0;
      if (!e.hasValue) {
        setState(initialData);
      }
      let canceled = false;
      t0 = controller;
      t0 == null ? null : t0.then(core.Null, dart.fn(value => {
        if (canceled) {
          return;
        }
        setState(value);
      }, dart.fnType(core.Null, [T])), {onError: dart.fn(error => {
          if (canceled) {
            return;
          }
          if (catchError != null) {
            setState(catchError(e, error));
          } else {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({library: "provider", exception: assertions.FlutterError.new("An exception was throw by " + dart.str(dart.runtimeType(controller)) + " listened by\nFutureProvider<" + dart.str(dart.wrapType(T)) + ">, but no `catchError` was provided.\n\nException:\n" + dart.str(error) + "\n")}));
          }
        }, T$.ObjectNToNull())});
      return dart.fn(() => canceled = true, T$.VoidTovoid());
    }, dart.fnType(T$.VoidTovoid(), [provider$.InheritedContext$(dart.nullable(T)), dart.fnType(dart.void, [T]), dart.nullable(async.Future$(T)), dart.nullable(T)]));
  };
  const _is_ListenableProvider_default = Symbol('_is_ListenableProvider_default');
  listenable_provider.ListenableProvider$ = dart.generic(T => {
    class ListenableProvider extends provider$.InheritedProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProvider$(T)).new({key: key, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
      static _startListening(e, value) {
        let t0;
        t0 = value;
        t0 == null ? null : t0.addListener(dart.bind(e, 'markNeedsNotifyDependents'));
        return dart.fn(() => {
          let t0;
          t0 = value;
          return t0 == null ? null : t0.removeListener(dart.bind(e, 'markNeedsNotifyDependents'));
        }, T$.VoidTovoid());
      }
    }
    (ListenableProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProvider.__proto__.new.call(this, {key: key, startListening: C[4] || CT.C4, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ListenableProvider.prototype;
    (ListenableProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProvider.__proto__.value.call(this, {key: key, builder: builder, value: value, updateShouldNotify: updateShouldNotify, startListening: C[4] || CT.C4, child: child});
      ;
    }).prototype = ListenableProvider.prototype;
    dart.addTypeTests(ListenableProvider);
    ListenableProvider.prototype[_is_ListenableProvider_default] = true;
    dart.addTypeCaches(ListenableProvider);
    dart.setStaticMethodSignature(ListenableProvider, () => ['_startListening']);
    dart.setLibraryUri(ListenableProvider, I[11]);
    return ListenableProvider;
  });
  listenable_provider.ListenableProvider = listenable_provider.ListenableProvider$();
  dart.addTypeTests(listenable_provider.ListenableProvider, _is_ListenableProvider_default);
  const _is_ChangeNotifierProvider_default = Symbol('_is_ChangeNotifierProvider_default');
  change_notifier_provider.ChangeNotifierProvider$ = dart.generic(T => {
    class ChangeNotifierProvider extends listenable_provider.ListenableProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProvider$(T)).new({key: key, create: create, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProvider$(T)).value({key: key, value: value, builder: builder, child: child});
      }
      static _dispose(context, notifier) {
        let t0;
        t0 = notifier;
        t0 == null ? null : t0.dispose();
      }
    }
    (ChangeNotifierProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProvider.__proto__.new.call(this, {key: key, create: create, dispose: C[3] || CT.C3, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProvider.prototype;
    (ChangeNotifierProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProvider.__proto__.value.call(this, {key: key, builder: builder, value: value, child: child});
      ;
    }).prototype = ChangeNotifierProvider.prototype;
    dart.addTypeTests(ChangeNotifierProvider);
    ChangeNotifierProvider.prototype[_is_ChangeNotifierProvider_default] = true;
    dart.addTypeCaches(ChangeNotifierProvider);
    dart.setStaticMethodSignature(ChangeNotifierProvider, () => ['_dispose']);
    dart.setLibraryUri(ChangeNotifierProvider, I[12]);
    return ChangeNotifierProvider;
  });
  change_notifier_provider.ChangeNotifierProvider = change_notifier_provider.ChangeNotifierProvider$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProvider, _is_ChangeNotifierProvider_default);
  const _is_ListenableProxyProvider0_default = Symbol('_is_ListenableProxyProvider0_default');
  listenable_provider.ListenableProxyProvider0$ = dart.generic(R => {
    class ListenableProxyProvider0 extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider0$(R)).new({key: key, create: create, update: update, dispose: dispose, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider0.__proto__.new.call(this, {key: key, create: create, update: update, lazy: lazy, builder: builder, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: C[4] || CT.C4, child: child});
      ;
    }).prototype = ListenableProxyProvider0.prototype;
    dart.addTypeTests(ListenableProxyProvider0);
    ListenableProxyProvider0.prototype[_is_ListenableProxyProvider0_default] = true;
    dart.addTypeCaches(ListenableProxyProvider0);
    dart.setLibraryUri(ListenableProxyProvider0, I[11]);
    return ListenableProxyProvider0;
  });
  listenable_provider.ListenableProxyProvider0 = listenable_provider.ListenableProxyProvider0$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider0, _is_ListenableProxyProvider0_default);
  const _is_ListenableProxyProvider_default = Symbol('_is_ListenableProxyProvider_default');
  listenable_provider.ListenableProxyProvider$ = dart.generic((T, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider$(T, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider.prototype;
    dart.addTypeTests(ListenableProxyProvider);
    ListenableProxyProvider.prototype[_is_ListenableProxyProvider_default] = true;
    dart.addTypeCaches(ListenableProxyProvider);
    dart.setLibraryUri(ListenableProxyProvider, I[11]);
    return ListenableProxyProvider;
  });
  listenable_provider.ListenableProxyProvider = listenable_provider.ListenableProxyProvider$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider, _is_ListenableProxyProvider_default);
  const _is_ChangeNotifierProxyProvider_default = Symbol('_is_ChangeNotifierProxyProvider_default');
  change_notifier_provider.ChangeNotifierProxyProvider$ = dart.generic((T, R) => {
    class ChangeNotifierProxyProvider extends listenable_provider.ListenableProxyProvider$(T, R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider$(T, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[3] || CT.C3, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider);
    ChangeNotifierProxyProvider.prototype[_is_ChangeNotifierProxyProvider_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider);
    dart.setLibraryUri(ChangeNotifierProxyProvider, I[12]);
    return ChangeNotifierProxyProvider;
  });
  change_notifier_provider.ChangeNotifierProxyProvider = change_notifier_provider.ChangeNotifierProxyProvider$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider, _is_ChangeNotifierProxyProvider_default);
  const _is_ChangeNotifierProxyProvider0_default = Symbol('_is_ChangeNotifierProxyProvider0_default');
  change_notifier_provider.ChangeNotifierProxyProvider0$ = dart.generic(R => {
    class ChangeNotifierProxyProvider0 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider0$(R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider0.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[3] || CT.C3, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider0.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider0);
    ChangeNotifierProxyProvider0.prototype[_is_ChangeNotifierProxyProvider0_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider0);
    dart.setLibraryUri(ChangeNotifierProxyProvider0, I[12]);
    return ChangeNotifierProxyProvider0;
  });
  change_notifier_provider.ChangeNotifierProxyProvider0 = change_notifier_provider.ChangeNotifierProxyProvider0$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider0, _is_ChangeNotifierProxyProvider0_default);
  const _is_ListenableProxyProvider2_default = Symbol('_is_ListenableProxyProvider2_default');
  listenable_provider.ListenableProxyProvider2$ = dart.generic((T, T2, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider2 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider2.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider2.prototype;
    dart.addTypeTests(ListenableProxyProvider2);
    ListenableProxyProvider2.prototype[_is_ListenableProxyProvider2_default] = true;
    dart.addTypeCaches(ListenableProxyProvider2);
    dart.setLibraryUri(ListenableProxyProvider2, I[11]);
    return ListenableProxyProvider2;
  });
  listenable_provider.ListenableProxyProvider2 = listenable_provider.ListenableProxyProvider2$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider2, _is_ListenableProxyProvider2_default);
  const _is_ChangeNotifierProxyProvider2_default = Symbol('_is_ChangeNotifierProxyProvider2_default');
  change_notifier_provider.ChangeNotifierProxyProvider2$ = dart.generic((T, T2, R) => {
    class ChangeNotifierProxyProvider2 extends listenable_provider.ListenableProxyProvider2$(T, T2, R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider2.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[3] || CT.C3, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider2.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider2);
    ChangeNotifierProxyProvider2.prototype[_is_ChangeNotifierProxyProvider2_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider2);
    dart.setLibraryUri(ChangeNotifierProxyProvider2, I[12]);
    return ChangeNotifierProxyProvider2;
  });
  change_notifier_provider.ChangeNotifierProxyProvider2 = change_notifier_provider.ChangeNotifierProxyProvider2$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider2, _is_ChangeNotifierProxyProvider2_default);
  const _is_ListenableProxyProvider3_default = Symbol('_is_ListenableProxyProvider3_default');
  listenable_provider.ListenableProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider3 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider3.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider3.prototype;
    dart.addTypeTests(ListenableProxyProvider3);
    ListenableProxyProvider3.prototype[_is_ListenableProxyProvider3_default] = true;
    dart.addTypeCaches(ListenableProxyProvider3);
    dart.setLibraryUri(ListenableProxyProvider3, I[11]);
    return ListenableProxyProvider3;
  });
  listenable_provider.ListenableProxyProvider3 = listenable_provider.ListenableProxyProvider3$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider3, _is_ListenableProxyProvider3_default);
  const _is_ChangeNotifierProxyProvider3_default = Symbol('_is_ChangeNotifierProxyProvider3_default');
  change_notifier_provider.ChangeNotifierProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    class ChangeNotifierProxyProvider3 extends listenable_provider.ListenableProxyProvider3$(T, T2, T3, R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider3.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[3] || CT.C3, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider3.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider3);
    ChangeNotifierProxyProvider3.prototype[_is_ChangeNotifierProxyProvider3_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider3);
    dart.setLibraryUri(ChangeNotifierProxyProvider3, I[12]);
    return ChangeNotifierProxyProvider3;
  });
  change_notifier_provider.ChangeNotifierProxyProvider3 = change_notifier_provider.ChangeNotifierProxyProvider3$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider3, _is_ChangeNotifierProxyProvider3_default);
  const _is_ListenableProxyProvider4_default = Symbol('_is_ListenableProxyProvider4_default');
  listenable_provider.ListenableProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider4 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider4.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider4.prototype;
    dart.addTypeTests(ListenableProxyProvider4);
    ListenableProxyProvider4.prototype[_is_ListenableProxyProvider4_default] = true;
    dart.addTypeCaches(ListenableProxyProvider4);
    dart.setLibraryUri(ListenableProxyProvider4, I[11]);
    return ListenableProxyProvider4;
  });
  listenable_provider.ListenableProxyProvider4 = listenable_provider.ListenableProxyProvider4$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider4, _is_ListenableProxyProvider4_default);
  const _is_ChangeNotifierProxyProvider4_default = Symbol('_is_ChangeNotifierProxyProvider4_default');
  change_notifier_provider.ChangeNotifierProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    class ChangeNotifierProxyProvider4 extends listenable_provider.ListenableProxyProvider4$(T, T2, T3, T4, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider4.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[3] || CT.C3, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider4.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider4);
    ChangeNotifierProxyProvider4.prototype[_is_ChangeNotifierProxyProvider4_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider4);
    dart.setLibraryUri(ChangeNotifierProxyProvider4, I[12]);
    return ChangeNotifierProxyProvider4;
  });
  change_notifier_provider.ChangeNotifierProxyProvider4 = change_notifier_provider.ChangeNotifierProxyProvider4$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider4, _is_ChangeNotifierProxyProvider4_default);
  const _is_ListenableProxyProvider5_default = Symbol('_is_ListenableProxyProvider5_default');
  listenable_provider.ListenableProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider5 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider5.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider5.prototype;
    dart.addTypeTests(ListenableProxyProvider5);
    ListenableProxyProvider5.prototype[_is_ListenableProxyProvider5_default] = true;
    dart.addTypeCaches(ListenableProxyProvider5);
    dart.setLibraryUri(ListenableProxyProvider5, I[11]);
    return ListenableProxyProvider5;
  });
  listenable_provider.ListenableProxyProvider5 = listenable_provider.ListenableProxyProvider5$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider5, _is_ListenableProxyProvider5_default);
  const _is_ChangeNotifierProxyProvider5_default = Symbol('_is_ChangeNotifierProxyProvider5_default');
  change_notifier_provider.ChangeNotifierProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    class ChangeNotifierProxyProvider5 extends listenable_provider.ListenableProxyProvider5$(T, T2, T3, T4, T5, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider5.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[3] || CT.C3, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider5.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider5);
    ChangeNotifierProxyProvider5.prototype[_is_ChangeNotifierProxyProvider5_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider5);
    dart.setLibraryUri(ChangeNotifierProxyProvider5, I[12]);
    return ChangeNotifierProxyProvider5;
  });
  change_notifier_provider.ChangeNotifierProxyProvider5 = change_notifier_provider.ChangeNotifierProxyProvider5$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider5, _is_ChangeNotifierProxyProvider5_default);
  const _is_ListenableProxyProvider6_default = Symbol('_is_ListenableProxyProvider6_default');
  listenable_provider.ListenableProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider6 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider6.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), provider$.Provider.of(T6, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider6.prototype;
    dart.addTypeTests(ListenableProxyProvider6);
    ListenableProxyProvider6.prototype[_is_ListenableProxyProvider6_default] = true;
    dart.addTypeCaches(ListenableProxyProvider6);
    dart.setLibraryUri(ListenableProxyProvider6, I[11]);
    return ListenableProxyProvider6;
  });
  listenable_provider.ListenableProxyProvider6 = listenable_provider.ListenableProxyProvider6$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider6, _is_ListenableProxyProvider6_default);
  const _is_ChangeNotifierProxyProvider6_default = Symbol('_is_ChangeNotifierProxyProvider6_default');
  change_notifier_provider.ChangeNotifierProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    class ChangeNotifierProxyProvider6 extends listenable_provider.ListenableProxyProvider6$(T, T2, T3, T4, T5, T6, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider6.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[3] || CT.C3, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider6.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider6);
    ChangeNotifierProxyProvider6.prototype[_is_ChangeNotifierProxyProvider6_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider6);
    dart.setLibraryUri(ChangeNotifierProxyProvider6, I[12]);
    return ChangeNotifierProxyProvider6;
  });
  change_notifier_provider.ChangeNotifierProxyProvider6 = change_notifier_provider.ChangeNotifierProxyProvider6$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider6, _is_ChangeNotifierProxyProvider6_default);
  var builder$0 = dart.privateName(consumer, "Consumer.builder");
  const _is_Consumer_default = Symbol('_is_Consumer_default');
  consumer.Consumer$ = dart.generic(T => {
    class Consumer extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$0];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer$(T)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(T, context);
        t2 = child;
        return this.builder(t0, t1, t2);
      }
    }
    (Consumer.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$0] = builder;
      Consumer.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer.prototype;
    dart.addTypeTests(Consumer);
    Consumer.prototype[_is_Consumer_default] = true;
    dart.addTypeCaches(Consumer);
    dart.setMethodSignature(Consumer, () => ({
      __proto__: dart.getMethods(Consumer.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer, I[13]);
    dart.setFieldSignature(Consumer, () => ({
      __proto__: dart.getFields(Consumer.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, dart.nullable(framework.Widget)]))
    }));
    return Consumer;
  });
  consumer.Consumer = consumer.Consumer$();
  dart.addTypeTests(consumer.Consumer, _is_Consumer_default);
  var builder$1 = dart.privateName(consumer, "Consumer2.builder");
  const _is_Consumer2_default = Symbol('_is_Consumer2_default');
  consumer.Consumer2$ = dart.generic((A, B) => {
    class Consumer2 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$1];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer2$(A, B)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t3, t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(A, context);
        t2 = provider$.Provider.of(B, context);
        t3 = child;
        return this.builder(t0, t1, t2, t3);
      }
    }
    (Consumer2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$1] = builder;
      Consumer2.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer2.prototype;
    dart.addTypeTests(Consumer2);
    Consumer2.prototype[_is_Consumer2_default] = true;
    dart.addTypeCaches(Consumer2);
    dart.setMethodSignature(Consumer2, () => ({
      __proto__: dart.getMethods(Consumer2.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer2, I[13]);
    dart.setFieldSignature(Consumer2, () => ({
      __proto__: dart.getFields(Consumer2.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, dart.nullable(framework.Widget)]))
    }));
    return Consumer2;
  });
  consumer.Consumer2 = consumer.Consumer2$();
  dart.addTypeTests(consumer.Consumer2, _is_Consumer2_default);
  var builder$2 = dart.privateName(consumer, "Consumer3.builder");
  const _is_Consumer3_default = Symbol('_is_Consumer3_default');
  consumer.Consumer3$ = dart.generic((A, B, C) => {
    class Consumer3 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$2];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer3$(A, B, C)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t4, t3, t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(A, context);
        t2 = provider$.Provider.of(B, context);
        t3 = provider$.Provider.of(C, context);
        t4 = child;
        return this.builder(t0, t1, t2, t3, t4);
      }
    }
    (Consumer3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$2] = builder;
      Consumer3.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer3.prototype;
    dart.addTypeTests(Consumer3);
    Consumer3.prototype[_is_Consumer3_default] = true;
    dart.addTypeCaches(Consumer3);
    dart.setMethodSignature(Consumer3, () => ({
      __proto__: dart.getMethods(Consumer3.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer3, I[13]);
    dart.setFieldSignature(Consumer3, () => ({
      __proto__: dart.getFields(Consumer3.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, dart.nullable(framework.Widget)]))
    }));
    return Consumer3;
  });
  consumer.Consumer3 = consumer.Consumer3$();
  dart.addTypeTests(consumer.Consumer3, _is_Consumer3_default);
  var builder$3 = dart.privateName(consumer, "Consumer4.builder");
  const _is_Consumer4_default = Symbol('_is_Consumer4_default');
  consumer.Consumer4$ = dart.generic((A, B, C, D) => {
    class Consumer4 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$3];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer4$(A, B, C, D)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t5, t4, t3, t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(A, context);
        t2 = provider$.Provider.of(B, context);
        t3 = provider$.Provider.of(C, context);
        t4 = provider$.Provider.of(D, context);
        t5 = child;
        return this.builder(t0, t1, t2, t3, t4, t5);
      }
    }
    (Consumer4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$3] = builder;
      Consumer4.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer4.prototype;
    dart.addTypeTests(Consumer4);
    Consumer4.prototype[_is_Consumer4_default] = true;
    dart.addTypeCaches(Consumer4);
    dart.setMethodSignature(Consumer4, () => ({
      __proto__: dart.getMethods(Consumer4.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer4, I[13]);
    dart.setFieldSignature(Consumer4, () => ({
      __proto__: dart.getFields(Consumer4.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, dart.nullable(framework.Widget)]))
    }));
    return Consumer4;
  });
  consumer.Consumer4 = consumer.Consumer4$();
  dart.addTypeTests(consumer.Consumer4, _is_Consumer4_default);
  var builder$4 = dart.privateName(consumer, "Consumer5.builder");
  const _is_Consumer5_default = Symbol('_is_Consumer5_default');
  consumer.Consumer5$ = dart.generic((A, B, C, D, E) => {
    class Consumer5 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$4];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, E, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer5$(A, B, C, D, E)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t6, t5, t4, t3, t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(A, context);
        t2 = provider$.Provider.of(B, context);
        t3 = provider$.Provider.of(C, context);
        t4 = provider$.Provider.of(D, context);
        t5 = provider$.Provider.of(E, context);
        t6 = child;
        return this.builder(t0, t1, t2, t3, t4, t5, t6);
      }
    }
    (Consumer5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$4] = builder;
      Consumer5.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer5.prototype;
    dart.addTypeTests(Consumer5);
    Consumer5.prototype[_is_Consumer5_default] = true;
    dart.addTypeCaches(Consumer5);
    dart.setMethodSignature(Consumer5, () => ({
      __proto__: dart.getMethods(Consumer5.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer5, I[13]);
    dart.setFieldSignature(Consumer5, () => ({
      __proto__: dart.getFields(Consumer5.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, E, dart.nullable(framework.Widget)]))
    }));
    return Consumer5;
  });
  consumer.Consumer5 = consumer.Consumer5$();
  dart.addTypeTests(consumer.Consumer5, _is_Consumer5_default);
  var builder$5 = dart.privateName(consumer, "Consumer6.builder");
  const _is_Consumer6_default = Symbol('_is_Consumer6_default');
  consumer.Consumer6$ = dart.generic((A, B, C, D, E, F) => {
    class Consumer6 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$5];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, E, F, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer6$(A, B, C, D, E, F)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t7, t6, t5, t4, t3, t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(A, context);
        t2 = provider$.Provider.of(B, context);
        t3 = provider$.Provider.of(C, context);
        t4 = provider$.Provider.of(D, context);
        t5 = provider$.Provider.of(E, context);
        t6 = provider$.Provider.of(F, context);
        t7 = child;
        return this.builder(t0, t1, t2, t3, t4, t5, t6, t7);
      }
    }
    (Consumer6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$5] = builder;
      Consumer6.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer6.prototype;
    dart.addTypeTests(Consumer6);
    Consumer6.prototype[_is_Consumer6_default] = true;
    dart.addTypeCaches(Consumer6);
    dart.setMethodSignature(Consumer6, () => ({
      __proto__: dart.getMethods(Consumer6.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer6, I[13]);
    dart.setFieldSignature(Consumer6, () => ({
      __proto__: dart.getFields(Consumer6.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, E, F, dart.nullable(framework.Widget)]))
    }));
    return Consumer6;
  });
  consumer.Consumer6 = consumer.Consumer6$();
  dart.addTypeTests(consumer.Consumer6, _is_Consumer6_default);
  var _children = dart.privateName(nested, "_children");
  nested.Nested = class Nested extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let children = opts && 'children' in opts ? opts.children : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new nested.Nested.new({key: key, children: children, child: child});
    }
    build(context) {
      dart.throw(new core.StateError.new("implemented internally"));
    }
    createElement() {
      return new nested._NestedElement.new(this);
    }
  };
  (nested.Nested.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (!children[$isNotEmpty]) dart.assertFailed(null, I[14], 71, 16, "children.isNotEmpty");
    this[_children] = children;
    this[_child$] = child;
    nested.Nested.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.Nested.prototype;
  dart.addTypeTests(nested.Nested);
  dart.addTypeCaches(nested.Nested);
  nested.Nested[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.Nested, () => ({
    __proto__: dart.getMethods(nested.Nested.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    createElement: dart.fnType(nested._NestedElement, [])
  }));
  dart.setLibraryUri(nested.Nested, I[8]);
  dart.setFieldSignature(nested.Nested, () => ({
    __proto__: dart.getFields(nested.Nested.__proto__),
    [_children]: dart.finalFieldType(core.List$(nested.SingleChildWidget)),
    [_child$]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  provider$.MultiProvider = class MultiProvider extends nested.Nested {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let providers = opts && 'providers' in opts ? opts.providers : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      return new provider$.MultiProvider.new({key: key, providers: providers, child: child, builder: builder});
    }
  };
  (provider$.MultiProvider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let providers = opts && 'providers' in opts ? opts.providers : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    provider$.MultiProvider.__proto__.new.call(this, {key: key, children: providers, child: builder != null ? new basic.Builder.new({builder: dart.fn(context => builder(context, child), T$.BuildContextToWidget())}) : child});
    ;
  }).prototype = provider$.MultiProvider.prototype;
  dart.addTypeTests(provider$.MultiProvider);
  dart.addTypeCaches(provider$.MultiProvider);
  dart.setLibraryUri(provider$.MultiProvider, I[9]);
  const _is_Provider_default = Symbol('_is_Provider_default');
  provider$.Provider$ = dart.generic(T => {
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    class Provider extends provider$.InheritedProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.Provider$(T)).new({key: key, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.Provider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
      static of(T, context, opts) {
        let t0;
        let listen = opts && 'listen' in opts ? opts.listen : true;
        if (!(dart.nullCheck(context.owner).debugBuilding || listen === false || provider$.debugIsInInheritedProviderUpdate)) dart.assertFailed("Tried to listen to a value exposed with provider, from outside of the widget tree.\n\nThis is likely caused by an event handler (like a button's onPressed) that called\nProvider.of without passing `listen: false`.\n\nTo fix, write:\nProvider.of<" + dart.str(dart.wrapType(T)) + ">(context, listen: false);\n\nIt is unsupported because may pointlessly rebuild the widget associated to the\nevent handler, when the widget tree doesn't care about the value.\n\nThe context used was: " + dart.str(context) + "\n", I[15], 274, 7, "context.owner!.debugBuilding ||\n          listen == false ||\n          debugIsInInheritedProviderUpdate");
        let inheritedElement = provider$.Provider._inheritedElementOf(T, context);
        if (listen) {
          context.dependOnInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T)));
        }
        let value = (t0 = inheritedElement, t0 == null ? null : t0.value);
        if (provider$._isSoundMode) {
          if (!T.is(value)) {
            dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), context.widget[$runtimeType]));
          }
          return value;
        }
        return T.as(value);
      }
      static _inheritedElementOf(T, context) {
        if (!(context !== null)) dart.assertFailed("Tried to call context.read/watch/select or similar on a `context` that is null.\n\nThis can happen if you used the context of a StatefulWidget and that\nStatefulWidget was disposed.\n", I[15], 319, 12, "context != null");
        if (!(provider$._debugIsSelecting === false)) dart.assertFailed("Cannot call context.read/watch/select inside the callback of a context.select", I[15], 326, 7, "_debugIsSelecting == false");
        if (!!dart.wrapType(T)._equals(dart.wrapType(dart.dynamic))) dart.assertFailed("Tried to call Provider.of<dynamic>. This is likely a mistake and is therefore\nunsupported.\n\nIf you want to expose a variable that can be anything, consider changing\n`dynamic` to `Object` instead.\n", I[15], 330, 7, "T != dynamic");
        let inheritedElement = dart.nullable(provider$._InheritedProviderScopeElement$(dart.nullable(T))).as(context.getElementForInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T))));
        if (inheritedElement == null && !T.is(null)) {
          dart.throw(new provider$.ProviderNotFoundException.new(dart.wrapType(T), context.widget[$runtimeType]));
        }
        return inheritedElement;
      }
    }
    (Provider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Provider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, dispose: dispose, debugCheckInvalidValueType: dart.fn(value => {
          let t0;
          t0 = provider$.Provider.debugCheckInvalidValueType;
          return t0 == null ? null : t0(T, value);
        }, __t$TTovoid()), child: child});
      ;
    }).prototype = Provider.prototype;
    (Provider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (!dart.fn(() => {
        let t0;
        t0 = provider$.Provider.debugCheckInvalidValueType;
        t0 == null ? null : t0(T, value);
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[15], 243, 16, "() {\n          Provider.debugCheckInvalidValueType?.call<T>(value);\n          return true;\n        }()");
      Provider.__proto__.value.call(this, {key: key, builder: builder, value: value, updateShouldNotify: updateShouldNotify, child: child});
      ;
    }).prototype = Provider.prototype;
    dart.addTypeTests(Provider);
    Provider.prototype[_is_Provider_default] = true;
    dart.addTypeCaches(Provider);
    dart.setStaticMethodSignature(Provider, () => ['of', '_inheritedElementOf']);
    dart.setLibraryUri(Provider, I[9]);
    dart.setStaticFieldSignature(Provider, () => ['debugCheckInvalidValueType']);
    return Provider;
  });
  provider$.Provider = provider$.Provider$();
  dart.defineLazy(provider$.Provider, {
    /*provider$.Provider.debugCheckInvalidValueType*/get debugCheckInvalidValueType() {
      return dart.fn((T, value) => {
        if (!dart.fn(() => {
          if (change_notifier.Listenable.is(value) || async.Stream.is(value)) {
            dart.throw(assertions.FlutterError.new("Tried to use Provider with a subtype of Listenable/Stream (" + dart.str(dart.wrapType(T)) + ").\n\nThis is likely a mistake, as Provider will not automatically update dependents\nwhen " + dart.str(dart.wrapType(T)) + " is updated. Instead, consider changing Provider for more specific\nimplementation that handles the update mechanism, such as:\n\n- ListenableProvider\n- ChangeNotifierProvider\n- ValueListenableProvider\n- StreamProvider\n\nAlternatively, if you are making your own provider, consider using InheritedProvider.\n\nIf you think that this is not an error, you can disable this check by setting\nProvider.debugCheckInvalidValueType to `null` in your main file:\n\n```\nvoid main() {\n  Provider.debugCheckInvalidValueType = null;\n\n  runApp(MyApp());\n}\n```\n"));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[15], 385, 12, "() {\n      if (value is Listenable || value is Stream) {\n        throw FlutterError('''\nTried to use Provider with a subtype of Listenable/Stream ($T).\n\nThis is likely a mistake, as Provider will not automatically update dependents\nwhen $T is updated. Instead, consider changing Provider for more specific\nimplementation that handles the update mechanism, such as:\n\n- ListenableProvider\n- ChangeNotifierProvider\n- ValueListenableProvider\n- StreamProvider\n\nAlternatively, if you are making your own provider, consider using InheritedProvider.\n\nIf you think that this is not an error, you can disable this check by setting\nProvider.debugCheckInvalidValueType to `null` in your main file:\n\n```\nvoid main() {\n  Provider.debugCheckInvalidValueType = null;\n\n  runApp(MyApp());\n}\n```\n''');\n      }\n      return true;\n    }()");
      }, T$.TTovoid$1());
    },
    set debugCheckInvalidValueType(value) {}
  }, false);
  dart.addTypeTests(provider$.Provider, _is_Provider_default);
  var valueType$ = dart.privateName(provider$, "ProviderNullException.valueType");
  var widgetType$ = dart.privateName(provider$, "ProviderNullException.widgetType");
  provider$.ProviderNullException = class ProviderNullException extends core.Object {
    get valueType() {
      return this[valueType$];
    }
    set valueType(value) {
      super.valueType = value;
    }
    get widgetType() {
      return this[widgetType$];
    }
    set widgetType(value) {
      super.widgetType = value;
    }
    static ['_#new#tearOff'](valueType, widgetType) {
      return new provider$.ProviderNullException.new(valueType, widgetType);
    }
    toString() {
      ;
      return "Error: The widget " + dart.str(this.widgetType) + " tried to read Provider<" + dart.str(this.valueType) + "> but the matching\nprovider returned null.\n\nTo fix the error, consider changing Provider<" + dart.str(this.valueType) + "> to Provider<" + dart.str(this.valueType) + "?>.\n";
    }
  };
  (provider$.ProviderNullException.new = function(valueType, widgetType) {
    this[valueType$] = valueType;
    this[widgetType$] = widgetType;
    ;
  }).prototype = provider$.ProviderNullException.prototype;
  dart.addTypeTests(provider$.ProviderNullException);
  dart.addTypeCaches(provider$.ProviderNullException);
  provider$.ProviderNullException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(provider$.ProviderNullException, I[9]);
  dart.setFieldSignature(provider$.ProviderNullException, () => ({
    __proto__: dart.getFields(provider$.ProviderNullException.__proto__),
    valueType: dart.finalFieldType(core.Type),
    widgetType: dart.finalFieldType(core.Type)
  }));
  dart.defineExtensionMethods(provider$.ProviderNullException, ['toString']);
  var valueType$0 = dart.privateName(provider$, "ProviderNotFoundException.valueType");
  var widgetType$0 = dart.privateName(provider$, "ProviderNotFoundException.widgetType");
  provider$.ProviderNotFoundException = class ProviderNotFoundException extends core.Object {
    get valueType() {
      return this[valueType$0];
    }
    set valueType(value) {
      super.valueType = value;
    }
    get widgetType() {
      return this[widgetType$0];
    }
    set widgetType(value) {
      super.widgetType = value;
    }
    static ['_#new#tearOff'](valueType, widgetType) {
      return new provider$.ProviderNotFoundException.new(valueType, widgetType);
    }
    toString() {
      ;
      return "Error: Could not find the correct Provider<" + dart.str(this.valueType) + "> above this " + dart.str(this.widgetType) + " Widget\n\nThis happens because you used a `BuildContext` that does not include the provider\nof your choice. There are a few common scenarios:\n\n- You added a new provider in your `main.dart` and performed a hot-reload.\n  To fix, perform a hot-restart.\n\n- The provider you are trying to read is in a different route.\n\n  Providers are \"scoped\". So if you insert of provider inside a route, then\n  other routes will not be able to access that provider.\n\n- You used a `BuildContext` that is an ancestor of the provider you are trying to read.\n\n  Make sure that " + dart.str(this.widgetType) + " is under your MultiProvider/Provider<" + dart.str(this.valueType) + ">.\n  This usually happens when you are creating a provider and trying to read it immediately.\n\n  For example, instead of:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // Will throw a ProviderNotFoundError, because `context` is associated\n      // to the widget that is the parent of `Provider<Example>`\n      child: Text(context.watch<Example>().toString()),\n    );\n  }\n  ```\n\n  consider using `builder` like so:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // we use `builder` to obtain a new `BuildContext` that has access to the provider\n      builder: (context, child) {\n        // No longer throws\n        return Text(context.watch<Example>().toString());\n      }\n    );\n  }\n  ```\n\nIf none of these solutions work, consider asking for help on StackOverflow:\nhttps://stackoverflow.com/questions/tagged/flutter\n";
    }
  };
  (provider$.ProviderNotFoundException.new = function(valueType, widgetType) {
    this[valueType$0] = valueType;
    this[widgetType$0] = widgetType;
    ;
  }).prototype = provider$.ProviderNotFoundException.prototype;
  dart.addTypeTests(provider$.ProviderNotFoundException);
  dart.addTypeCaches(provider$.ProviderNotFoundException);
  provider$.ProviderNotFoundException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(provider$.ProviderNotFoundException, I[9]);
  dart.setFieldSignature(provider$.ProviderNotFoundException, () => ({
    __proto__: dart.getFields(provider$.ProviderNotFoundException.__proto__),
    valueType: dart.finalFieldType(core.Type),
    widgetType: dart.finalFieldType(core.Type)
  }));
  dart.defineExtensionMethods(provider$.ProviderNotFoundException, ['toString']);
  const _is__Delegate_default = Symbol('_is__Delegate_default');
  provider$._Delegate$ = dart.generic(T => {
    class _Delegate extends core.Object {
      debugFillProperties(properties) {
      }
    }
    (_Delegate.new = function() {
      ;
    }).prototype = _Delegate.prototype;
    dart.addTypeTests(_Delegate);
    _Delegate.prototype[_is__Delegate_default] = true;
    dart.addTypeCaches(_Delegate);
    dart.setMethodSignature(_Delegate, () => ({
      __proto__: dart.getMethods(_Delegate.__proto__),
      debugFillProperties: dart.fnType(dart.void, [diagnostics.DiagnosticPropertiesBuilder])
    }));
    dart.setLibraryUri(_Delegate, I[9]);
    return _Delegate;
  });
  provider$._Delegate = provider$._Delegate$();
  dart.addTypeTests(provider$._Delegate, _is__Delegate_default);
  const _is__DeferredDelegate_default = Symbol('_is__DeferredDelegate_default');
  provider$._DeferredDelegate$ = dart.generic((T, R) => {
    class _DeferredDelegate extends provider$._Delegate$(R) {}
    (_DeferredDelegate.new = function(updateShouldNotify, startListening) {
      this.updateShouldNotify = updateShouldNotify;
      this.startListening = startListening;
      ;
    }).prototype = _DeferredDelegate.prototype;
    dart.addTypeTests(_DeferredDelegate);
    _DeferredDelegate.prototype[_is__DeferredDelegate_default] = true;
    dart.addTypeCaches(_DeferredDelegate);
    dart.setLibraryUri(_DeferredDelegate, I[9]);
    dart.setFieldSignature(_DeferredDelegate, () => ({
      __proto__: dart.getFields(_DeferredDelegate.__proto__),
      updateShouldNotify: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [R, R]))),
      startListening: dart.finalFieldType(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(R)), dart.fnType(dart.void, [R]), T, dart.nullable(R)]))
    }));
    return _DeferredDelegate;
  });
  provider$._DeferredDelegate = provider$._DeferredDelegate$();
  dart.addTypeTests(provider$._DeferredDelegate, _is__DeferredDelegate_default);
  var _removeListener = dart.privateName(provider$, "_removeListener");
  var _value = dart.privateName(provider$, "_value");
  var _hasValue = dart.privateName(provider$, "_hasValue");
  var _isNotifyDependentsEnabled = dart.privateName(provider$, "_isNotifyDependentsEnabled");
  var element = dart.privateName(provider$, "_DelegateState.element");
  var _debugSetInheritedLock = dart.privateName(provider$, "_debugSetInheritedLock");
  const _is__DelegateState_default = Symbol('_is__DelegateState_default');
  provider$._DelegateState$ = dart.generic((T, D) => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$_InheritedProviderScopeElementOfTN = () => (__t$_InheritedProviderScopeElementOfTN = dart.constFn(provider$._InheritedProviderScopeElement$(__t$TN())))();
    var __t$_InheritedProviderScopeElementNOfTN = () => (__t$_InheritedProviderScopeElementNOfTN = dart.constFn(dart.nullable(__t$_InheritedProviderScopeElementOfTN())))();
    class _DelegateState extends core.Object {
      get element() {
        return this[element];
      }
      set element(value) {
        this[element] = __t$_InheritedProviderScopeElementNOfTN().as(value);
      }
      get delegate() {
        return D.as(dart.nullCheck(this.element).widget.owner[_delegate]);
      }
      debugSetInheritedLock(value) {
        return dart.nullCheck(this.element)[_debugSetInheritedLock](value);
      }
      willUpdateDelegate(newDelegate) {
        D.as(newDelegate);
        return false;
      }
      dispose() {
      }
      debugFillProperties(properties) {
      }
      build(opts) {
        let isBuildFromExternalSources = opts && 'isBuildFromExternalSources' in opts ? opts.isBuildFromExternalSources : null;
      }
    }
    (_DelegateState.new = function() {
      this[element] = null;
      ;
    }).prototype = _DelegateState.prototype;
    dart.addTypeTests(_DelegateState);
    _DelegateState.prototype[_is__DelegateState_default] = true;
    dart.addTypeCaches(_DelegateState);
    dart.setMethodSignature(_DelegateState, () => ({
      __proto__: dart.getMethods(_DelegateState.__proto__),
      debugSetInheritedLock: dart.fnType(core.bool, [core.bool]),
      willUpdateDelegate: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      dispose: dart.fnType(dart.void, []),
      debugFillProperties: dart.fnType(dart.void, [diagnostics.DiagnosticPropertiesBuilder]),
      build: dart.fnType(dart.void, [], {}, {isBuildFromExternalSources: core.bool})
    }));
    dart.setGetterSignature(_DelegateState, () => ({
      __proto__: dart.getGetters(_DelegateState.__proto__),
      delegate: D
    }));
    dart.setLibraryUri(_DelegateState, I[9]);
    dart.setFieldSignature(_DelegateState, () => ({
      __proto__: dart.getFields(_DelegateState.__proto__),
      element: dart.fieldType(dart.nullable(provider$._InheritedProviderScopeElement$(dart.nullable(T))))
    }));
    return _DelegateState;
  });
  provider$._DelegateState = provider$._DelegateState$();
  dart.addTypeTests(provider$._DelegateState, _is__DelegateState_default);
  const _is__DeferredDelegateState_default = Symbol('_is__DeferredDelegateState_default');
  provider$._DeferredDelegateState$ = dart.generic((T, R, W) => {
    var __t$InheritedContextOfRNAndFnAndT__ToFn = () => (__t$InheritedContextOfRNAndFnAndT__ToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfRN(), __t$RTovoid(), T, __t$RN()])))();
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$InheritedContextOfRN = () => (__t$InheritedContextOfRN = dart.constFn(provider$.InheritedContext$(__t$RN())))();
    var __t$RTovoid = () => (__t$RTovoid = dart.constFn(dart.fnType(dart.void, [R])))();
    var __t$RAndRTobool = () => (__t$RAndRTobool = dart.constFn(dart.fnType(core.bool, [R, R])))();
    var __t$RAndRToNbool = () => (__t$RAndRToNbool = dart.constFn(dart.nullable(__t$RAndRTobool())))();
    class _DeferredDelegateState extends provider$._DelegateState$(R, W) {
      get value() {
        let t4, t3, t2, t1, t0;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = false;
        this[_removeListener] == null ? this[_removeListener] = (t0 = this.delegate, t1 = dart.nullCheck(this.element), t2 = dart.bind(this, 'setState'), t3 = this.controller, t4 = this[_value], __t$InheritedContextOfRNAndFnAndT__ToFn().as(t0.startListening)(t1, t2, t3, t4)) : null;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = true;
        if (!dart.nullCheck(this.element).hasValue) dart.assertFailed("The callback \"startListening\" was called, but it left DeferredInhertitedProviderElement<" + dart.str(dart.wrapType(T)) + ", " + dart.str(dart.wrapType(R)) + ">\nin an uninitialized state.\n\nIt is necessary for \"startListening\" to call \"setState\" at least once the very\nfirst time \"value\" is requested.\n\nTo fix, consider:\n\nDeferredInheritedProvider(\n  ...,\n  startListening: (element, setState, controller, value) {\n    if (!element.hasValue) {\n      setState(myInitialValue); // TODO replace myInitialValue with your own\n    }\n    ...\n  }\n)\n    ", I[16], 109, 12, "element!.hasValue");
        if (!(this[_removeListener] != null)) dart.assertFailed(null, I[16], 128, 12, "_removeListener != null");
        return R.as(this[_value]);
      }
      dispose() {
        let t0;
        super.dispose();
        t0 = this[_removeListener];
        t0 == null ? null : t0();
      }
      get isLoaded() {
        return this[_removeListener] != null;
      }
      get hasValue() {
        return this[_hasValue];
      }
      setState(value) {
        R.as(value);
        if (this[_hasValue]) {
          let shouldNotify = __t$RAndRToNbool().as(this.delegate.updateShouldNotify) != null ? dart.nullCheck(__t$RAndRToNbool().as(this.delegate.updateShouldNotify))(R.as(this[_value]), value) : !dart.equals(this[_value], value);
          if (shouldNotify) {
            dart.nullCheck(this.element).markNeedsNotifyDependents();
          }
        }
        this[_hasValue] = true;
        this[_value] = value;
      }
    }
    (_DeferredDelegateState.new = function() {
      this[_removeListener] = null;
      this[_value] = null;
      this[_hasValue] = false;
      _DeferredDelegateState.__proto__.new.call(this);
      ;
    }).prototype = _DeferredDelegateState.prototype;
    dart.addTypeTests(_DeferredDelegateState);
    _DeferredDelegateState.prototype[_is__DeferredDelegateState_default] = true;
    dart.addTypeCaches(_DeferredDelegateState);
    dart.setMethodSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getMethods(_DeferredDelegateState.__proto__),
      setState: dart.fnType(dart.void, [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getGetters(_DeferredDelegateState.__proto__),
      value: R,
      isLoaded: core.bool,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_DeferredDelegateState, I[9]);
    dart.setFieldSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getFields(_DeferredDelegateState.__proto__),
      [_removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [_value]: dart.fieldType(dart.nullable(R)),
      [_hasValue]: dart.fieldType(core.bool)
    }));
    return _DeferredDelegateState;
  });
  provider$._DeferredDelegateState = provider$._DeferredDelegateState$();
  dart.addTypeTests(provider$._DeferredDelegateState, _is__DeferredDelegateState_default);
  const _is__CreateDeferredInheritedProvider_default = Symbol('_is__CreateDeferredInheritedProvider_default');
  provider$._CreateDeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_CreateDeferredInheritedProviderElementOfT$R = () => (__t$_CreateDeferredInheritedProviderElementOfT$R = dart.constFn(provider$._CreateDeferredInheritedProviderElement$(T, R)))();
    class _CreateDeferredInheritedProvider extends provider$._DeferredDelegate$(T, R) {
      static ['_#new#tearOff'](T, R, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        return new (provider$._CreateDeferredInheritedProvider$(T, R)).new({create: create, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: startListening});
      }
      createState() {
        return new (__t$_CreateDeferredInheritedProviderElementOfT$R()).new();
      }
    }
    (_CreateDeferredInheritedProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      this.create = create;
      this.dispose = dispose;
      _CreateDeferredInheritedProvider.__proto__.new.call(this, updateShouldNotify, startListening);
      ;
    }).prototype = _CreateDeferredInheritedProvider.prototype;
    dart.addTypeTests(_CreateDeferredInheritedProvider);
    _CreateDeferredInheritedProvider.prototype[_is__CreateDeferredInheritedProvider_default] = true;
    dart.addTypeCaches(_CreateDeferredInheritedProvider);
    dart.setMethodSignature(_CreateDeferredInheritedProvider, () => ({
      __proto__: dart.getMethods(_CreateDeferredInheritedProvider.__proto__),
      createState: dart.fnType(provider$._CreateDeferredInheritedProviderElement$(T, R), [])
    }));
    dart.setLibraryUri(_CreateDeferredInheritedProvider, I[9]);
    dart.setFieldSignature(_CreateDeferredInheritedProvider, () => ({
      __proto__: dart.getFields(_CreateDeferredInheritedProvider.__proto__),
      create: dart.finalFieldType(dart.fnType(T, [framework.BuildContext])),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.BuildContext, T])))
    }));
    return _CreateDeferredInheritedProvider;
  });
  provider$._CreateDeferredInheritedProvider = provider$._CreateDeferredInheritedProvider$();
  dart.addTypeTests(provider$._CreateDeferredInheritedProvider, _is__CreateDeferredInheritedProvider_default);
  var _didBuild = dart.privateName(provider$, "_didBuild");
  var _controller = dart.privateName(provider$, "_controller");
  const _is__CreateDeferredInheritedProviderElement_default = Symbol('_is__CreateDeferredInheritedProviderElement_default');
  provider$._CreateDeferredInheritedProviderElement$ = dart.generic((T, R) => {
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNvoid = () => (__t$BuildContextAndTToNvoid = dart.constFn(dart.nullable(__t$BuildContextAndTTovoid())))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$DiagnosticsPropertyOfR = () => (__t$DiagnosticsPropertyOfR = dart.constFn(diagnostics.DiagnosticsProperty$(R)))();
    class _CreateDeferredInheritedProviderElement extends provider$._DeferredDelegateState$(T, R, provider$._CreateDeferredInheritedProvider$(T, R)) {
      get controller() {
        let t1, t0;
        if (!this[_didBuild]) {
          if (!this.debugSetInheritedLock(true)) dart.assertFailed(null, I[16], 186, 14, "debugSetInheritedLock(true)");
          let _debugPreviousIsInInheritedProviderCreate = null;
          let _debugPreviousIsInInheritedProviderUpdate = null;
          if (!dart.fn(() => {
            _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
            _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
            return true;
          }, T$.VoidTobool())()) dart.assertFailed(null, I[16], 190, 14, "() {\n        _debugPreviousIsInInheritedProviderCreate =\n            debugIsInInheritedProviderCreate;\n        _debugPreviousIsInInheritedProviderUpdate =\n            debugIsInInheritedProviderUpdate;\n        return true;\n      }()");
          try {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = true;
              provider$.debugIsInInheritedProviderUpdate = false;
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[16], 199, 16, "() {\n          debugIsInInheritedProviderCreate = true;\n          debugIsInInheritedProviderUpdate = false;\n          return true;\n        }()");
            this[_controller] = (t0 = this.delegate, t1 = dart.nullCheck(this.element), t0.create(t1));
          } finally {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
              provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[16], 206, 16, "() {\n          debugIsInInheritedProviderCreate =\n              _debugPreviousIsInInheritedProviderCreate!;\n          debugIsInInheritedProviderUpdate =\n              _debugPreviousIsInInheritedProviderUpdate!;\n          return true;\n        }()");
          }
          this[_didBuild] = true;
        }
        return T.as(this[_controller]);
      }
      dispose() {
        let t0;
        super.dispose();
        if (this[_didBuild]) {
          t0 = __t$BuildContextAndTToNvoid().as(this.delegate.dispose);
          t0 == null ? null : t0(dart.nullCheck(this.element), T.as(this[_controller]));
        }
      }
      debugFillProperties(properties) {
        let t0, t0$;
        super.debugFillProperties(properties);
        if (this.isLoaded) {
          t0 = properties;
          (() => {
            t0.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.controller));
            t0.add(new (__t$DiagnosticsPropertyOfR()).new("value", this.value));
            return t0;
          })();
        } else {
          t0$ = properties;
          (() => {
            t0$.add(new diagnostics.FlagProperty.new("controller", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
            t0$.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
            return t0$;
          })();
        }
      }
      static ['_#new#tearOff'](T, R) {
        return new (provider$._CreateDeferredInheritedProviderElement$(T, R)).new();
      }
    }
    (_CreateDeferredInheritedProviderElement.new = function() {
      this[_didBuild] = false;
      this[_controller] = null;
      _CreateDeferredInheritedProviderElement.__proto__.new.call(this);
      ;
    }).prototype = _CreateDeferredInheritedProviderElement.prototype;
    dart.addTypeTests(_CreateDeferredInheritedProviderElement);
    _CreateDeferredInheritedProviderElement.prototype[_is__CreateDeferredInheritedProviderElement_default] = true;
    dart.addTypeCaches(_CreateDeferredInheritedProviderElement);
    dart.setGetterSignature(_CreateDeferredInheritedProviderElement, () => ({
      __proto__: dart.getGetters(_CreateDeferredInheritedProviderElement.__proto__),
      controller: T
    }));
    dart.setLibraryUri(_CreateDeferredInheritedProviderElement, I[9]);
    dart.setFieldSignature(_CreateDeferredInheritedProviderElement, () => ({
      __proto__: dart.getFields(_CreateDeferredInheritedProviderElement.__proto__),
      [_didBuild]: dart.fieldType(core.bool),
      [_controller]: dart.fieldType(dart.nullable(T))
    }));
    return _CreateDeferredInheritedProviderElement;
  });
  provider$._CreateDeferredInheritedProviderElement = provider$._CreateDeferredInheritedProviderElement$();
  dart.addTypeTests(provider$._CreateDeferredInheritedProviderElement, _is__CreateDeferredInheritedProviderElement_default);
  const _is__ValueDeferredInheritedProvider_default = Symbol('_is__ValueDeferredInheritedProvider_default');
  provider$._ValueDeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_ValueDeferredInheritedProviderStateOfT$R = () => (__t$_ValueDeferredInheritedProviderStateOfT$R = dart.constFn(provider$._ValueDeferredInheritedProviderState$(T, R)))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class _ValueDeferredInheritedProvider extends provider$._DeferredDelegate$(T, R) {
      static ['_#new#tearOff'](T, R, value, updateShouldNotify, startListening) {
        return new (provider$._ValueDeferredInheritedProvider$(T, R)).new(value, updateShouldNotify, startListening);
      }
      createState() {
        return new (__t$_ValueDeferredInheritedProviderStateOfT$R()).new();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.value));
      }
    }
    (_ValueDeferredInheritedProvider.new = function(value, updateShouldNotify, startListening) {
      this.value = value;
      _ValueDeferredInheritedProvider.__proto__.new.call(this, updateShouldNotify, startListening);
      ;
    }).prototype = _ValueDeferredInheritedProvider.prototype;
    dart.addTypeTests(_ValueDeferredInheritedProvider);
    _ValueDeferredInheritedProvider.prototype[_is__ValueDeferredInheritedProvider_default] = true;
    dart.addTypeCaches(_ValueDeferredInheritedProvider);
    dart.setMethodSignature(_ValueDeferredInheritedProvider, () => ({
      __proto__: dart.getMethods(_ValueDeferredInheritedProvider.__proto__),
      createState: dart.fnType(provider$._ValueDeferredInheritedProviderState$(T, R), [])
    }));
    dart.setLibraryUri(_ValueDeferredInheritedProvider, I[9]);
    dart.setFieldSignature(_ValueDeferredInheritedProvider, () => ({
      __proto__: dart.getFields(_ValueDeferredInheritedProvider.__proto__),
      value: dart.finalFieldType(T)
    }));
    return _ValueDeferredInheritedProvider;
  });
  provider$._ValueDeferredInheritedProvider = provider$._ValueDeferredInheritedProvider$();
  dart.addTypeTests(provider$._ValueDeferredInheritedProvider, _is__ValueDeferredInheritedProvider_default);
  const _is__ValueDeferredInheritedProviderState_default = Symbol('_is__ValueDeferredInheritedProviderState_default');
  provider$._ValueDeferredInheritedProviderState$ = dart.generic((T, R) => {
    var __t$_ValueDeferredInheritedProviderOfT$R = () => (__t$_ValueDeferredInheritedProviderOfT$R = dart.constFn(provider$._ValueDeferredInheritedProvider$(T, R)))();
    var __t$DiagnosticsPropertyOfR = () => (__t$DiagnosticsPropertyOfR = dart.constFn(diagnostics.DiagnosticsProperty$(R)))();
    class _ValueDeferredInheritedProviderState extends provider$._DeferredDelegateState$(T, R, provider$._ValueDeferredInheritedProvider$(T, R)) {
      willUpdateDelegate(oldDelegate) {
        __t$_ValueDeferredInheritedProviderOfT$R().as(oldDelegate);
        if (!dart.equals(this.delegate.value, oldDelegate.value)) {
          if (this[_removeListener] != null) {
            dart.nullCheck(this[_removeListener])();
            this[_removeListener] = null;
          }
          return true;
        }
        return false;
      }
      get controller() {
        return this.delegate.value;
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        if (this[_removeListener] != null) {
          properties.add(new (__t$DiagnosticsPropertyOfR()).new("value", this.value));
        } else {
          properties.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
        }
      }
      static ['_#new#tearOff'](T, R) {
        return new (provider$._ValueDeferredInheritedProviderState$(T, R)).new();
      }
    }
    (_ValueDeferredInheritedProviderState.new = function() {
      _ValueDeferredInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueDeferredInheritedProviderState.prototype;
    dart.addTypeTests(_ValueDeferredInheritedProviderState);
    _ValueDeferredInheritedProviderState.prototype[_is__ValueDeferredInheritedProviderState_default] = true;
    dart.addTypeCaches(_ValueDeferredInheritedProviderState);
    dart.setGetterSignature(_ValueDeferredInheritedProviderState, () => ({
      __proto__: dart.getGetters(_ValueDeferredInheritedProviderState.__proto__),
      controller: T
    }));
    dart.setLibraryUri(_ValueDeferredInheritedProviderState, I[9]);
    return _ValueDeferredInheritedProviderState;
  });
  provider$._ValueDeferredInheritedProviderState = provider$._ValueDeferredInheritedProviderState$();
  dart.addTypeTests(provider$._ValueDeferredInheritedProviderState, _is__ValueDeferredInheritedProviderState_default);
  var eventKind$ = dart.privateName(provider$, "PostEventCall.eventKind");
  var event$ = dart.privateName(provider$, "PostEventCall.event");
  provider$.PostEventCall = class PostEventCall extends core.Object {
    get eventKind() {
      return this[eventKind$];
    }
    set eventKind(value) {
      super.eventKind = value;
    }
    get event() {
      return this[event$];
    }
    set event(value) {
      super.event = value;
    }
    static ['_#_#tearOff'](eventKind, event) {
      return new provider$.PostEventCall.__(eventKind, event);
    }
  };
  (provider$.PostEventCall.__ = function(eventKind, event) {
    this[eventKind$] = eventKind;
    this[event$] = event;
    ;
  }).prototype = provider$.PostEventCall.prototype;
  dart.addTypeTests(provider$.PostEventCall);
  dart.addTypeCaches(provider$.PostEventCall);
  dart.setLibraryUri(provider$.PostEventCall, I[9]);
  dart.setFieldSignature(provider$.PostEventCall, () => ({
    __proto__: dart.getFields(provider$.PostEventCall.__proto__),
    eventKind: dart.finalFieldType(core.String),
    event: dart.finalFieldType(core.Map$(dart.nullable(core.Object), dart.nullable(core.Object)))
  }));
  var logs = dart.privateName(provider$, "PostEventSpy.logs");
  var _postEvent = dart.privateName(provider$, "_postEvent");
  provider$.PostEventSpy = class PostEventSpy extends core.Object {
    get logs() {
      return this[logs];
    }
    set logs(value) {
      super.logs = value;
    }
    static ['_#_#tearOff']() {
      return new provider$.PostEventSpy.__();
    }
    dispose() {
      if (!dart.equals(provider$._debugPostEventOverride, dart.bind(this, _postEvent))) dart.assertFailed("disposed a spy different from the current spy", I[17], 43, 7, "_debugPostEventOverride == _postEvent");
      provider$._debugPostEventOverride = null;
    }
    [_postEvent](eventKind, event) {
      this.logs[$add](new provider$.PostEventCall.__(eventKind, event));
    }
  };
  (provider$.PostEventSpy.__ = function() {
    this[logs] = T$.JSArrayOfPostEventCall().of([]);
    ;
  }).prototype = provider$.PostEventSpy.prototype;
  dart.addTypeTests(provider$.PostEventSpy);
  dart.addTypeCaches(provider$.PostEventSpy);
  dart.setMethodSignature(provider$.PostEventSpy, () => ({
    __proto__: dart.getMethods(provider$.PostEventSpy.__proto__),
    dispose: dart.fnType(dart.void, []),
    [_postEvent]: dart.fnType(dart.void, [core.String, core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setLibraryUri(provider$.PostEventSpy, I[9]);
  dart.setFieldSignature(provider$.PostEventSpy, () => ({
    __proto__: dart.getFields(provider$.PostEventSpy.__proto__),
    logs: dart.finalFieldType(core.List$(provider$.PostEventCall))
  }));
  var id$ = dart.privateName(provider$, "ProviderNode.id");
  var type$ = dart.privateName(provider$, "ProviderNode.type");
  var childrenNodeIds$ = dart.privateName(provider$, "ProviderNode.childrenNodeIds");
  var _element = dart.privateName(provider$, "ProviderNode._element");
  var _element$ = dart.privateName(provider$, "_element");
  var _delegateState = dart.privateName(provider$, "_delegateState");
  provider$.ProviderNode = class ProviderNode extends core.Object {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
    get childrenNodeIds() {
      return this[childrenNodeIds$];
    }
    set childrenNodeIds(value) {
      super.childrenNodeIds = value;
    }
    get [_element$]() {
      return this[_element];
    }
    set [_element$](value) {
      super[_element$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let childrenNodeIds = opts && 'childrenNodeIds' in opts ? opts.childrenNodeIds : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let element = opts && 'element' in opts ? opts.element : null;
      return new provider$.ProviderNode.new({id: id, childrenNodeIds: childrenNodeIds, type: type, element: element});
    }
    get value() {
      return this[_element$][_delegateState].value;
    }
  };
  (provider$.ProviderNode.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let childrenNodeIds = opts && 'childrenNodeIds' in opts ? opts.childrenNodeIds : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let element = opts && 'element' in opts ? opts.element : null;
    this[id$] = id;
    this[childrenNodeIds$] = childrenNodeIds;
    this[type$] = type;
    this[_element] = element;
    ;
  }).prototype = provider$.ProviderNode.prototype;
  dart.addTypeTests(provider$.ProviderNode);
  dart.addTypeCaches(provider$.ProviderNode);
  dart.setGetterSignature(provider$.ProviderNode, () => ({
    __proto__: dart.getGetters(provider$.ProviderNode.__proto__),
    value: dart.nullable(core.Object)
  }));
  dart.setLibraryUri(provider$.ProviderNode, I[9]);
  dart.setFieldSignature(provider$.ProviderNode, () => ({
    __proto__: dart.getFields(provider$.ProviderNode.__proto__),
    id: dart.finalFieldType(core.String),
    type: dart.finalFieldType(core.String),
    childrenNodeIds: dart.finalFieldType(core.List$(core.String)),
    [_element$]: dart.finalFieldType(provider$._InheritedProviderScopeElement$(dart.nullable(core.Object)))
  }));
  var _providerDetails = dart.privateName(provider$, "_providerDetails");
  provider$.ProviderBinding = class ProviderBinding extends core.Object {
    static ['_#_#tearOff']() {
      return new provider$.ProviderBinding.__();
    }
    get providerDetails() {
      return this[_providerDetails];
    }
    set providerDetails(value) {
      provider$.debugPostEvent("provider:provider_list_changed", new _js_helper.LinkedMap.new());
      this[_providerDetails] = value;
    }
    providerDidChange(providerId) {
      provider$.debugPostEvent("provider:provider_changed", new _js_helper.LinkedMap.from(["id", providerId]));
    }
  };
  (provider$.ProviderBinding.__ = function() {
    this[_providerDetails] = new (T$.IdentityMapOfString$ProviderNode()).new();
    ;
  }).prototype = provider$.ProviderBinding.prototype;
  dart.addTypeTests(provider$.ProviderBinding);
  dart.addTypeCaches(provider$.ProviderBinding);
  dart.setMethodSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getMethods(provider$.ProviderBinding.__proto__),
    providerDidChange: dart.fnType(dart.void, [core.String])
  }));
  dart.setGetterSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getGetters(provider$.ProviderBinding.__proto__),
    providerDetails: core.Map$(core.String, provider$.ProviderNode)
  }));
  dart.setSetterSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getSetters(provider$.ProviderBinding.__proto__),
    providerDetails: core.Map$(core.String, provider$.ProviderNode)
  }));
  dart.setLibraryUri(provider$.ProviderBinding, I[9]);
  dart.setFieldSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getFields(provider$.ProviderBinding.__proto__),
    [_providerDetails]: dart.fieldType(core.Map$(core.String, provider$.ProviderNode))
  }));
  dart.setStaticFieldSignature(provider$.ProviderBinding, () => ['debugInstance']);
  dart.defineLazy(provider$.ProviderBinding, {
    /*provider$.ProviderBinding.debugInstance*/get debugInstance() {
      return new provider$.ProviderBinding.__();
    }
  }, false);
  var _parent = dart.privateName(nested, "_parent");
  var _parent$ = dart.privateName(nested, "SingleChildWidgetElementMixin._parent");
  nested.SingleChildWidgetElementMixin = class SingleChildWidgetElementMixin extends framework.Element {};
  nested.SingleChildWidgetElementMixin[dart.mixinOn] = Element => class SingleChildWidgetElementMixin extends Element {
    get [_parent]() {
      return this[_parent$];
    }
    set [_parent](value) {
      this[_parent$] = value;
    }
    mount(parent, newSlot) {
      if (T$._NestedHookElementN().is(parent)) {
        this[_parent] = parent;
      }
      super.mount(parent, newSlot);
    }
    activate() {
      super.activate();
      this.visitAncestorElements(dart.fn(parent => {
        if (nested._NestedHookElement.is(parent)) {
          this[_parent] = parent;
        }
        return false;
      }, T$.ElementTobool()));
    }
  };
  (nested.SingleChildWidgetElementMixin[dart.mixinNew] = function() {
    this[_parent$] = null;
  }).prototype = nested.SingleChildWidgetElementMixin.prototype;
  dart.addTypeTests(nested.SingleChildWidgetElementMixin);
  dart.addTypeCaches(nested.SingleChildWidgetElementMixin);
  nested.SingleChildWidgetElementMixin[dart.implements] = () => [framework.Element];
  dart.setMethodSignature(nested.SingleChildWidgetElementMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildWidgetElementMixin.__proto__),
    mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic])
  }));
  dart.setLibraryUri(nested.SingleChildWidgetElementMixin, I[8]);
  dart.setFieldSignature(nested.SingleChildWidgetElementMixin, () => ({
    __proto__: dart.getFields(nested.SingleChildWidgetElementMixin.__proto__),
    [_parent]: dart.fieldType(dart.nullable(nested._NestedHookElement))
  }));
  const StatelessElement_SingleChildWidgetElementMixin$36 = class StatelessElement_SingleChildWidgetElementMixin extends framework.StatelessElement {};
  (StatelessElement_SingleChildWidgetElementMixin$36.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatelessElement_SingleChildWidgetElementMixin$36.__proto__.new.call(this, widget);
  }).prototype = StatelessElement_SingleChildWidgetElementMixin$36.prototype;
  dart.applyMixin(StatelessElement_SingleChildWidgetElementMixin$36, nested.SingleChildWidgetElementMixin);
  nested.SingleChildStatelessElement = class SingleChildStatelessElement extends StatelessElement_SingleChildWidgetElementMixin$36 {
    static ['_#new#tearOff'](widget) {
      return new nested.SingleChildStatelessElement.new(widget);
    }
    build() {
      if (this[_parent] != null) {
        return this.widget.buildWithChild(this, dart.nullCheck(this[_parent]).injectedChild);
      }
      return super.build();
    }
    get widget() {
      return nested.SingleChildStatelessWidget.as(super.widget);
    }
  };
  (nested.SingleChildStatelessElement.new = function(widget) {
    nested.SingleChildStatelessElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested.SingleChildStatelessElement.prototype;
  dart.addTypeTests(nested.SingleChildStatelessElement);
  dart.addTypeCaches(nested.SingleChildStatelessElement);
  dart.setGetterSignature(nested.SingleChildStatelessElement, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatelessElement.__proto__),
    widget: nested.SingleChildStatelessWidget
  }));
  dart.setLibraryUri(nested.SingleChildStatelessElement, I[8]);
  const _is__InheritedProviderElement_default = Symbol('_is__InheritedProviderElement_default');
  provider$._InheritedProviderElement$ = dart.generic(T => {
    class _InheritedProviderElement extends nested.SingleChildStatelessElement {
      static ['_#new#tearOff'](T, widget) {
        return new (provider$._InheritedProviderElement$(T)).new(widget);
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this.visitChildren(dart.fn(e => e.debugFillProperties(properties), T$.ElementTovoid()));
      }
    }
    (_InheritedProviderElement.new = function(widget) {
      _InheritedProviderElement.__proto__.new.call(this, widget);
      ;
    }).prototype = _InheritedProviderElement.prototype;
    dart.addTypeTests(_InheritedProviderElement);
    _InheritedProviderElement.prototype[_is__InheritedProviderElement_default] = true;
    dart.addTypeCaches(_InheritedProviderElement);
    dart.setLibraryUri(_InheritedProviderElement, I[9]);
    return _InheritedProviderElement;
  });
  provider$._InheritedProviderElement = provider$._InheritedProviderElement$();
  dart.addTypeTests(provider$._InheritedProviderElement, _is__InheritedProviderElement_default);
  const _is_InheritedContext_default = Symbol('_is_InheritedContext_default');
  provider$.InheritedContext$ = dart.generic(T => {
    class InheritedContext extends framework.BuildContext {}
    (InheritedContext.new = function() {
      ;
    }).prototype = InheritedContext.prototype;
    dart.addTypeTests(InheritedContext);
    InheritedContext.prototype[_is_InheritedContext_default] = true;
    dart.addTypeCaches(InheritedContext);
    dart.setLibraryUri(InheritedContext, I[9]);
    return InheritedContext;
  });
  provider$.InheritedContext = provider$.InheritedContext$();
  dart.addTypeTests(provider$.InheritedContext, _is_InheritedContext_default);
  var owner$ = dart.privateName(provider$, "_InheritedProviderScope.owner");
  var debugType$ = dart.privateName(provider$, "_InheritedProviderScope.debugType");
  const _is__InheritedProviderScope_default = Symbol('_is__InheritedProviderScope_default');
  provider$._InheritedProviderScope$ = dart.generic(T => {
    var __t$_InheritedProviderScopeElementOfT = () => (__t$_InheritedProviderScopeElementOfT = dart.constFn(provider$._InheritedProviderScopeElement$(T)))();
    class _InheritedProviderScope extends framework.InheritedWidget {
      get owner() {
        return this[owner$];
      }
      set owner(value) {
        super.owner = value;
      }
      get debugType() {
        return this[debugType$];
      }
      set debugType(value) {
        super.debugType = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let owner = opts && 'owner' in opts ? opts.owner : null;
        let debugType = opts && 'debugType' in opts ? opts.debugType : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$._InheritedProviderScope$(T)).new({owner: owner, debugType: debugType, child: child});
      }
      updateShouldNotify(oldWidget) {
        framework.InheritedWidget.as(oldWidget);
        return false;
      }
      createElement() {
        return new (__t$_InheritedProviderScopeElementOfT()).new(this);
      }
    }
    (_InheritedProviderScope.new = function(opts) {
      let owner = opts && 'owner' in opts ? opts.owner : null;
      let debugType = opts && 'debugType' in opts ? opts.debugType : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[owner$] = owner;
      this[debugType$] = debugType;
      if (!T.is(null)) dart.assertFailed(null, I[7], 341, 16, "null is T");
      _InheritedProviderScope.__proto__.new.call(this, {child: child});
      ;
    }).prototype = _InheritedProviderScope.prototype;
    dart.addTypeTests(_InheritedProviderScope);
    _InheritedProviderScope.prototype[_is__InheritedProviderScope_default] = true;
    dart.addTypeCaches(_InheritedProviderScope);
    dart.setMethodSignature(_InheritedProviderScope, () => ({
      __proto__: dart.getMethods(_InheritedProviderScope.__proto__),
      updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      createElement: dart.fnType(provider$._InheritedProviderScopeElement$(T), [])
    }));
    dart.setLibraryUri(_InheritedProviderScope, I[9]);
    dart.setFieldSignature(_InheritedProviderScope, () => ({
      __proto__: dart.getFields(_InheritedProviderScope.__proto__),
      owner: dart.finalFieldType(provider$.InheritedProvider$(T)),
      debugType: dart.finalFieldType(core.String)
    }));
    return _InheritedProviderScope;
  });
  provider$._InheritedProviderScope = provider$._InheritedProviderScope$();
  dart.addTypeTests(provider$._InheritedProviderScope, _is__InheritedProviderScope_default);
  const _is__Dependency_default = Symbol('_is__Dependency_default');
  provider$._Dependency$ = dart.generic(T => {
    var __t$TTobool = () => (__t$TTobool = dart.constFn(dart.fnType(core.bool, [T])))();
    var __t$JSArrayOfTTobool = () => (__t$JSArrayOfTTobool = dart.constFn(_interceptors.JSArray$(__t$TTobool())))();
    class _Dependency extends core.Object {
      static ['_#new#tearOff'](T) {
        return new (provider$._Dependency$(T)).new();
      }
    }
    (_Dependency.new = function() {
      this.shouldClearSelectors = false;
      this.shouldClearMutationScheduled = false;
      this.selectors = __t$JSArrayOfTTobool().of([]);
      ;
    }).prototype = _Dependency.prototype;
    dart.addTypeTests(_Dependency);
    _Dependency.prototype[_is__Dependency_default] = true;
    dart.addTypeCaches(_Dependency);
    dart.setLibraryUri(_Dependency, I[9]);
    dart.setFieldSignature(_Dependency, () => ({
      __proto__: dart.getFields(_Dependency.__proto__),
      shouldClearSelectors: dart.fieldType(core.bool),
      shouldClearMutationScheduled: dart.fieldType(core.bool),
      selectors: dart.finalFieldType(core.List$(dart.fnType(core.bool, [T])))
    }));
    return _Dependency;
  });
  provider$._Dependency = provider$._Dependency$();
  dart.addTypeTests(provider$._Dependency, _is__Dependency_default);
  var _shouldNotifyDependents = dart.privateName(provider$, "_shouldNotifyDependents");
  var _debugInheritLocked = dart.privateName(provider$, "_debugInheritLocked");
  var _updatedShouldNotify = dart.privateName(provider$, "_updatedShouldNotify");
  var _isBuildFromExternalSources = dart.privateName(provider$, "_isBuildFromExternalSources");
  var ___InheritedProviderScopeElement__delegateState = dart.privateName(provider$, "_#_InheritedProviderScopeElement#_delegateState");
  var ___InheritedProviderScopeElement__debugId = dart.privateName(provider$, "_#_InheritedProviderScopeElement#_debugId");
  var _debugId = dart.privateName(provider$, "_debugId");
  const _is__InheritedProviderScopeElement_default = Symbol('_is__InheritedProviderScopeElement_default');
  provider$._InheritedProviderScopeElement$ = dart.generic(T => {
    var __t$_InheritedProviderScopeOfT = () => (__t$_InheritedProviderScopeOfT = dart.constFn(provider$._InheritedProviderScope$(T)))();
    var __t$_DependencyOfT = () => (__t$_DependencyOfT = dart.constFn(provider$._Dependency$(T)))();
    var __t$TTobool = () => (__t$TTobool = dart.constFn(dart.fnType(core.bool, [T])))();
    var __t$ListOfTTobool = () => (__t$ListOfTTobool = dart.constFn(core.List$(__t$TTobool())))();
    class _InheritedProviderScopeElement extends framework.InheritedElement {
      static ['_#new#tearOff'](T, widget) {
        return new (provider$._InheritedProviderScopeElement$(T)).new(widget);
      }
      get [_delegateState]() {
        let t1, t1$, t0;
        t0 = this[___InheritedProviderScopeElement__delegateState];
        return t0 == null ? (t1$ = (t1 = this.widget.owner[_delegate].createState(), (() => {
          t1.element = this;
          return t1;
        })()), this[___InheritedProviderScopeElement__delegateState] == null ? this[___InheritedProviderScopeElement__delegateState] = t1$ : dart.throw(new _internal.LateError.fieldADI("_delegateState"))) : t0;
      }
      get [_debugId]() {
        let t0;
        t0 = this[___InheritedProviderScopeElement__debugId];
        return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_debugId")) : t0;
      }
      set [_debugId](_debugId$35param) {
        this[___InheritedProviderScopeElement__debugId] = _debugId$35param;
      }
      getElementForInheritedWidgetOfExactType(InheritedWidgetType) {
        let inheritedElement = null;
        this.visitAncestorElements(dart.fn(parent => {
          inheritedElement = parent.getElementForInheritedWidgetOfExactType(InheritedWidgetType);
          return false;
        }, T$.ElementTobool()));
        return inheritedElement;
      }
      mount(parent, newSlot) {
        let t0;
        {
          this[_debugId] = dart.str((t0 = provider$._InheritedProviderScopeElement._nextProviderId, provider$._InheritedProviderScopeElement._nextProviderId = t0 + 1, t0));
          provider$.ProviderBinding.debugInstance.providerDetails = (() => {
            let t0 = T$.LinkedHashMapOfString$ProviderNode().of(provider$.ProviderBinding.debugInstance.providerDetails);
            t0[$_set](this[_debugId], new provider$.ProviderNode.new({id: this[_debugId], childrenNodeIds: C[5] || CT.C5, type: this.widget.debugType, element: this}));
            return t0;
          })();
        }
        super.mount(parent, newSlot);
      }
      get widget() {
        return __t$_InheritedProviderScopeOfT().as(super.widget);
      }
      reassemble() {
        super.reassemble();
        let value = this[_delegateState].hasValue ? this[_delegateState].value : null;
        if (reassemble_handler.ReassembleHandler.is(value)) {
          value.reassemble();
        }
      }
      updateDependencies(dependent, aspect) {
        let t1;
        let dependencies = this.getDependencies(dependent);
        if (dependencies != null && !__t$_DependencyOfT().is(dependencies)) {
          return;
        }
        if (__t$TTobool().is(aspect)) {
          let selectorDependency = __t$_DependencyOfT().as((t1 = dependencies, t1 == null ? new (__t$_DependencyOfT()).new() : t1));
          if (selectorDependency.shouldClearSelectors) {
            selectorDependency.shouldClearSelectors = false;
            __t$ListOfTTobool().as(selectorDependency.selectors)[$clear]();
          }
          if (selectorDependency.shouldClearMutationScheduled === false) {
            selectorDependency.shouldClearMutationScheduled = true;
            T$.FutureOfNull().microtask(dart.fn(() => {
              let t1;
              t1 = selectorDependency;
              (() => {
                t1.shouldClearMutationScheduled = false;
                t1.shouldClearSelectors = true;
                return t1;
              })();
            }, T$.VoidToNull()));
          }
          __t$ListOfTTobool().as(selectorDependency.selectors)[$add](aspect);
          this.setDependencies(dependent, selectorDependency);
        } else {
          this.setDependencies(dependent, C[2] || CT.C2);
        }
      }
      notifyDependent(oldWidget, dependent) {
        framework.InheritedWidget.as(oldWidget);
        let dependencies = this.getDependencies(dependent);
        {
          provider$.ProviderBinding.debugInstance.providerDidChange(this[_debugId]);
        }
        let shouldNotify = false;
        if (dependencies != null) {
          if (__t$_DependencyOfT().is(dependencies)) {
            if (dependent.dirty) {
              return;
            }
            for (let updateShouldNotify of __t$ListOfTTobool().as(dependencies.selectors)) {
              try {
                if (!dart.fn(() => {
                  provider$._debugIsSelecting = true;
                  return true;
                }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 480, 20, "() {\n              _debugIsSelecting = true;\n              return true;\n            }()");
                shouldNotify = updateShouldNotify(this.value);
              } finally {
                if (!dart.fn(() => {
                  provider$._debugIsSelecting = false;
                  return true;
                }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 486, 20, "() {\n              _debugIsSelecting = false;\n              return true;\n            }()");
              }
              if (shouldNotify) {
                break;
              }
            }
          } else {
            shouldNotify = true;
          }
        }
        if (shouldNotify) {
          dependent.didChangeDependencies();
        }
      }
      update(newWidget) {
        __t$_InheritedProviderScopeOfT().as(newWidget);
        if (!dart.fn(() => {
          if (!this.widget.owner[_delegate][$runtimeType]._equals(newWidget.owner[_delegate][$runtimeType])) {
            dart.throw(new core.StateError.new("Rebuilt " + dart.str(this.widget) + " using a different constructor.\n      \nThis is likely a mistake and is unsupported.\nIf you're in this situation, consider passing a `key` unique to each individual constructor.\n"));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 507, 12, "() {\n      if (widget.owner._delegate.runtimeType !=\n          newWidget.owner._delegate.runtimeType) {\n        throw StateError('''\nRebuilt $widget using a different constructor.\n      \nThis is likely a mistake and is unsupported.\nIf you're in this situation, consider passing a `key` unique to each individual constructor.\n''');\n      }\n      return true;\n    }()");
        this[_isBuildFromExternalSources] = true;
        this[_updatedShouldNotify] = this[_delegateState].willUpdateDelegate(newWidget.owner[_delegate]);
        super.update(newWidget);
        this[_updatedShouldNotify] = false;
      }
      updated(oldWidget) {
        framework.InheritedWidget.as(oldWidget);
        super.updated(oldWidget);
        if (this[_updatedShouldNotify]) {
          this.notifyClients(oldWidget);
        }
      }
      didChangeDependencies() {
        this[_isBuildFromExternalSources] = true;
        super.didChangeDependencies();
      }
      build() {
        if (this.widget.owner[_lazy] === false) {
          this.value;
        }
        this[_delegateState].build({isBuildFromExternalSources: this[_isBuildFromExternalSources]});
        this[_isBuildFromExternalSources] = false;
        if (this[_shouldNotifyDependents]) {
          this[_shouldNotifyDependents] = false;
          this.notifyClients(this.widget);
        }
        return super.build();
      }
      unmount() {
        let t2;
        this[_delegateState].dispose();
        {
          provider$.ProviderBinding.debugInstance.providerDetails = (t2 = (() => {
            let t1 = T$.LinkedHashMapOfString$ProviderNode().of(provider$.ProviderBinding.debugInstance.providerDetails);
            return t1;
          })(), (() => {
            t2[$remove](this[_debugId]);
            return t2;
          })());
        }
        super.unmount();
      }
      get hasValue() {
        return this[_delegateState].hasValue;
      }
      markNeedsNotifyDependents() {
        if (!this[_isNotifyDependentsEnabled]) {
          return;
        }
        this.markNeedsBuild();
        this[_shouldNotifyDependents] = true;
      }
      [_debugSetInheritedLock](value) {
        if (!dart.fn(() => {
          this[_debugInheritLocked] = value;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 582, 12, "() {\n      _debugInheritLocked = value;\n      return true;\n    }()");
        return true;
      }
      get value() {
        return this[_delegateState].value;
      }
      dependOnInheritedElement(ancestor, opts) {
        let aspect = opts && 'aspect' in opts ? opts.aspect : null;
        if (!dart.fn(() => {
          if (this[_debugInheritLocked]) {
            dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Tried to listen to an InheritedWidget " + "in a life-cycle that will never be called again."), new assertions.ErrorDescription.new("This error typically happens when calling Provider.of with `listen` to `true`,\nin a situation where listening to the provider doesn't make sense, such as:\n- initState of a StatefulWidget\n- the \"create\" callback of a provider\n\nThis is undesired because these life-cycles are called only once in the\nlifetime of a widget. As such, while `listen` is `true`, the widget has\nno mean to handle the update scenario.\n\nTo fix, consider:\n- passing `listen: false` to `Provider.of`\n- use a life-cycle that handles updates (like didChangeDependencies)\n- use a provider that handles updates (like ProxyProvider).\n")])));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 597, 12, "() {\n      if (_debugInheritLocked) {\n        throw FlutterError.fromParts(\n          <DiagnosticsNode>[\n            ErrorSummary(\n              'Tried to listen to an InheritedWidget '\n              'in a life-cycle that will never be called again.',\n            ),\n            ErrorDescription('''\nThis error typically happens when calling Provider.of with `listen` to `true`,\nin a situation where listening to the provider doesn't make sense, such as:\n- initState of a StatefulWidget\n- the \"create\" callback of a provider\n\nThis is undesired because these life-cycles are called only once in the\nlifetime of a widget. As such, while `listen` is `true`, the widget has\nno mean to handle the update scenario.\n\nTo fix, consider:\n- passing `listen: false` to `Provider.of`\n- use a life-cycle that handles updates (like didChangeDependencies)\n- use a provider that handles updates (like ProxyProvider).\n'''),\n          ],\n        );\n      }\n      return true;\n    }()");
        return super.dependOnInheritedElement(ancestor, {aspect: aspect});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this[_delegateState].debugFillProperties(properties);
      }
    }
    (_InheritedProviderScopeElement.new = function(widget) {
      this[_shouldNotifyDependents] = false;
      this[_debugInheritLocked] = false;
      this[_isNotifyDependentsEnabled] = true;
      this[_updatedShouldNotify] = false;
      this[_isBuildFromExternalSources] = false;
      this[___InheritedProviderScopeElement__delegateState] = null;
      this[___InheritedProviderScopeElement__debugId] = null;
      _InheritedProviderScopeElement.__proto__.new.call(this, widget);
      ;
    }).prototype = _InheritedProviderScopeElement.prototype;
    dart.addTypeTests(_InheritedProviderScopeElement);
    _InheritedProviderScopeElement.prototype[_is__InheritedProviderScopeElement_default] = true;
    dart.addTypeCaches(_InheritedProviderScopeElement);
    _InheritedProviderScopeElement[dart.implements] = () => [provider$.InheritedContext$(T)];
    dart.setMethodSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getMethods(_InheritedProviderScopeElement.__proto__),
      mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic]),
      markNeedsNotifyDependents: dart.fnType(dart.void, []),
      [_debugSetInheritedLock]: dart.fnType(core.bool, [core.bool])
    }));
    dart.setGetterSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getGetters(_InheritedProviderScopeElement.__proto__),
      [_delegateState]: provider$._DelegateState$(T, provider$._Delegate$(T)),
      [_debugId]: core.String,
      widget: provider$._InheritedProviderScope$(T),
      hasValue: core.bool,
      value: T
    }));
    dart.setSetterSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getSetters(_InheritedProviderScopeElement.__proto__),
      [_debugId]: core.String
    }));
    dart.setLibraryUri(_InheritedProviderScopeElement, I[9]);
    dart.setFieldSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getFields(_InheritedProviderScopeElement.__proto__),
      [_shouldNotifyDependents]: dart.fieldType(core.bool),
      [_debugInheritLocked]: dart.fieldType(core.bool),
      [_isNotifyDependentsEnabled]: dart.fieldType(core.bool),
      [_updatedShouldNotify]: dart.fieldType(core.bool),
      [_isBuildFromExternalSources]: dart.fieldType(core.bool),
      [___InheritedProviderScopeElement__delegateState]: dart.fieldType(dart.nullable(provider$._DelegateState$(T, provider$._Delegate$(T)))),
      [___InheritedProviderScopeElement__debugId]: dart.fieldType(dart.nullable(core.String))
    }));
    dart.setStaticFieldSignature(_InheritedProviderScopeElement, () => ['_nextProviderId']);
    return _InheritedProviderScopeElement;
  });
  provider$._InheritedProviderScopeElement = provider$._InheritedProviderScopeElement$();
  dart.defineLazy(provider$._InheritedProviderScopeElement, {
    /*provider$._InheritedProviderScopeElement._nextProviderId*/get _nextProviderId() {
      return 0;
    },
    set _nextProviderId(value) {}
  }, false);
  dart.addTypeTests(provider$._InheritedProviderScopeElement, _is__InheritedProviderScopeElement_default);
  var _updateShouldNotify = dart.privateName(provider$, "_updateShouldNotify");
  const _is__CreateInheritedProvider_default = Symbol('_is__CreateInheritedProvider_default');
  provider$._CreateInheritedProvider$ = dart.generic(T => {
    var __t$_CreateInheritedProviderStateOfT = () => (__t$_CreateInheritedProviderStateOfT = dart.constFn(provider$._CreateInheritedProviderState$(T)))();
    class _CreateInheritedProvider extends provider$._Delegate$(T) {
      static ['_#new#tearOff'](T, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        return new (provider$._CreateInheritedProvider$(T)).new({create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose});
      }
      createState() {
        return new (__t$_CreateInheritedProviderStateOfT()).new();
      }
    }
    (_CreateInheritedProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      this.create = create;
      this.update = update;
      this.debugCheckInvalidValueType = debugCheckInvalidValueType;
      this.startListening = startListening;
      this.dispose = dispose;
      if (!(create != null || update != null)) dart.assertFailed(null, I[7], 674, 16, "create != null || update != null");
      this[_updateShouldNotify] = updateShouldNotify;
      ;
    }).prototype = _CreateInheritedProvider.prototype;
    dart.addTypeTests(_CreateInheritedProvider);
    _CreateInheritedProvider.prototype[_is__CreateInheritedProvider_default] = true;
    dart.addTypeCaches(_CreateInheritedProvider);
    dart.setMethodSignature(_CreateInheritedProvider, () => ({
      __proto__: dart.getMethods(_CreateInheritedProvider.__proto__),
      createState: dart.fnType(provider$._CreateInheritedProviderState$(T), [])
    }));
    dart.setLibraryUri(_CreateInheritedProvider, I[9]);
    dart.setFieldSignature(_CreateInheritedProvider, () => ({
      __proto__: dart.getFields(_CreateInheritedProvider.__proto__),
      create: dart.finalFieldType(dart.nullable(dart.fnType(T, [framework.BuildContext]))),
      update: dart.finalFieldType(dart.nullable(dart.fnType(T, [framework.BuildContext, dart.nullable(T)]))),
      [_updateShouldNotify]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T]))),
      debugCheckInvalidValueType: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [T]))),
      startListening: dart.finalFieldType(dart.nullable(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(T)), T]))),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.BuildContext, T])))
    }));
    return _CreateInheritedProvider;
  });
  provider$._CreateInheritedProvider = provider$._CreateInheritedProvider$();
  dart.addTypeTests(provider$._CreateInheritedProvider, _is__CreateInheritedProvider_default);
  var _didInitValue = dart.privateName(provider$, "_didInitValue");
  var _previousWidget = dart.privateName(provider$, "_previousWidget");
  var _initError = dart.privateName(provider$, "_initError");
  const _is__CreateInheritedProviderState_default = Symbol('_is__CreateInheritedProviderState_default');
  provider$._CreateInheritedProviderState$ = dart.generic(T => {
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    var __t$TToNvoid = () => (__t$TToNvoid = dart.constFn(dart.nullable(__t$TTovoid())))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$BuildContextAndTNToT = () => (__t$BuildContextAndTNToT = dart.constFn(dart.fnType(T, [framework.BuildContext, __t$TN()])))();
    var __t$BuildContextAndTNToNT = () => (__t$BuildContextAndTNToNT = dart.constFn(dart.nullable(__t$BuildContextAndTNToT())))();
    var __t$InheritedContextOfTN = () => (__t$InheritedContextOfTN = dart.constFn(provider$.InheritedContext$(__t$TN())))();
    var __t$InheritedContextOfTNAndTToFn = () => (__t$InheritedContextOfTNAndTToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfTN(), T])))();
    var __t$InheritedContextOfTNAndTToNFn = () => (__t$InheritedContextOfTNAndTToNFn = dart.constFn(dart.nullable(__t$InheritedContextOfTNAndTToFn())))();
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNvoid = () => (__t$BuildContextAndTToNvoid = dart.constFn(dart.nullable(__t$BuildContextAndTTovoid())))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    class _CreateInheritedProviderState extends provider$._DelegateState$(T, provider$._CreateInheritedProvider$(T)) {
      get value() {
        let t2, t3;
        if (this[_didInitValue] && this[_initError] != null) {
          dart.throw(new core.StateError.new("Tried to read a provider that threw during the creation of its value.\n" + "The exception occurred during the creation of type " + dart.str(dart.wrapType(T)) + ".\n\n" + dart.str((t2 = this[_initError], t2 == null ? null : dart.toString(t2)))));
        }
        let _debugPreviousIsInInheritedProviderCreate = null;
        let _debugPreviousIsInInheritedProviderUpdate = null;
        if (!dart.fn(() => {
          _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
          _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 718, 12, "() {\n      _debugPreviousIsInInheritedProviderCreate =\n          debugIsInInheritedProviderCreate;\n      _debugPreviousIsInInheritedProviderUpdate =\n          debugIsInInheritedProviderUpdate;\n      return true;\n    }()");
        if (!this[_didInitValue]) {
          this[_didInitValue] = true;
          if (this.delegate.create != null) {
            if (!this.debugSetInheritedLock(true)) dart.assertFailed(null, I[7], 729, 16, "debugSetInheritedLock(true)");
            try {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = true;
                provider$.debugIsInInheritedProviderUpdate = false;
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 731, 18, "() {\n            debugIsInInheritedProviderCreate = true;\n            debugIsInInheritedProviderUpdate = false;\n            return true;\n          }()");
              this[_value] = dart.nullCheck(this.delegate.create)(dart.nullCheck(this.element));
            } catch (e$) {
              let e = dart.getThrown(e$);
              let stackTrace = dart.stackTrace(e$);
              if (core.Object.is(e)) {
                this[_initError] = new assertions.FlutterErrorDetails.new({library: "provider", exception: e, stack: stackTrace});
                dart.rethrow(e$);
              } else
                throw e$;
            } finally {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
                provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 745, 18, "() {\n            debugIsInInheritedProviderCreate =\n                _debugPreviousIsInInheritedProviderCreate!;\n            debugIsInInheritedProviderUpdate =\n                _debugPreviousIsInInheritedProviderUpdate!;\n            return true;\n          }()");
            }
            if (!this.debugSetInheritedLock(false)) dart.assertFailed(null, I[7], 753, 16, "debugSetInheritedLock(false)");
            if (!dart.fn(() => {
              let t3;
              t3 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t3 == null ? null : t3(T.as(this[_value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 755, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
          }
          if (__t$BuildContextAndTNToNT().as(this.delegate.update) != null) {
            try {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = false;
                provider$.debugIsInInheritedProviderUpdate = true;
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 762, 18, "() {\n            debugIsInInheritedProviderCreate = false;\n            debugIsInInheritedProviderUpdate = true;\n            return true;\n          }()");
              this[_value] = dart.nullCheck(__t$BuildContextAndTNToNT().as(this.delegate.update))(dart.nullCheck(this.element), this[_value]);
            } finally {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
                provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 769, 18, "() {\n            debugIsInInheritedProviderCreate =\n                _debugPreviousIsInInheritedProviderCreate!;\n            debugIsInInheritedProviderUpdate =\n                _debugPreviousIsInInheritedProviderUpdate!;\n            return true;\n          }()");
            }
            if (!dart.fn(() => {
              let t3;
              t3 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t3 == null ? null : t3(T.as(this[_value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 778, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
          }
        }
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = false;
        this[_removeListener] == null ? this[_removeListener] = (t3 = __t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening), t3 == null ? null : t3(dart.nullCheck(this.element), T.as(this[_value]))) : null;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = true;
        if (!(__t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening) == null || this[_removeListener] != null)) dart.assertFailed(null, I[7], 788, 12, "delegate.startListening == null || _removeListener != null");
        return T.as(this[_value]);
      }
      dispose() {
        let t3, t3$;
        super.dispose();
        t3 = this[_removeListener];
        t3 == null ? null : t3();
        if (this[_didInitValue]) {
          t3$ = __t$BuildContextAndTToNvoid().as(this.delegate.dispose);
          t3$ == null ? null : t3$(dart.nullCheck(this.element), T.as(this[_value]));
        }
      }
      debugFillProperties(properties) {
        let t3;
        super.debugFillProperties(properties);
        if (this[_didInitValue]) {
          t3 = properties;
          (() => {
            t3.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
            t3.add(new diagnostics.FlagProperty.new("", {value: this[_removeListener] != null, defaultValue: false, ifTrue: "listening to value"}));
            return t3;
          })();
        } else {
          properties.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
        }
      }
      build(opts) {
        let t4, t3;
        let isBuildFromExternalSources = opts && 'isBuildFromExternalSources' in opts ? opts.isBuildFromExternalSources : null;
        let shouldNotify = false;
        if (isBuildFromExternalSources && this[_didInitValue] && __t$BuildContextAndTNToNT().as(this.delegate.update) != null) {
          let previousValue = this[_value];
          let _debugPreviousIsInInheritedProviderCreate = null;
          let _debugPreviousIsInInheritedProviderUpdate = null;
          if (!dart.fn(() => {
            _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
            _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
            return true;
          }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 839, 14, "() {\n        _debugPreviousIsInInheritedProviderCreate =\n            debugIsInInheritedProviderCreate;\n        _debugPreviousIsInInheritedProviderUpdate =\n            debugIsInInheritedProviderUpdate;\n        return true;\n      }()");
          try {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = false;
              provider$.debugIsInInheritedProviderUpdate = true;
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 847, 16, "() {\n          debugIsInInheritedProviderCreate = false;\n          debugIsInInheritedProviderUpdate = true;\n          return true;\n        }()");
            this[_value] = dart.nullCheck(__t$BuildContextAndTNToNT().as(this.delegate.update))(dart.nullCheck(this.element), T.as(this[_value]));
          } finally {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
              provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 854, 16, "() {\n          debugIsInInheritedProviderCreate =\n              _debugPreviousIsInInheritedProviderCreate!;\n          debugIsInInheritedProviderUpdate =\n              _debugPreviousIsInInheritedProviderUpdate!;\n          return true;\n        }()");
          }
          if (__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]) != null) {
            shouldNotify = dart.nullCheck(__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]))(T.as(previousValue), T.as(this[_value]));
          } else {
            shouldNotify = !dart.equals(this[_value], previousValue);
          }
          if (shouldNotify) {
            if (!dart.fn(() => {
              let t3;
              t3 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t3 == null ? null : t3(T.as(this[_value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 873, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
            if (this[_removeListener] != null) {
              dart.nullCheck(this[_removeListener])();
              this[_removeListener] = null;
            }
            t3 = this[_previousWidget];
            t3 == null ? null : (t4 = __t$BuildContextAndTToNvoid().as(t3.dispose), t4 == null ? null : t4(dart.nullCheck(this.element), T.as(previousValue)));
          }
        }
        if (shouldNotify) {
          dart.nullCheck(this.element)[_shouldNotifyDependents] = true;
        }
        this[_previousWidget] = this.delegate;
        return super.build({isBuildFromExternalSources: isBuildFromExternalSources});
      }
      get hasValue() {
        return this[_didInitValue];
      }
      static ['_#new#tearOff'](T) {
        return new (provider$._CreateInheritedProviderState$(T)).new();
      }
    }
    (_CreateInheritedProviderState.new = function() {
      this[_removeListener] = null;
      this[_didInitValue] = false;
      this[_value] = null;
      this[_previousWidget] = null;
      this[_initError] = null;
      _CreateInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _CreateInheritedProviderState.prototype;
    dart.addTypeTests(_CreateInheritedProviderState);
    _CreateInheritedProviderState.prototype[_is__CreateInheritedProviderState_default] = true;
    dart.addTypeCaches(_CreateInheritedProviderState);
    dart.setGetterSignature(_CreateInheritedProviderState, () => ({
      __proto__: dart.getGetters(_CreateInheritedProviderState.__proto__),
      value: T,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_CreateInheritedProviderState, I[9]);
    dart.setFieldSignature(_CreateInheritedProviderState, () => ({
      __proto__: dart.getFields(_CreateInheritedProviderState.__proto__),
      [_removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [_didInitValue]: dart.fieldType(core.bool),
      [_value]: dart.fieldType(dart.nullable(T)),
      [_previousWidget]: dart.fieldType(dart.nullable(provider$._CreateInheritedProvider$(T))),
      [_initError]: dart.fieldType(dart.nullable(assertions.FlutterErrorDetails))
    }));
    return _CreateInheritedProviderState;
  });
  provider$._CreateInheritedProviderState = provider$._CreateInheritedProviderState$();
  dart.addTypeTests(provider$._CreateInheritedProviderState, _is__CreateInheritedProviderState_default);
  const _is__ValueInheritedProvider_default = Symbol('_is__ValueInheritedProvider_default');
  provider$._ValueInheritedProvider$ = dart.generic(T => {
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$_ValueInheritedProviderStateOfT = () => (__t$_ValueInheritedProviderStateOfT = dart.constFn(provider$._ValueInheritedProviderState$(T)))();
    class _ValueInheritedProvider extends provider$._Delegate$(T) {
      static ['_#new#tearOff'](T, opts) {
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        return new (provider$._ValueInheritedProvider$(T)).new({value: value, updateShouldNotify: updateShouldNotify, startListening: startListening});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
      }
      createState() {
        return new (__t$_ValueInheritedProviderStateOfT()).new();
      }
    }
    (_ValueInheritedProvider.new = function(opts) {
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      this.value = value;
      this.startListening = startListening;
      this[_updateShouldNotify] = updateShouldNotify;
      ;
    }).prototype = _ValueInheritedProvider.prototype;
    dart.addTypeTests(_ValueInheritedProvider);
    _ValueInheritedProvider.prototype[_is__ValueInheritedProvider_default] = true;
    dart.addTypeCaches(_ValueInheritedProvider);
    dart.setMethodSignature(_ValueInheritedProvider, () => ({
      __proto__: dart.getMethods(_ValueInheritedProvider.__proto__),
      createState: dart.fnType(provider$._ValueInheritedProviderState$(T), [])
    }));
    dart.setLibraryUri(_ValueInheritedProvider, I[9]);
    dart.setFieldSignature(_ValueInheritedProvider, () => ({
      __proto__: dart.getFields(_ValueInheritedProvider.__proto__),
      value: dart.finalFieldType(T),
      [_updateShouldNotify]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T]))),
      startListening: dart.finalFieldType(dart.nullable(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(T)), T])))
    }));
    return _ValueInheritedProvider;
  });
  provider$._ValueInheritedProvider = provider$._ValueInheritedProvider$();
  dart.addTypeTests(provider$._ValueInheritedProvider, _is__ValueInheritedProvider_default);
  const _is__ValueInheritedProviderState_default = Symbol('_is__ValueInheritedProviderState_default');
  provider$._ValueInheritedProviderState$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$InheritedContextOfTN = () => (__t$InheritedContextOfTN = dart.constFn(provider$.InheritedContext$(__t$TN())))();
    var __t$InheritedContextOfTNAndTToFn = () => (__t$InheritedContextOfTNAndTToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfTN(), T])))();
    var __t$InheritedContextOfTNAndTToNFn = () => (__t$InheritedContextOfTNAndTToNFn = dart.constFn(dart.nullable(__t$InheritedContextOfTNAndTToFn())))();
    var __t$_ValueInheritedProviderOfT = () => (__t$_ValueInheritedProviderOfT = dart.constFn(provider$._ValueInheritedProvider$(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    class _ValueInheritedProviderState extends provider$._DelegateState$(T, provider$._ValueInheritedProvider$(T)) {
      get value() {
        let t3;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = false;
        this[_removeListener] == null ? this[_removeListener] = (t3 = __t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening), t3 == null ? null : t3(dart.nullCheck(this.element), this.delegate.value)) : null;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = true;
        if (!(__t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening) == null || this[_removeListener] != null)) dart.assertFailed(null, I[7], 928, 12, "delegate.startListening == null || _removeListener != null");
        return this.delegate.value;
      }
      willUpdateDelegate(newDelegate) {
        __t$_ValueInheritedProviderOfT().as(newDelegate);
        let shouldNotify = null;
        if (__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]) != null) {
          shouldNotify = dart.nullCheck(__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]))(this.delegate.value, newDelegate.value);
        } else {
          shouldNotify = !dart.equals(newDelegate.value, this.delegate.value);
        }
        if (shouldNotify && this[_removeListener] != null) {
          dart.nullCheck(this[_removeListener])();
          this[_removeListener] = null;
        }
        return shouldNotify;
      }
      dispose() {
        let t3;
        super.dispose();
        t3 = this[_removeListener];
        t3 == null ? null : t3();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new diagnostics.FlagProperty.new("", {value: this[_removeListener] != null, defaultValue: false, ifTrue: "listening to value"}));
      }
      get hasValue() {
        return true;
      }
      static ['_#new#tearOff'](T) {
        return new (provider$._ValueInheritedProviderState$(T)).new();
      }
    }
    (_ValueInheritedProviderState.new = function() {
      this[_removeListener] = null;
      _ValueInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueInheritedProviderState.prototype;
    dart.addTypeTests(_ValueInheritedProviderState);
    _ValueInheritedProviderState.prototype[_is__ValueInheritedProviderState_default] = true;
    dart.addTypeCaches(_ValueInheritedProviderState);
    dart.setGetterSignature(_ValueInheritedProviderState, () => ({
      __proto__: dart.getGetters(_ValueInheritedProviderState.__proto__),
      value: T,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_ValueInheritedProviderState, I[9]);
    dart.setFieldSignature(_ValueInheritedProviderState, () => ({
      __proto__: dart.getFields(_ValueInheritedProviderState.__proto__),
      [_removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [])))
    }));
    return _ValueInheritedProviderState;
  });
  provider$._ValueInheritedProviderState = provider$._ValueInheritedProviderState$();
  dart.addTypeTests(provider$._ValueInheritedProviderState, _is__ValueInheritedProviderState_default);
  var DeepCollectionEquality__unordered = dart.privateName(equality, "DeepCollectionEquality._unordered");
  var DeepCollectionEquality__base = dart.privateName(equality, "DeepCollectionEquality._base");
  provider$.debugPostEvent = function debugPostEvent(eventKind, event = C[6] || CT.C6) {
    if (provider$._debugPostEventOverride != null) {
      dart.nullCheck(provider$._debugPostEventOverride)(eventKind, event);
    } else {
      developer.postEvent(eventKind, event);
    }
  };
  provider$.spyPostEvent = function spyPostEvent() {
    if (!(provider$._debugPostEventOverride == null)) dart.assertFailed("postEvent is already spied", I[17], 22, 10, "_debugPostEventOverride == null");
    let spy = new provider$.PostEventSpy.__();
    provider$._debugPostEventOverride = dart.bind(spy, _postEvent);
    return spy;
  };
  provider$['SelectContext|select'] = function SelectContext$124select(T, R, $this, selector) {
    let t4;
    if (!!sliver.SliverWithKeepAliveWidget.is($this.widget)) dart.assertFailed("    Tried to use context.select inside a SliverList/SliderGridView.\n\n    This is likely a mistake, as instead of rebuilding only the item that cares\n    about the selected value, this would rebuild the entire list/grid.\n\n    To fix, add a `Builder` or extract the content of `itemBuilder` in a separate widget:\n\n    ```dart\n    ListView.builder(\n      itemBuilder: (context, index) {\n        return Builder(builder: (context) {\n          final todo = context.select((TodoList list) => list[index]);\n          return Text(todo.name);\n        });\n      },\n    );\n    ```\n    ", I[7], 247, 12, "widget is! SliverWithKeepAliveWidget");
    if (!(layout_builder.LayoutBuilder.is($this.widget) || $this.debugDoingBuild)) dart.assertFailed("Tried to use `context.select` outside of the `build` method of a widget.\n\nAny usage other than inside the `build` method of a widget are not supported.\n", I[7], 266, 12, "widget is LayoutBuilder || debugDoingBuild");
    let inheritedElement = provider$.Provider._inheritedElementOf(T, $this);
    try {
      let value = (t4 = inheritedElement, t4 == null ? null : t4.value);
      if (!T.is(value)) {
        dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), $this.widget[$runtimeType]));
      }
      if (!dart.fn(() => {
        provider$._debugIsSelecting = true;
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 279, 14, "() {\n        _debugIsSelecting = true;\n        return true;\n      }()");
      let selected = selector(value);
      if (inheritedElement != null) {
        $this.dependOnInheritedElement(inheritedElement, {aspect: dart.fn(newValue => {
            if (!T.is(newValue)) {
              dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), $this.widget[$runtimeType]));
            }
            return !(C[7] || CT.C7).equals(selector(newValue), selected);
          }, dart.fnType(core.bool, [dart.nullable(T)]))});
      } else {
        $this.dependOnInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T)));
      }
      return selected;
    } finally {
      if (!dart.fn(() => {
        provider$._debugIsSelecting = false;
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 304, 14, "() {\n        _debugIsSelecting = false;\n        return true;\n      }()");
    }
  };
  provider$['SelectContext|get#select'] = function SelectContext$124get$35select($this) {
    return dart.fn((T, R, selector) => provider$['SelectContext|select'](T, R, $this, selector), T$.FnToR());
  };
  provider$['ReadContext|read'] = function ReadContext$124read(T, $this) {
    return provider$.Provider.of(T, $this, {listen: false});
  };
  provider$['ReadContext|get#read'] = function ReadContext$124get$35read($this) {
    return dart.fn(T => provider$['ReadContext|read'](T, $this), T$.VoidToT());
  };
  provider$['WatchContext|watch'] = function WatchContext$124watch(T, $this) {
    return provider$.Provider.of(T, $this);
  };
  provider$['WatchContext|get#watch'] = function WatchContext$124get$35watch($this) {
    return dart.fn(T => provider$['WatchContext|watch'](T, $this), T$.VoidToT());
  };
  dart.defineLazy(provider$, {
    /*provider$._isSoundMode*/get _isSoundMode() {
      return !T$.ListOfint().is(T$.JSArrayOfintN().of([]));
    },
    /*provider$._debugPostEventOverride*/get _debugPostEventOverride() {
      return null;
    },
    set _debugPostEventOverride(value) {},
    /*provider$._debugIsSelecting*/get _debugIsSelecting() {
      return false;
    },
    set _debugIsSelecting(value) {},
    /*provider$.debugIsInInheritedProviderUpdate*/get debugIsInInheritedProviderUpdate() {
      return false;
    },
    set debugIsInInheritedProviderUpdate(value) {},
    /*provider$.debugIsInInheritedProviderCreate*/get debugIsInInheritedProviderCreate() {
      return false;
    },
    set debugIsInInheritedProviderCreate(value) {}
  }, false);
  const _is_ProxyProvider0_default = Symbol('_is_ProxyProvider0_default');
  proxy_provider.ProxyProvider0$ = dart.generic(R => {
    var __t$RTovoid = () => (__t$RTovoid = dart.constFn(dart.fnType(dart.void, [R])))();
    class ProxyProvider0 extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider0$(R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider0.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: update, dispose: dispose, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: dart.fn(value => {
          let t9;
          t9 = provider$.Provider.debugCheckInvalidValueType;
          return t9 == null ? null : t9(R, value);
        }, __t$RTovoid()), child: child});
      ;
    }).prototype = ProxyProvider0.prototype;
    dart.addTypeTests(ProxyProvider0);
    ProxyProvider0.prototype[_is_ProxyProvider0_default] = true;
    dart.addTypeCaches(ProxyProvider0);
    dart.setLibraryUri(ProxyProvider0, I[18]);
    return ProxyProvider0;
  });
  proxy_provider.ProxyProvider0 = proxy_provider.ProxyProvider0$();
  dart.addTypeTests(proxy_provider.ProxyProvider0, _is_ProxyProvider0_default);
  const _is_ProxyProvider_default = Symbol('_is_ProxyProvider_default');
  proxy_provider.ProxyProvider$ = dart.generic((T, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider$(T, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider.prototype;
    dart.addTypeTests(ProxyProvider);
    ProxyProvider.prototype[_is_ProxyProvider_default] = true;
    dart.addTypeCaches(ProxyProvider);
    dart.setLibraryUri(ProxyProvider, I[18]);
    return ProxyProvider;
  });
  proxy_provider.ProxyProvider = proxy_provider.ProxyProvider$();
  dart.addTypeTests(proxy_provider.ProxyProvider, _is_ProxyProvider_default);
  const _is_ProxyProvider2_default = Symbol('_is_ProxyProvider2_default');
  proxy_provider.ProxyProvider2$ = dart.generic((T, T2, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider2 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider2.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider2.prototype;
    dart.addTypeTests(ProxyProvider2);
    ProxyProvider2.prototype[_is_ProxyProvider2_default] = true;
    dart.addTypeCaches(ProxyProvider2);
    dart.setLibraryUri(ProxyProvider2, I[18]);
    return ProxyProvider2;
  });
  proxy_provider.ProxyProvider2 = proxy_provider.ProxyProvider2$();
  dart.addTypeTests(proxy_provider.ProxyProvider2, _is_ProxyProvider2_default);
  const _is_ProxyProvider3_default = Symbol('_is_ProxyProvider3_default');
  proxy_provider.ProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider3 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider3.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider3.prototype;
    dart.addTypeTests(ProxyProvider3);
    ProxyProvider3.prototype[_is_ProxyProvider3_default] = true;
    dart.addTypeCaches(ProxyProvider3);
    dart.setLibraryUri(ProxyProvider3, I[18]);
    return ProxyProvider3;
  });
  proxy_provider.ProxyProvider3 = proxy_provider.ProxyProvider3$();
  dart.addTypeTests(proxy_provider.ProxyProvider3, _is_ProxyProvider3_default);
  const _is_ProxyProvider4_default = Symbol('_is_ProxyProvider4_default');
  proxy_provider.ProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider4 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider4.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider4.prototype;
    dart.addTypeTests(ProxyProvider4);
    ProxyProvider4.prototype[_is_ProxyProvider4_default] = true;
    dart.addTypeCaches(ProxyProvider4);
    dart.setLibraryUri(ProxyProvider4, I[18]);
    return ProxyProvider4;
  });
  proxy_provider.ProxyProvider4 = proxy_provider.ProxyProvider4$();
  dart.addTypeTests(proxy_provider.ProxyProvider4, _is_ProxyProvider4_default);
  const _is_ProxyProvider5_default = Symbol('_is_ProxyProvider5_default');
  proxy_provider.ProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider5 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider5.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider5.prototype;
    dart.addTypeTests(ProxyProvider5);
    ProxyProvider5.prototype[_is_ProxyProvider5_default] = true;
    dart.addTypeCaches(ProxyProvider5);
    dart.setLibraryUri(ProxyProvider5, I[18]);
    return ProxyProvider5;
  });
  proxy_provider.ProxyProvider5 = proxy_provider.ProxyProvider5$();
  dart.addTypeTests(proxy_provider.ProxyProvider5, _is_ProxyProvider5_default);
  const _is_ProxyProvider6_default = Symbol('_is_ProxyProvider6_default');
  proxy_provider.ProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider6 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider6.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), provider$.Provider.of(T6, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider6.prototype;
    dart.addTypeTests(ProxyProvider6);
    ProxyProvider6.prototype[_is_ProxyProvider6_default] = true;
    dart.addTypeCaches(ProxyProvider6);
    dart.setLibraryUri(ProxyProvider6, I[18]);
    return ProxyProvider6;
  });
  proxy_provider.ProxyProvider6 = proxy_provider.ProxyProvider6$();
  dart.addTypeTests(proxy_provider.ProxyProvider6, _is_ProxyProvider6_default);
  reassemble_handler.ReassembleHandler = class ReassembleHandler extends core.Object {};
  (reassemble_handler.ReassembleHandler.new = function() {
    ;
  }).prototype = reassemble_handler.ReassembleHandler.prototype;
  dart.addTypeTests(reassemble_handler.ReassembleHandler);
  dart.addTypeCaches(reassemble_handler.ReassembleHandler);
  dart.setLibraryUri(reassemble_handler.ReassembleHandler, I[19]);
  var builder$6 = dart.privateName(selector$, "Selector0.builder");
  var selector$0 = dart.privateName(selector$, "Selector0.selector");
  var _shouldRebuild = dart.privateName(selector$, "_shouldRebuild");
  var _child$0 = dart.privateName(nested, "SingleChildStatefulWidget._child");
  nested.SingleChildStatefulWidget = class SingleChildStatefulWidget extends framework.StatefulWidget {
    get [_child$]() {
      return this[_child$0];
    }
    set [_child$](value) {
      super[_child$] = value;
    }
    createElement() {
      return new nested.SingleChildStatefulElement.new(this);
    }
  };
  (nested.SingleChildStatefulWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[_child$0] = child;
    nested.SingleChildStatefulWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.SingleChildStatefulWidget.prototype;
  dart.addTypeTests(nested.SingleChildStatefulWidget);
  dart.addTypeCaches(nested.SingleChildStatefulWidget);
  nested.SingleChildStatefulWidget[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.SingleChildStatefulWidget, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatefulWidget.__proto__),
    createElement: dart.fnType(nested.SingleChildStatefulElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatefulWidget, I[8]);
  dart.setFieldSignature(nested.SingleChildStatefulWidget, () => ({
    __proto__: dart.getFields(nested.SingleChildStatefulWidget.__proto__),
    [_child$]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const _is_Selector0_default = Symbol('_is_Selector0_default');
  selector$.Selector0$ = dart.generic(T => {
    var __t$_Selector0StateOfT = () => (__t$_Selector0StateOfT = dart.constFn(selector$._Selector0State$(T)))();
    class Selector0 extends nested.SingleChildStatefulWidget {
      get builder() {
        return this[builder$6];
      }
      set builder(value) {
        super.builder = value;
      }
      get selector() {
        return this[selector$0];
      }
      set selector(value) {
        super.selector = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector0$(T)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
      createState() {
        return new (__t$_Selector0StateOfT()).new();
      }
    }
    (Selector0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$6] = builder;
      this[selector$0] = selector;
      this[_shouldRebuild] = shouldRebuild;
      Selector0.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Selector0.prototype;
    dart.addTypeTests(Selector0);
    Selector0.prototype[_is_Selector0_default] = true;
    dart.addTypeCaches(Selector0);
    dart.setMethodSignature(Selector0, () => ({
      __proto__: dart.getMethods(Selector0.__proto__),
      createState: dart.fnType(selector$._Selector0State$(T), [])
    }));
    dart.setLibraryUri(Selector0, I[20]);
    dart.setFieldSignature(Selector0, () => ({
      __proto__: dart.getFields(Selector0.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, dart.nullable(framework.Widget)])),
      selector: dart.finalFieldType(dart.fnType(T, [framework.BuildContext])),
      [_shouldRebuild]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T])))
    }));
    return Selector0;
  });
  selector$.Selector0 = selector$.Selector0$();
  dart.addTypeTests(selector$.Selector0, _is_Selector0_default);
  var value$ = dart.privateName(selector$, "_Selector0State.value");
  const _is_SingleChildState_default = Symbol('_is_SingleChildState_default');
  nested.SingleChildState$ = dart.generic(T => {
    class SingleChildState extends framework.State$(T) {
      build(context) {
        return this.buildWithChild(context, this.widget[_child$]);
      }
    }
    (SingleChildState.new = function() {
      SingleChildState.__proto__.new.call(this);
      ;
    }).prototype = SingleChildState.prototype;
    dart.addTypeTests(SingleChildState);
    SingleChildState.prototype[_is_SingleChildState_default] = true;
    dart.addTypeCaches(SingleChildState);
    dart.setMethodSignature(SingleChildState, () => ({
      __proto__: dart.getMethods(SingleChildState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(SingleChildState, I[8]);
    return SingleChildState;
  });
  nested.SingleChildState = nested.SingleChildState$();
  dart.addTypeTests(nested.SingleChildState, _is_SingleChildState_default);
  const _is__Selector0State_default = Symbol('_is__Selector0State_default');
  selector$._Selector0State$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    var __t$BuildContextAndTAndWidgetNToWidget = () => (__t$BuildContextAndTAndWidgetNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T, T$.WidgetN()])))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class _Selector0State extends nested.SingleChildState$(selector$.Selector0$(T)) {
      get value() {
        return this[value$];
      }
      set value(value) {
        this[value$] = __t$TN().as(value);
      }
      buildWithChild(context, child) {
        let t10, t9;
        let selected = (t9 = this.widget, t10 = context, t9.selector(t10));
        let shouldInvalidateCache = !dart.equals(this.oldWidget, this.widget) || __t$TAndTToNbool().as(this.widget[_shouldRebuild]) != null && dart.nullCheck(__t$TAndTToNbool().as(this.widget[_shouldRebuild]))(T.as(this.value), selected) || __t$TAndTToNbool().as(this.widget[_shouldRebuild]) == null && !(C[7] || CT.C7).equals(this.value, selected);
        if (shouldInvalidateCache) {
          this.value = selected;
          this.oldWidget = this.widget;
          this.cache = new basic.Builder.new({builder: dart.fn(context => {
              let t12, t11, t10, t9;
              t9 = this.widget;
              t10 = context;
              t11 = selected;
              t12 = child;
              return __t$BuildContextAndTAndWidgetNToWidget().as(t9.builder)(t10, t11, t12);
            }, T$.BuildContextToWidget())});
        }
        return dart.nullCheck(this.cache);
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
      }
      static ['_#new#tearOff'](T) {
        return new (selector$._Selector0State$(T)).new();
      }
    }
    (_Selector0State.new = function() {
      this[value$] = null;
      this.cache = null;
      this.oldWidget = null;
      _Selector0State.__proto__.new.call(this);
      ;
    }).prototype = _Selector0State.prototype;
    dart.addTypeTests(_Selector0State);
    _Selector0State.prototype[_is__Selector0State_default] = true;
    dart.addTypeCaches(_Selector0State);
    dart.setMethodSignature(_Selector0State, () => ({
      __proto__: dart.getMethods(_Selector0State.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(_Selector0State, I[20]);
    dart.setFieldSignature(_Selector0State, () => ({
      __proto__: dart.getFields(_Selector0State.__proto__),
      value: dart.fieldType(dart.nullable(T)),
      cache: dart.fieldType(dart.nullable(framework.Widget)),
      oldWidget: dart.fieldType(dart.nullable(framework.Widget))
    }));
    return _Selector0State;
  });
  selector$._Selector0State = selector$._Selector0State$();
  dart.addTypeTests(selector$._Selector0State, _is__Selector0State_default);
  const _is_Selector_default = Symbol('_is_Selector_default');
  selector$.Selector$ = dart.generic((A, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector$(A, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector.prototype;
    dart.addTypeTests(Selector);
    Selector.prototype[_is_Selector_default] = true;
    dart.addTypeCaches(Selector);
    dart.setLibraryUri(Selector, I[20]);
    return Selector;
  });
  selector$.Selector = selector$.Selector$();
  dart.addTypeTests(selector$.Selector, _is_Selector_default);
  const _is_Selector2_default = Symbol('_is_Selector2_default');
  selector$.Selector2$ = dart.generic((A, B, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector2 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector2$(A, B, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector2.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector2.prototype;
    dart.addTypeTests(Selector2);
    Selector2.prototype[_is_Selector2_default] = true;
    dart.addTypeCaches(Selector2);
    dart.setLibraryUri(Selector2, I[20]);
    return Selector2;
  });
  selector$.Selector2 = selector$.Selector2$();
  dart.addTypeTests(selector$.Selector2, _is_Selector2_default);
  const _is_Selector3_default = Symbol('_is_Selector3_default');
  selector$.Selector3$ = dart.generic((A, B, C, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector3 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector3$(A, B, C, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector3.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector3.prototype;
    dart.addTypeTests(Selector3);
    Selector3.prototype[_is_Selector3_default] = true;
    dart.addTypeCaches(Selector3);
    dart.setLibraryUri(Selector3, I[20]);
    return Selector3;
  });
  selector$.Selector3 = selector$.Selector3$();
  dart.addTypeTests(selector$.Selector3, _is_Selector3_default);
  const _is_Selector4_default = Symbol('_is_Selector4_default');
  selector$.Selector4$ = dart.generic((A, B, C, D, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector4 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector4$(A, B, C, D, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector4.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector4.prototype;
    dart.addTypeTests(Selector4);
    Selector4.prototype[_is_Selector4_default] = true;
    dart.addTypeCaches(Selector4);
    dart.setLibraryUri(Selector4, I[20]);
    return Selector4;
  });
  selector$.Selector4 = selector$.Selector4$();
  dart.addTypeTests(selector$.Selector4, _is_Selector4_default);
  const _is_Selector5_default = Symbol('_is_Selector5_default');
  selector$.Selector5$ = dart.generic((A, B, C, D, E, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector5 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, E, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector5$(A, B, C, D, E, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector5.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context), provider$.Provider.of(E, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector5.prototype;
    dart.addTypeTests(Selector5);
    Selector5.prototype[_is_Selector5_default] = true;
    dart.addTypeCaches(Selector5);
    dart.setLibraryUri(Selector5, I[20]);
    return Selector5;
  });
  selector$.Selector5 = selector$.Selector5$();
  dart.addTypeTests(selector$.Selector5, _is_Selector5_default);
  const _is_Selector6_default = Symbol('_is_Selector6_default');
  selector$.Selector6$ = dart.generic((A, B, C, D, E, F, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector6 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, E, F, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector6$(A, B, C, D, E, F, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector6.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context), provider$.Provider.of(E, context), provider$.Provider.of(F, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector6.prototype;
    dart.addTypeTests(Selector6);
    Selector6.prototype[_is_Selector6_default] = true;
    dart.addTypeCaches(Selector6);
    dart.setLibraryUri(Selector6, I[20]);
    return Selector6;
  });
  selector$.Selector6 = selector$.Selector6$();
  dart.addTypeTests(selector$.Selector6, _is_Selector6_default);
  var _valueListenable = dart.privateName(value_listenable_provider, "_valueListenable");
  var _updateShouldNotify$ = dart.privateName(value_listenable_provider, "_updateShouldNotify");
  const _is_ValueListenableProvider_default = Symbol('_is_ValueListenableProvider_default');
  value_listenable_provider.ValueListenableProvider$ = dart.generic(T => {
    var __t$ValueListenableBuilderOfT = () => (__t$ValueListenableBuilderOfT = dart.constFn(value_listenable_builder.ValueListenableBuilder$(T)))();
    var __t$ProviderOfT = () => (__t$ProviderOfT = dart.constFn(provider$.Provider$(T)))();
    var __t$BuildContextAndTAndWidgetNToProviderOfT = () => (__t$BuildContextAndTAndWidgetNToProviderOfT = dart.constFn(dart.fnType(__t$ProviderOfT(), [framework.BuildContext, T, T$.WidgetN()])))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class ValueListenableProvider extends nested.SingleChildStatelessWidget {
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (value_listenable_provider.ValueListenableProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, child: child});
      }
      buildWithChild(context, child) {
        return new (__t$ValueListenableBuilderOfT()).new({valueListenable: this[_valueListenable], builder: dart.fn((context, value, _) => new (__t$ProviderOfT()).value({value: value, updateShouldNotify: this[_updateShouldNotify$], child: child}), __t$BuildContextAndTAndWidgetNToProviderOfT())});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this[_valueListenable].value));
      }
    }
    (ValueListenableProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[_valueListenable] = value;
      this[_updateShouldNotify$] = updateShouldNotify;
      ValueListenableProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = ValueListenableProvider.prototype;
    dart.addTypeTests(ValueListenableProvider);
    ValueListenableProvider.prototype[_is_ValueListenableProvider_default] = true;
    dart.addTypeCaches(ValueListenableProvider);
    dart.setMethodSignature(ValueListenableProvider, () => ({
      __proto__: dart.getMethods(ValueListenableProvider.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(ValueListenableProvider, I[21]);
    dart.setFieldSignature(ValueListenableProvider, () => ({
      __proto__: dart.getFields(ValueListenableProvider.__proto__),
      [_valueListenable]: dart.finalFieldType(change_notifier.ValueListenable$(T)),
      [_updateShouldNotify$]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T])))
    }));
    return ValueListenableProvider;
  });
  value_listenable_provider.ValueListenableProvider = value_listenable_provider.ValueListenableProvider$();
  dart.addTypeTests(value_listenable_provider.ValueListenableProvider, _is_ValueListenableProvider_default);
  var Color_value = dart.privateName(ui, "Color.value");
  var ColorSwatch__swatch = dart.privateName(colors$, "ColorSwatch._swatch");
  var Gradient_transform = dart.privateName(gradient, "Gradient.transform");
  var Gradient_stops = dart.privateName(gradient, "Gradient.stops");
  var Gradient_colors = dart.privateName(gradient, "Gradient.colors");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var LinearGradient_tileMode = dart.privateName(gradient, "LinearGradient.tileMode");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var LinearGradient_end = dart.privateName(gradient, "LinearGradient.end");
  var LinearGradient_begin = dart.privateName(gradient, "LinearGradient.begin");
  dart.defineLazy(colors$0, {
    /*colors$0.cRed*/get cRed() {
      return C[9] || CT.C9;
    },
    /*colors$0.cBlue*/get cBlue() {
      return C[10] || CT.C10;
    },
    /*colors$0.cGreen*/get cGreen() {
      return C[22] || CT.C22;
    },
    /*colors$0.cYellow*/get cYellow() {
      return C[23] || CT.C23;
    },
    /*colors$0.cGrey*/get cGrey() {
      return C[35] || CT.C35;
    },
    /*colors$0.cWhite*/get cWhite() {
      return C[36] || CT.C36;
    },
    /*colors$0.cBlack*/get cBlack() {
      return C[37] || CT.C37;
    },
    /*colors$0.cTransparent*/get cTransparent() {
      return C[38] || CT.C38;
    },
    /*colors$0.cPrimer*/get cPrimer() {
      return C[39] || CT.C39;
    },
    /*colors$0.cSecond*/get cSecond() {
      return C[40] || CT.C40;
    },
    /*colors$0.cTx1*/get cTx1() {
      return C[37] || CT.C37;
    },
    /*colors$0.cTx2*/get cTx2() {
      return C[41] || CT.C41;
    },
    /*colors$0.cBg1*/get cBg1() {
      return colors.Colors.grey.shade300;
    },
    set cBg1(value) {},
    /*colors$0.cBg2*/get cBg2() {
      return C[42] || CT.C42;
    },
    /*colors$0.cStroke1*/get cStroke1() {
      return C[37] || CT.C37;
    },
    /*colors$0.cElement1*/get cElement1() {
      return C[43] || CT.C43;
    },
    /*colors$0.cBSPrimary*/get cBSPrimary() {
      return C[44] || CT.C44;
    },
    /*colors$0.cBSSecondary*/get cBSSecondary() {
      return C[45] || CT.C45;
    },
    /*colors$0.cBSSuccess*/get cBSSuccess() {
      return C[46] || CT.C46;
    },
    /*colors$0.cBSDanger*/get cBSDanger() {
      return C[47] || CT.C47;
    },
    /*colors$0.cBSWarning*/get cBSWarning() {
      return C[48] || CT.C48;
    },
    /*colors$0.cBSInfo*/get cBSInfo() {
      return C[49] || CT.C49;
    },
    /*colors$0.cBSLight*/get cBSLight() {
      return C[50] || CT.C50;
    },
    /*colors$0.cBSDark*/get cBSDark() {
      return C[51] || CT.C51;
    },
    /*colors$0.cBSDefault*/get cBSDefault() {
      return C[52] || CT.C52;
    },
    /*colors$0.cGradientPrim*/get cGradientPrim() {
      return C[53] || CT.C53;
    },
    /*colors$0.cGradientSec*/get cGradientSec() {
      return C[58] || CT.C58;
    },
    /*colors$0.cGradientBox*/get cGradientBox() {
      return C[62] || CT.C62;
    }
  }, false);
  dart.defineLazy(keys, {
    /*keys.API_KEY*/get API_KEY() {
      return "AIzaSyClb4GDpsXDFSvWumM4vyFj7dMT2ShTWak";
    }
  }, false);
  dart.defineLazy(paths, {
    /*paths._iconBase*/get _iconBase() {
      return "lib/assets/icons";
    },
    /*paths.pathSvgMenu*/get pathSvgMenu() {
      return "lib/assets/icons/menu.svg";
    },
    /*paths._imageBase*/get _imageBase() {
      return "lib/assets/images";
    },
    /*paths.pathImgNoImage*/get pathImgNoImage() {
      return "lib/assets/images" + "/noimage.jpg";
    },
    /*paths.pathSvgNoImage*/get pathSvgNoImage() {
      return "lib/assets/images" + "/file.svg";
    }
  }, false);
  var BorderSide_strokeAlign = dart.privateName(borders, "BorderSide.strokeAlign");
  var BorderSide_style = dart.privateName(borders, "BorderSide.style");
  var BorderSide_width = dart.privateName(borders, "BorderSide.width");
  var BorderSide_color = dart.privateName(borders, "BorderSide.color");
  styles.outlineInputBorder = function outlineInputBorder() {
    return new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(15), borderSide: C[67] || CT.C67});
  };
  var Shadow_blurRadius = dart.privateName(ui, "Shadow.blurRadius");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var Shadow_offset = dart.privateName(ui, "Shadow.offset");
  var Shadow_color = dart.privateName(ui, "Shadow.color");
  var BoxShadow_blurStyle = dart.privateName(box_shadow, "BoxShadow.blurStyle");
  var BoxShadow_spreadRadius = dart.privateName(box_shadow, "BoxShadow.spreadRadius");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  dart.defineLazy(styles, {
    /*styles.kDefaultShadow*/get kDefaultShadow() {
      return C[69] || CT.C69;
    },
    /*styles.kTextStyle*/get kTextStyle() {
      return C[73] || CT.C73;
    },
    /*styles.kHeadingStyle*/get kHeadingStyle() {
      return new text_style.TextStyle.new({fontSize: 21, fontWeight: ui.FontWeight.bold, color: colors.Colors.black, height: 1.5});
    },
    /*styles.otpInputDecoration*/get otpInputDecoration() {
      return new input_decorator.InputDecoration.new({contentPadding: C[75] || CT.C75, border: styles.outlineInputBorder(), focusedBorder: styles.outlineInputBorder(), enabledBorder: styles.outlineInputBorder()});
    }
  }, false);
  themes.Themes = class Themes extends core.Object {
    static ['_#new#tearOff']() {
      return new themes.Themes.new();
    }
  };
  (themes.Themes.new = function() {
    ;
  }).prototype = themes.Themes.prototype;
  dart.addTypeTests(themes.Themes);
  dart.addTypeCaches(themes.Themes);
  dart.setLibraryUri(themes.Themes, I[22]);
  dart.setStaticFieldSignature(themes.Themes, () => ['light', 'dark']);
  dart.defineLazy(themes.Themes, {
    /*themes.Themes.light*/get light() {
      return theme_data.ThemeData.new({colorScheme: new color_scheme.ColorScheme.light({background: colors$0.cBg1, primary: colors$0.cWhite, secondary: colors$0.cSecond, inversePrimary: colors$0.cPrimer}), primarySwatch: colors.Colors.brown, brightness: ui.Brightness.light, primaryIconTheme: new icon_theme_data.IconThemeData.new({color: colors$0.cWhite}), fontFamily: "Poppins", appBarTheme: new app_bar_theme.AppBarTheme.new({backgroundColor: colors$0.cPrimer})});
    },
    /*themes.Themes.dark*/get dark() {
      return theme_data.ThemeData.new({colorScheme: new color_scheme.ColorScheme.light({background: colors.Colors.grey.shade300, primary: colors$0.cWhite, secondary: colors$0.cSecond, inversePrimary: colors$0.cPrimer}), primaryColor: colors$0.cGrey, brightness: ui.Brightness.dark, fontFamily: "Poppins"});
    }
  }, false);
  dart.copyProperties(themes, {
    get myLinkText() {
      return new text_style.TextStyle.new({fontFamily: "Poppins", fontSize: 14, color: colors$0.cYellow});
    },
    get myLinkText2() {
      return new text_style.TextStyle.new({fontFamily: "Poppins", fontSize: 14, color: colors$0.cBlue, decoration: ui.TextDecoration.underline, decorationStyle: ui.TextDecorationStyle.double});
    }
  });
  var Duration__duration = dart.privateName(core, "Duration._duration");
  dart.defineLazy(variables, {
    /*variables.dbName*/get dbName() {
      return "dbName.db";
    },
    /*variables.APP_NAME*/get APP_NAME() {
      return "KAMSYA";
    },
    /*variables.APP_DESC*/get APP_DESC() {
      return "POS Kambingnya Abu Rasya";
    },
    /*variables.TAG_LINE*/get TAG_LINE() {
      return "InshaAllah Barokah";
    },
    /*variables.WA_ADMIN*/get WA_ADMIN() {
      return "08123456789";
    },
    /*variables.APP_VERSI*/get APP_VERSI() {
      return "2.2111.6";
    },
    /*variables.BASE_URL*/get BASE_URL() {
      return "http://10.0.2.2:8000/api/";
    },
    /*variables.API_URL_1*/get API_URL_1() {
      return "https://fakestoreapi.com/";
    },
    /*variables.kDefaultPadding*/get kDefaultPadding() {
      return 20;
    },
    /*variables.kMobileWidth*/get kMobileWidth() {
      return 600;
    },
    /*variables.kTabletWdth*/get kTabletWdth() {
      return 1200;
    },
    /*variables.kTabletBreakpointWidth*/get kTabletBreakpointWidth() {
      return 768;
    },
    /*variables.kDesktopBreakpointWidth*/get kDesktopBreakpointWidth() {
      return 1440;
    },
    /*variables.kSideMenuWidth*/get kSideMenuWidth() {
      return 300;
    },
    /*variables.kNavigationRailWidth*/get kNavigationRailWidth() {
      return 72;
    },
    /*variables.TIME_OUT_DURATION*/get TIME_OUT_DURATION() {
      return 30;
    },
    /*variables.kAnimationDuration*/get kAnimationDuration() {
      return C[76] || CT.C76;
    },
    /*variables.kDefaultDuration*/get kDefaultDuration() {
      return C[77] || CT.C77;
    },
    /*variables.tableCategoryName*/get tableCategoryName() {
      return "Category";
    },
    /*variables.colMainCategoryId*/get colMainCategoryId() {
      return "ID";
    },
    /*variables.colMainCategoryName*/get colMainCategoryName() {
      return "Name";
    },
    /*variables.colMainCategoryImage*/get colMainCategoryImage() {
      return "Image";
    },
    /*variables.tableQuestionName*/get tableQuestionName() {
      return "Question";
    },
    /*variables.colQuestionId*/get colQuestionId() {
      return "ID";
    },
    /*variables.colQuestionText*/get colQuestionText() {
      return "QuestionText";
    },
    /*variables.colQuestionIsImage*/get colQuestionIsImage() {
      return "IsImageQuestion";
    },
    /*variables.colQuestionImage*/get colQuestionImage() {
      return "QuestionImage";
    },
    /*variables.colQuestionAnswerA*/get colQuestionAnswerA() {
      return "AnswerA";
    },
    /*variables.colQuestionAnswerB*/get colQuestionAnswerB() {
      return "AnswerB";
    },
    /*variables.colQuestionAnswerC*/get colQuestionAnswerC() {
      return "AnswerC";
    },
    /*variables.colQuestionAnswerD*/get colQuestionAnswerD() {
      return "AnswerD";
    },
    /*variables.colQuestionCorrectAnswer*/get colQuestionCorrectAnswer() {
      return "CorrectAnswer";
    },
    /*variables.colQuestionCategoryId*/get colQuestionCategoryId() {
      return "CategoryID";
    },
    /*variables.sSuccess*/get sSuccess() {
      return "Great";
    },
    /*variables.sFail*/get sFail() {
      return "Failed";
    },
    /*variables.sError*/get sError() {
      return "Eror";
    },
    /*variables.sMsgSuccessExecution*/get sMsgSuccessExecution() {
      return "Process sucessfully executed";
    },
    /*variables.sMsgSuccessAddData*/get sMsgSuccessAddData() {
      return "New data sucessfully added";
    },
    /*variables.sMsgSuccessUpdateData*/get sMsgSuccessUpdateData() {
      return "Data sucessfully updated";
    },
    /*variables.sMsgSuccessDeleteData*/get sMsgSuccessDeleteData() {
      return "Data sucessfully deleted";
    },
    /*variables.sMsgFailExecution*/get sMsgFailExecution() {
      return "Process failed to be executed";
    },
    /*variables.sMsgFailAddData*/get sMsgFailAddData() {
      return "New data failed to be added";
    },
    /*variables.sMsgFailUpdateData*/get sMsgFailUpdateData() {
      return "Data failed to be updated";
    },
    /*variables.sMsgFailDeleteData*/get sMsgFailDeleteData() {
      return "Data failed to be deleted";
    },
    /*variables.sAuthFail*/get sAuthFail() {
      return "User ID is not registered, or Wrong Password!";
    },
    /*variables.kEmailValidatorRegExp*/get kEmailValidatorRegExp() {
      return core.RegExp.new("^[a-zA-Z0-9.]+@[a-zA-Z0-9]+\\.[a-zA-Z]+");
    },
    /*variables.kUserNullError*/get kUserNullError() {
      return "Please Enter your User ID";
    },
    /*variables.kPassNullError*/get kPassNullError() {
      return "Please Enter your Password";
    },
    /*variables.kEmailNullError*/get kEmailNullError() {
      return "Please Enter Valid Email";
    },
    /*variables.kInvalidEmailError*/get kInvalidEmailError() {
      return "Please Enter Valid Email";
    },
    /*variables.kFieldNullError*/get kFieldNullError() {
      return "The field cannot be empty";
    },
    /*variables.kShortPassError*/get kShortPassError() {
      return "Password is too short";
    },
    /*variables.kMatchPassError*/get kMatchPassError() {
      return "Passwords doesn't match";
    },
    /*variables.kNamelNullError*/get kNamelNullError() {
      return "Please Enter your name";
    },
    /*variables.kPhoneNumberNullError*/get kPhoneNumberNullError() {
      return "Please Enter your phone number";
    },
    /*variables.kAddressNullError*/get kAddressNullError() {
      return "Please Enter your address";
    }
  }, false);
  button_pg.ButtonPage = class ButtonPage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new button_pg.ButtonPage.new({key: key});
    }
    build(context) {
      let size = media_query.MediaQuery.of(context).size;
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({elevation: 0, centerTitle: true, title: new text$.Text.new("Button Page")}), body: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Padding.new({padding: C[78] || CT.C78, child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new basic.SizedBox.new({width: size.width * 0.5, child: button_wdg.MyButtons.primary(context, "Primary with SizedBox", dart.fn(() => core.print("Primary"), T$.VoidTovoid()))}), new basic.SizedBox.new({height: 5}), button_wdg.MyButtons.primary(context, "Primary", dart.fn(() => core.print("Primary"), T$.VoidTovoid())), new basic.SizedBox.new({height: 5}), button_wdg.MyButtons.warning(context, "Warning", dart.fn(() => core.print("Warning"), T$.VoidTovoid())), new basic.SizedBox.new({height: 5}), button_wdg.MyButtons.danger(context, "Danger", dart.fn(() => core.print("Danger"), T$.VoidTovoid())), new basic.SizedBox.new({height: 5}), button_wdg.MyButtons.disabled(context, "Disabled"), new basic.SizedBox.new({height: 5}), button_wdg.MyButtons.isLoading(context, "Loading..."), new basic.SizedBox.new({height: 5}), button_wdg.MyButtons.primaryOutlined(context, "Primary Outlined", dart.fn(() => core.print("Primary Outlined"), T$.VoidTovoid())), new basic.SizedBox.new({height: 5}), button_wdg.MyButtons.dangerOutlined(context, "Danger Outlined", dart.fn(() => core.print("Danger Outlined"), T$.VoidTovoid())), new basic.SizedBox.new({height: 5}), button_wdg.MyButtons.primaryGradiented(context, "Primary Gradiented", dart.fn(() => {
                  core.print("Primary Gradiented");
                }, T$.VoidToNull())), new basic.SizedBox.new({height: 5}), button_wdg.MyButtons.primary(context, "Show Primary Snackbar", dart.fn(() => {
                  core.print("--Clicked: Show Snackbar");
                  snackbar_wdg.MySnackbar.primary(context, "Hello", "Mabroook");
                }, T$.VoidToNull())), new basic.SizedBox.new({height: 5}), button_wdg.MyButtons.danger(context, "Show Danger Snackbar", dart.fn(() => {
                  core.print("--Clicked: Show Snackbar");
                  snackbar_wdg.MySnackbar.danger(context, "Upps", "Error Detected");
                }, T$.VoidToNull())), new basic.SizedBox.new({height: 5}), button_wdg.MyButtons.primaryOutlined(context, "Show Dialog", dart.fn(() => {
                  core.print("Show Dialog");
                  dialog_wdg.MyDialogs.alert(context, "Dialog", "How are you Dialog?");
                }, T$.VoidToNull())), new basic.SizedBox.new({height: 5}), button_wdg.MyButtons.primaryOutlined(context, "Show Alert Dialog", dart.fn(() => {
                  core.print("Show Alert Dialog");
                  dialog_wdg.MyDialogs.alert2(context, "AlertDialog", "How are you AlertDialog?");
                }, T$.VoidToNull())), new basic.SizedBox.new({height: 5}), button_wdg.MyButtons.primaryGradiented(context, "Show Loading", dart.fn(() => {
                  core.print("Show Loading");
                  dialog_wdg.MyDialogs.loading(context);
                }, T$.VoidToNull()))])})})})});
    }
  };
  (button_pg.ButtonPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    button_pg.ButtonPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = button_pg.ButtonPage.prototype;
  dart.addTypeTests(button_pg.ButtonPage);
  dart.addTypeCaches(button_pg.ButtonPage);
  dart.setMethodSignature(button_pg.ButtonPage, () => ({
    __proto__: dart.getMethods(button_pg.ButtonPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(button_pg.ButtonPage, I[23]);
  home_pg.HomePage = class HomePage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new home_pg.HomePage.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text$.Text.new("Home Page")}), body: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Padding.new({padding: C[78] || CT.C78, child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new basic.SizedBox.new({height: 5}), button_wdg$.MyButtons.primary(context, "Buttons", dart.fn(() => extension_hlp['NavigatorExtension|push'](core.Object, context, new button_pg.ButtonPage.new()), T$.VoidToFutureOfObjectN())), new basic.SizedBox.new({height: 5}), button_wdg$.MyButtons.primary(context, "Form Inputs", dart.fn(() => extension_hlp['NavigatorExtension|push'](core.Object, context, new form_input_pg$.FormInputPage.new()), T$.VoidToFutureOfObjectN())), new basic.SizedBox.new({height: 5}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                  }, T$.VoidTovoid()), child: new text$.Text.new("ElevatedButton")}), new basic.SizedBox.new({height: 5}), new basic.ConstrainedBox.new({constraints: new box.BoxConstraints.new({maxHeight: 100, maxWidth: 100}), child: new container.Container.new({padding: new edge_insets.EdgeInsets.all(10), color: colors$0.cYellow, child: new text$.Text.new("Text in ConstrainedBox")})}), new basic.SizedBox.new({height: 5}), new material_button.MaterialButton.new({onPressed: dart.fn(() => {
                  }, T$.VoidTovoid()), child: new text$.Text.new("MaterialButton")}), button_wdg$.MyButtons.primary(context, "ElevatedButton Primary-2", dart.fn(() => {
                }, T$.VoidToNull())), new basic.SizedBox.new({height: 5}), button_wdg$.MyButtons.danger(context, "ElevatedButton Danger-2", dart.fn(() => {
                }, T$.VoidToNull()))])})})})});
    }
  };
  (home_pg.HomePage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    home_pg.HomePage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = home_pg.HomePage.prototype;
  dart.addTypeTests(home_pg.HomePage);
  dart.addTypeCaches(home_pg.HomePage);
  dart.setMethodSignature(home_pg.HomePage, () => ({
    __proto__: dart.getMethods(home_pg.HomePage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(home_pg.HomePage, I[24]);
  var _appBar = dart.privateName(product_pg, "_appBar");
  var _buildUI = dart.privateName(product_pg, "_buildUI");
  product_pg.ProductPage = class ProductPage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new product_pg.ProductPage.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: this[_appBar](context), body: this[_buildUI](context)});
    }
    [_appBar](context) {
      return new app_bar.AppBar.new({title: new text$.Text.new("Products"), actions: T$.JSArrayOfWidget().of([new icon_button.IconButton.new({onPressed: dart.fn(() => {
              navigator.Navigator.pushNamed(T$.ObjectN(), context, "/home");
            }, T$.VoidTovoid()), icon: new icon.Icon.new(icons.Icons.shopping_cart)})])});
    }
    [_buildUI](context) {
      return new scroll_view.ListView.builder({itemCount: product_dt.dataProducts[$length], itemBuilder: dart.fn((context, index) => {
          let row = product_dt.dataProducts[$_get](index);
          return new list_tile.ListTile.new({leading: new icon.Icon.new(icons.Icons.account_circle, {size: 25, color: colors.Colors.primaries[$_get](math.Random.new().nextInt(colors.Colors.primaries[$length]))}), title: new text$.Text.new(row.name)});
        }, T$.BuildContextAndintToListTile())});
    }
  };
  (product_pg.ProductPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    product_pg.ProductPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = product_pg.ProductPage.prototype;
  dart.addTypeTests(product_pg.ProductPage);
  dart.addTypeCaches(product_pg.ProductPage);
  dart.setMethodSignature(product_pg.ProductPage, () => ({
    __proto__: dart.getMethods(product_pg.ProductPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_appBar]: dart.fnType(preferred_size.PreferredSizeWidget, [framework.BuildContext]),
    [_buildUI]: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(product_pg.ProductPage, I[25]);
  var _appBar$ = dart.privateName(cart_pg, "_appBar");
  var _buildUI$ = dart.privateName(cart_pg, "_buildUI");
  cart_pg.CartPage = class CartPage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new cart_pg.CartPage.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: this[_appBar$](), body: this[_buildUI$]()});
    }
    [_appBar$]() {
      return new app_bar.AppBar.new({title: new text$.Text.new("Cart page")});
    }
    [_buildUI$]() {
      return new (T$.ConsumerOfCartProvider()).new({builder: dart.fn((context, provider, _) => new container.Container.new({child: new basic.Center.new({child: new text$.Text.new("Test")})}), T$.BuildContextAndCartProviderAndWidgetNToContainer())});
    }
  };
  (cart_pg.CartPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    cart_pg.CartPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = cart_pg.CartPage.prototype;
  dart.addTypeTests(cart_pg.CartPage);
  dart.addTypeCaches(cart_pg.CartPage);
  dart.setMethodSignature(cart_pg.CartPage, () => ({
    __proto__: dart.getMethods(cart_pg.CartPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_appBar$]: dart.fnType(preferred_size.PreferredSizeWidget, []),
    [_buildUI$]: dart.fnType(framework.Widget, [])
  }));
  dart.setLibraryUri(cart_pg.CartPage, I[26]);
  var id$0 = dart.privateName(car_mdl, "CarModel.id");
  var yearModel$ = dart.privateName(car_mdl, "CarModel.yearModel");
  var type$0 = dart.privateName(car_mdl, "CarModel.type");
  var pictureUrl$ = dart.privateName(car_mdl, "CarModel.pictureUrl");
  car_mdl.CarModel = class CarModel extends core.Object {
    get id() {
      return this[id$0];
    }
    set id(value) {
      super.id = value;
    }
    get yearModel() {
      return this[yearModel$];
    }
    set yearModel(value) {
      super.yearModel = value;
    }
    get type() {
      return this[type$0];
    }
    set type(value) {
      super.type = value;
    }
    get pictureUrl() {
      return this[pictureUrl$];
    }
    set pictureUrl(value) {
      super.pictureUrl = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let yearModel = opts && 'yearModel' in opts ? opts.yearModel : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let pictureUrl = opts && 'pictureUrl' in opts ? opts.pictureUrl : null;
      return new car_mdl.CarModel.new({id: id, yearModel: yearModel, type: type, pictureUrl: pictureUrl});
    }
  };
  (car_mdl.CarModel.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let yearModel = opts && 'yearModel' in opts ? opts.yearModel : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let pictureUrl = opts && 'pictureUrl' in opts ? opts.pictureUrl : null;
    this[id$0] = id;
    this[yearModel$] = yearModel;
    this[type$0] = type;
    this[pictureUrl$] = pictureUrl;
    ;
  }).prototype = car_mdl.CarModel.prototype;
  dart.addTypeTests(car_mdl.CarModel);
  dart.addTypeCaches(car_mdl.CarModel);
  dart.setLibraryUri(car_mdl.CarModel, I[27]);
  dart.setFieldSignature(car_mdl.CarModel, () => ({
    __proto__: dart.getFields(car_mdl.CarModel.__proto__),
    id: dart.finalFieldType(core.int),
    yearModel: dart.finalFieldType(core.String),
    type: dart.finalFieldType(core.String),
    pictureUrl: dart.finalFieldType(core.String)
  }));
  var carModels = dart.privateName(sliver_vw, "SliverView.carModels");
  sliver_vw.SliverView = class SliverView extends framework.StatelessWidget {
    get carModels() {
      return this[carModels];
    }
    set carModels(value) {
      super.carModels = value;
    }
    build(context) {
      return new app.MaterialApp.new({debugShowCheckedModeBanner: false, home: new scaffold.Scaffold.new({body: new scroll_view.CustomScrollView.new({slivers: T$.JSArrayOfWidget().of([new app_bar.SliverAppBar.new({expandedHeight: 200, floating: false, pinned: true, flexibleSpace: new flexible_space_bar.FlexibleSpaceBar.new({title: new text$.Text.new("Car Models"), background: new image.Image.network("https://picsum.photos/200", {fit: box_fit.BoxFit.cover})})}), new sliver.SliverList.new({delegate: new sliver.SliverChildBuilderDelegate.new(dart.fn((context, index) => {
                  let car = this.carModels[$_get](index);
                  return new list_tile.ListTile.new({title: new text$.Text.new(car.yearModel + " " + car.type), subtitle: new text$.Text.new("ID: " + dart.str(car.id)), leading: new image.Image.network(car.pictureUrl, {width: 50, height: 50, fit: box_fit.BoxFit.cover})});
                }, T$.BuildContextAndintToListTile()), {childCount: this.carModels[$length]})})])})})});
    }
    static ['_#new#tearOff']() {
      return new sliver_vw.SliverView.new();
    }
  };
  (sliver_vw.SliverView.new = function() {
    this[carModels] = T$.JSArrayOfCarModel().of([new car_mdl.CarModel.new({id: 1, yearModel: "2022", type: "Sedan", pictureUrl: "https://picsum.photos/200"}), new car_mdl.CarModel.new({id: 2, yearModel: "2023", type: "SUV", pictureUrl: "https://picsum.photos/200"})]);
    sliver_vw.SliverView.__proto__.new.call(this);
    ;
  }).prototype = sliver_vw.SliverView.prototype;
  dart.addTypeTests(sliver_vw.SliverView);
  dart.addTypeCaches(sliver_vw.SliverView);
  dart.setMethodSignature(sliver_vw.SliverView, () => ({
    __proto__: dart.getMethods(sliver_vw.SliverView.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_vw.SliverView, I[28]);
  dart.setFieldSignature(sliver_vw.SliverView, () => ({
    __proto__: dart.getFields(sliver_vw.SliverView.__proto__),
    carModels: dart.finalFieldType(core.List$(car_mdl.CarModel))
  }));
  var _data = dart.privateName(shared_preferences_platform_interface, "_data");
  shared_preferences_platform_interface.InMemorySharedPreferencesStore = class InMemorySharedPreferencesStore extends shared_preferences_platform_interface.SharedPreferencesStorePlatform {
    static ['_#empty#tearOff']() {
      return new shared_preferences_platform_interface.InMemorySharedPreferencesStore.empty();
    }
    static ['_#withData#tearOff'](data) {
      return new shared_preferences_platform_interface.InMemorySharedPreferencesStore.withData(data);
    }
    clear() {
      return async.async(core.bool, (function* clear() {
        return this.clearWithParameters(new types.ClearParameters.new({filter: new types.PreferencesFilter.new({prefix: "flutter."})}));
      }).bind(this));
    }
    clearWithPrefix(prefix) {
      return async.async(core.bool, (function* clearWithPrefix() {
        return this.clearWithParameters(new types.ClearParameters.new({filter: new types.PreferencesFilter.new({prefix: prefix})}));
      }).bind(this));
    }
    clearWithParameters(parameters) {
      return async.async(core.bool, (function* clearWithParameters() {
        let filter = parameters.filter;
        if (filter.allowList != null) {
          this[_data][$removeWhere](dart.fn((key, _) => key[$startsWith](filter.prefix) && dart.nullCheck(filter.allowList).contains(key), T$.StringAndObjectTobool()));
        } else {
          this[_data][$removeWhere](dart.fn((key, _) => key[$startsWith](filter.prefix), T$.StringAndObjectTobool()));
        }
        return true;
      }).bind(this));
    }
    getAll() {
      return async.async(T$.MapOfString$Object(), (function* getAll() {
        return this.getAllWithParameters(new types.GetAllParameters.new({filter: new types.PreferencesFilter.new({prefix: "flutter."})}));
      }).bind(this));
    }
    getAllWithPrefix(prefix) {
      return async.async(T$.MapOfString$Object(), (function* getAllWithPrefix() {
        return this.getAllWithParameters(new types.GetAllParameters.new({filter: new types.PreferencesFilter.new({prefix: prefix})}));
      }).bind(this));
    }
    getAllWithParameters(parameters) {
      return async.async(T$.MapOfString$Object(), (function* getAllWithParameters() {
        let filter = parameters.filter;
        let preferences = T$.LinkedHashMapOfString$Object().from(this[_data]);
        preferences[$removeWhere](dart.fn((key, _) => !key[$startsWith](filter.prefix) || filter.allowList != null && !dart.nullCheck(filter.allowList).contains(key), T$.StringAndObjectTobool()));
        return preferences;
      }).bind(this));
    }
    remove(key) {
      return async.async(core.bool, (function* remove() {
        this[_data][$remove](key);
        return true;
      }).bind(this));
    }
    setValue(valueType, key, value) {
      return async.async(core.bool, (function* setValue() {
        this[_data][$_set](key, value);
        return true;
      }).bind(this));
    }
  };
  (shared_preferences_platform_interface.InMemorySharedPreferencesStore.empty = function() {
    this[_data] = new (T$.IdentityMapOfString$Object()).new();
    shared_preferences_platform_interface.InMemorySharedPreferencesStore.__proto__.new.call(this);
    ;
  }).prototype = shared_preferences_platform_interface.InMemorySharedPreferencesStore.prototype;
  (shared_preferences_platform_interface.InMemorySharedPreferencesStore.withData = function(data) {
    this[_data] = T$.LinkedHashMapOfString$Object().from(data);
    shared_preferences_platform_interface.InMemorySharedPreferencesStore.__proto__.new.call(this);
    ;
  }).prototype = shared_preferences_platform_interface.InMemorySharedPreferencesStore.prototype;
  dart.addTypeTests(shared_preferences_platform_interface.InMemorySharedPreferencesStore);
  dart.addTypeCaches(shared_preferences_platform_interface.InMemorySharedPreferencesStore);
  dart.setMethodSignature(shared_preferences_platform_interface.InMemorySharedPreferencesStore, () => ({
    __proto__: dart.getMethods(shared_preferences_platform_interface.InMemorySharedPreferencesStore.__proto__),
    clear: dart.fnType(async.Future$(core.bool), []),
    getAll: dart.fnType(async.Future$(core.Map$(core.String, core.Object)), []),
    remove: dart.fnType(async.Future$(core.bool), [core.String]),
    setValue: dart.fnType(async.Future$(core.bool), [core.String, core.String, core.Object])
  }));
  dart.setLibraryUri(shared_preferences_platform_interface.InMemorySharedPreferencesStore, I[5]);
  dart.setFieldSignature(shared_preferences_platform_interface.InMemorySharedPreferencesStore, () => ({
    __proto__: dart.getFields(shared_preferences_platform_interface.InMemorySharedPreferencesStore.__proto__),
    [_data]: dart.finalFieldType(core.Map$(core.String, core.Object))
  }));
  dart.setStaticFieldSignature(shared_preferences_platform_interface.InMemorySharedPreferencesStore, () => ['_defaultPrefix']);
  dart.defineLazy(shared_preferences_platform_interface.InMemorySharedPreferencesStore, {
    /*shared_preferences_platform_interface.InMemorySharedPreferencesStore._defaultPrefix*/get _defaultPrefix() {
      return "flutter.";
    }
  }, false);
  var prefix$ = dart.privateName(types, "PreferencesFilter.prefix");
  var allowList$ = dart.privateName(types, "PreferencesFilter.allowList");
  types.PreferencesFilter = class PreferencesFilter extends core.Object {
    get prefix() {
      return this[prefix$];
    }
    set prefix(value) {
      this[prefix$] = value;
    }
    get allowList() {
      return this[allowList$];
    }
    set allowList(value) {
      this[allowList$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let prefix = opts && 'prefix' in opts ? opts.prefix : null;
      let allowList = opts && 'allowList' in opts ? opts.allowList : null;
      return new types.PreferencesFilter.new({prefix: prefix, allowList: allowList});
    }
  };
  (types.PreferencesFilter.new = function(opts) {
    let prefix = opts && 'prefix' in opts ? opts.prefix : null;
    let allowList = opts && 'allowList' in opts ? opts.allowList : null;
    this[prefix$] = prefix;
    this[allowList$] = allowList;
    ;
  }).prototype = types.PreferencesFilter.prototype;
  dart.addTypeTests(types.PreferencesFilter);
  dart.addTypeCaches(types.PreferencesFilter);
  dart.setLibraryUri(types.PreferencesFilter, I[29]);
  dart.setFieldSignature(types.PreferencesFilter, () => ({
    __proto__: dart.getFields(types.PreferencesFilter.__proto__),
    prefix: dart.fieldType(core.String),
    allowList: dart.fieldType(dart.nullable(core.Set$(core.String)))
  }));
  var filter$ = dart.privateName(types, "GetAllParameters.filter");
  types.GetAllParameters = class GetAllParameters extends core.Object {
    get filter() {
      return this[filter$];
    }
    set filter(value) {
      this[filter$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let filter = opts && 'filter' in opts ? opts.filter : null;
      return new types.GetAllParameters.new({filter: filter});
    }
  };
  (types.GetAllParameters.new = function(opts) {
    let filter = opts && 'filter' in opts ? opts.filter : null;
    this[filter$] = filter;
    ;
  }).prototype = types.GetAllParameters.prototype;
  dart.addTypeTests(types.GetAllParameters);
  dart.addTypeCaches(types.GetAllParameters);
  dart.setLibraryUri(types.GetAllParameters, I[29]);
  dart.setFieldSignature(types.GetAllParameters, () => ({
    __proto__: dart.getFields(types.GetAllParameters.__proto__),
    filter: dart.fieldType(types.PreferencesFilter)
  }));
  var filter$0 = dart.privateName(types, "ClearParameters.filter");
  types.ClearParameters = class ClearParameters extends core.Object {
    get filter() {
      return this[filter$0];
    }
    set filter(value) {
      this[filter$0] = value;
    }
    static ['_#new#tearOff'](opts) {
      let filter = opts && 'filter' in opts ? opts.filter : null;
      return new types.ClearParameters.new({filter: filter});
    }
  };
  (types.ClearParameters.new = function(opts) {
    let filter = opts && 'filter' in opts ? opts.filter : null;
    this[filter$0] = filter;
    ;
  }).prototype = types.ClearParameters.prototype;
  dart.addTypeTests(types.ClearParameters);
  dart.addTypeCaches(types.ClearParameters);
  dart.setLibraryUri(types.ClearParameters, I[29]);
  dart.setFieldSignature(types.ClearParameters, () => ({
    __proto__: dart.getFields(types.ClearParameters.__proto__),
    filter: dart.fieldType(types.PreferencesFilter)
  }));
  const StatelessElement_SingleChildWidgetElementMixin$36$ = class StatelessElement_SingleChildWidgetElementMixin extends framework.StatelessElement {};
  (StatelessElement_SingleChildWidgetElementMixin$36$.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatelessElement_SingleChildWidgetElementMixin$36$.__proto__.new.call(this, widget);
  }).prototype = StatelessElement_SingleChildWidgetElementMixin$36$.prototype;
  dart.applyMixin(StatelessElement_SingleChildWidgetElementMixin$36$, nested.SingleChildWidgetElementMixin);
  nested._NestedElement = class _NestedElement extends StatelessElement_SingleChildWidgetElementMixin$36$ {
    static ['_#new#tearOff'](widget) {
      return new nested._NestedElement.new(widget);
    }
    get widget() {
      return nested.Nested.as(super.widget);
    }
    build() {
      let t9, t9$, t9$0;
      let nestedHook = null;
      let nextNode = (t9$ = (t9 = this[_parent], t9 == null ? null : t9.injectedChild), t9$ == null ? this.widget[_child$] : t9$);
      for (let child of this.widget[_children][$reversed]) {
        nextNode = nestedHook = new nested._NestedHook.new({owner: this, wrappedWidget: child, injectedChild: nextNode});
      }
      if (nestedHook != null) {
        for (let node of this.nodes) {
          t9$0 = node;
          (() => {
            t9$0.wrappedChild = dart.nullCheck(nestedHook).wrappedWidget;
            t9$0.injectedChild = nestedHook.injectedChild;
            return t9$0;
          })();
          let next = nestedHook.injectedChild;
          if (nested._NestedHook.is(next)) {
            nestedHook = next;
          } else {
            break;
          }
        }
      }
      return dart.nullCheck(nextNode);
    }
  };
  (nested._NestedElement.new = function(widget) {
    this.nodes = T$.LinkedHashSetOf_NestedHookElement().new();
    nested._NestedElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._NestedElement.prototype;
  dart.addTypeTests(nested._NestedElement);
  dart.addTypeCaches(nested._NestedElement);
  dart.setGetterSignature(nested._NestedElement, () => ({
    __proto__: dart.getGetters(nested._NestedElement.__proto__),
    widget: nested.Nested
  }));
  dart.setLibraryUri(nested._NestedElement, I[8]);
  dart.setFieldSignature(nested._NestedElement, () => ({
    __proto__: dart.getFields(nested._NestedElement.__proto__),
    nodes: dart.finalFieldType(core.Set$(nested._NestedHookElement))
  }));
  nested._NestedHook = class _NestedHook extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let injectedChild = opts && 'injectedChild' in opts ? opts.injectedChild : null;
      let wrappedWidget = opts && 'wrappedWidget' in opts ? opts.wrappedWidget : null;
      let owner = opts && 'owner' in opts ? opts.owner : null;
      return new nested._NestedHook.new({injectedChild: injectedChild, wrappedWidget: wrappedWidget, owner: owner});
    }
    createElement() {
      return new nested._NestedHookElement.new(this);
    }
    build(context) {
      return dart.throw(new core.StateError.new("handled internally"));
    }
  };
  (nested._NestedHook.new = function(opts) {
    let injectedChild = opts && 'injectedChild' in opts ? opts.injectedChild : null;
    let wrappedWidget = opts && 'wrappedWidget' in opts ? opts.wrappedWidget : null;
    let owner = opts && 'owner' in opts ? opts.owner : null;
    this.injectedChild = injectedChild;
    this.wrappedWidget = wrappedWidget;
    this.owner = owner;
    nested._NestedHook.__proto__.new.call(this);
    ;
  }).prototype = nested._NestedHook.prototype;
  dart.addTypeTests(nested._NestedHook);
  dart.addTypeCaches(nested._NestedHook);
  dart.setMethodSignature(nested._NestedHook, () => ({
    __proto__: dart.getMethods(nested._NestedHook.__proto__),
    createElement: dart.fnType(nested._NestedHookElement, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(nested._NestedHook, I[8]);
  dart.setFieldSignature(nested._NestedHook, () => ({
    __proto__: dart.getFields(nested._NestedHook.__proto__),
    wrappedWidget: dart.finalFieldType(nested.SingleChildWidget),
    injectedChild: dart.finalFieldType(dart.nullable(framework.Widget)),
    owner: dart.finalFieldType(nested._NestedElement)
  }));
  var _injectedChild = dart.privateName(nested, "_injectedChild");
  var _wrappedChild = dart.privateName(nested, "_wrappedChild");
  nested._NestedHookElement = class _NestedHookElement extends framework.StatelessElement {
    static ['_#new#tearOff'](widget) {
      return new nested._NestedHookElement.new(widget);
    }
    get widget() {
      return nested._NestedHook.as(super.widget);
    }
    get injectedChild() {
      return this[_injectedChild];
    }
    set injectedChild(value) {
      let previous = this[_injectedChild];
      if (nested._NestedHook.is(value) && nested._NestedHook.is(previous) && framework.Widget.canUpdate(value.wrappedWidget, previous.wrappedWidget)) {
        return;
      }
      if (!dart.equals(previous, value)) {
        this[_injectedChild] = value;
        this.visitChildren(dart.fn(e => e.markNeedsBuild(), T$.ElementTovoid()));
      }
    }
    get wrappedChild() {
      return this[_wrappedChild];
    }
    set wrappedChild(value) {
      if (!dart.equals(this[_wrappedChild], value)) {
        this[_wrappedChild] = value;
        this.markNeedsBuild();
      }
    }
    mount(parent, newSlot) {
      this.widget.owner.nodes.add(this);
      this[_wrappedChild] = this.widget.wrappedWidget;
      this[_injectedChild] = this.widget.injectedChild;
      super.mount(parent, newSlot);
    }
    unmount() {
      this.widget.owner.nodes.remove(this);
      super.unmount();
    }
    build() {
      return dart.nullCheck(this.wrappedChild);
    }
  };
  (nested._NestedHookElement.new = function(widget) {
    this[_injectedChild] = null;
    this[_wrappedChild] = null;
    nested._NestedHookElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._NestedHookElement.prototype;
  dart.addTypeTests(nested._NestedHookElement);
  dart.addTypeCaches(nested._NestedHookElement);
  dart.setMethodSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getMethods(nested._NestedHookElement.__proto__),
    mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic])
  }));
  dart.setGetterSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getGetters(nested._NestedHookElement.__proto__),
    widget: nested._NestedHook,
    injectedChild: dart.nullable(framework.Widget),
    wrappedChild: dart.nullable(nested.SingleChildWidget)
  }));
  dart.setSetterSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getSetters(nested._NestedHookElement.__proto__),
    injectedChild: dart.nullable(framework.Widget),
    wrappedChild: dart.nullable(nested.SingleChildWidget)
  }));
  dart.setLibraryUri(nested._NestedHookElement, I[8]);
  dart.setFieldSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getFields(nested._NestedHookElement.__proto__),
    [_injectedChild]: dart.fieldType(dart.nullable(framework.Widget)),
    [_wrappedChild]: dart.fieldType(dart.nullable(nested.SingleChildWidget))
  }));
  nested.SingleChildWidget = class SingleChildWidget extends core.Object {};
  (nested.SingleChildWidget.new = function() {
    ;
  }).prototype = nested.SingleChildWidget.prototype;
  dart.addTypeTests(nested.SingleChildWidget);
  dart.addTypeCaches(nested.SingleChildWidget);
  nested.SingleChildWidget[dart.implements] = () => [framework.Widget];
  dart.setLibraryUri(nested.SingleChildWidget, I[8]);
  const StatefulElement_SingleChildWidgetElementMixin$36 = class StatefulElement_SingleChildWidgetElementMixin extends framework.StatefulElement {};
  (StatefulElement_SingleChildWidgetElementMixin$36.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatefulElement_SingleChildWidgetElementMixin$36.__proto__.new.call(this, widget);
  }).prototype = StatefulElement_SingleChildWidgetElementMixin$36.prototype;
  dart.applyMixin(StatefulElement_SingleChildWidgetElementMixin$36, nested.SingleChildWidgetElementMixin);
  nested.SingleChildStatefulElement = class SingleChildStatefulElement extends StatefulElement_SingleChildWidgetElementMixin$36 {
    static ['_#new#tearOff'](widget) {
      return new nested.SingleChildStatefulElement.new(widget);
    }
    get widget() {
      return nested.SingleChildStatefulWidget.as(super.widget);
    }
    get state() {
      return T$.SingleChildStateOfSingleChildStatefulWidget().as(super.state);
    }
    build() {
      if (this[_parent] != null) {
        return this.state.buildWithChild(this, dart.nullCheck(dart.nullCheck(this[_parent]).injectedChild));
      }
      return super.build();
    }
  };
  (nested.SingleChildStatefulElement.new = function(widget) {
    nested.SingleChildStatefulElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested.SingleChildStatefulElement.prototype;
  dart.addTypeTests(nested.SingleChildStatefulElement);
  dart.addTypeCaches(nested.SingleChildStatefulElement);
  dart.setGetterSignature(nested.SingleChildStatefulElement, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatefulElement.__proto__),
    widget: nested.SingleChildStatefulWidget,
    state: nested.SingleChildState$(nested.SingleChildStatefulWidget)
  }));
  dart.setLibraryUri(nested.SingleChildStatefulElement, I[8]);
  var builder$7 = dart.privateName(nested, "SingleChildBuilder.builder");
  nested.SingleChildBuilder = class SingleChildBuilder extends nested.SingleChildStatelessWidget {
    get builder() {
      return this[builder$7];
    }
    set builder(value) {
      super.builder = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new nested.SingleChildBuilder.new({key: key, builder: builder, child: child});
    }
    buildWithChild(context, child) {
      let t10, t9;
      t9 = context;
      t10 = child;
      return this.builder(t9, t10);
    }
  };
  (nested.SingleChildBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[builder$7] = builder;
    nested.SingleChildBuilder.__proto__.new.call(this, {key: key, child: child});
    ;
  }).prototype = nested.SingleChildBuilder.prototype;
  dart.addTypeTests(nested.SingleChildBuilder);
  dart.addTypeCaches(nested.SingleChildBuilder);
  dart.setMethodSignature(nested.SingleChildBuilder, () => ({
    __proto__: dart.getMethods(nested.SingleChildBuilder.__proto__),
    buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
  }));
  dart.setLibraryUri(nested.SingleChildBuilder, I[8]);
  dart.setFieldSignature(nested.SingleChildBuilder, () => ({
    __proto__: dart.getFields(nested.SingleChildBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]))
  }));
  nested.SingleChildStatelessWidgetMixin = class SingleChildStatelessWidgetMixin extends core.Object {};
  nested.SingleChildStatelessWidgetMixin[dart.mixinOn] = Object => class SingleChildStatelessWidgetMixin extends Object {
    get [_child$]() {
      return this.child;
    }
    createElement() {
      return new nested.SingleChildStatelessElement.new(this);
    }
    build(context) {
      return this.buildWithChild(context, this.child);
    }
  };
  (nested.SingleChildStatelessWidgetMixin[dart.mixinNew] = function() {
  }).prototype = nested.SingleChildStatelessWidgetMixin.prototype;
  dart.addTypeTests(nested.SingleChildStatelessWidgetMixin);
  dart.addTypeCaches(nested.SingleChildStatelessWidgetMixin);
  nested.SingleChildStatelessWidgetMixin[dart.implements] = () => [framework.StatelessWidget, nested.SingleChildStatelessWidget, core.Object];
  dart.setMethodSignature(nested.SingleChildStatelessWidgetMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatelessWidgetMixin.__proto__),
    createElement: dart.fnType(nested.SingleChildStatelessElement, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(nested.SingleChildStatelessWidgetMixin, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatelessWidgetMixin.__proto__),
    [_child$]: dart.nullable(framework.Widget)
  }));
  dart.setLibraryUri(nested.SingleChildStatelessWidgetMixin, I[8]);
  nested.SingleChildStatefulWidgetMixin = class SingleChildStatefulWidgetMixin extends framework.StatefulWidget {};
  nested.SingleChildStatefulWidgetMixin[dart.mixinOn] = StatefulWidget => class SingleChildStatefulWidgetMixin extends StatefulWidget {
    createElement() {
      return new nested._SingleChildStatefulMixinElement.new(this);
    }
  };
  dart.addTypeTests(nested.SingleChildStatefulWidgetMixin);
  dart.addTypeCaches(nested.SingleChildStatefulWidgetMixin);
  nested.SingleChildStatefulWidgetMixin[dart.implements] = () => [nested.SingleChildWidget, framework.StatefulWidget];
  dart.setMethodSignature(nested.SingleChildStatefulWidgetMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatefulWidgetMixin.__proto__),
    createElement: dart.fnType(nested._SingleChildStatefulMixinElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatefulWidgetMixin, I[8]);
  const _is_SingleChildStateMixin_default = Symbol('_is_SingleChildStateMixin_default');
  nested.SingleChildStateMixin$ = dart.generic(T => {
    class SingleChildStateMixin extends framework.State$(T) {}
    SingleChildStateMixin[dart.mixinOn] = State => class SingleChildStateMixin extends State {
      build(context) {
        return this.buildWithChild(context, dart.nullCheck(nested.SingleChildStatefulWidgetMixin.as(this.widget).child));
      }
    };
    dart.addTypeTests(SingleChildStateMixin);
    SingleChildStateMixin.prototype[_is_SingleChildStateMixin_default] = true;
    dart.addTypeCaches(SingleChildStateMixin);
    SingleChildStateMixin[dart.implements] = () => [framework.State$(T)];
    dart.setMethodSignature(SingleChildStateMixin, () => ({
      __proto__: dart.getMethods(SingleChildStateMixin.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(SingleChildStateMixin, I[8]);
    return SingleChildStateMixin;
  });
  nested.SingleChildStateMixin = nested.SingleChildStateMixin$();
  dart.addTypeTests(nested.SingleChildStateMixin, _is_SingleChildStateMixin_default);
  const StatefulElement_SingleChildWidgetElementMixin$36$ = class StatefulElement_SingleChildWidgetElementMixin extends framework.StatefulElement {};
  (StatefulElement_SingleChildWidgetElementMixin$36$.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatefulElement_SingleChildWidgetElementMixin$36$.__proto__.new.call(this, widget);
  }).prototype = StatefulElement_SingleChildWidgetElementMixin$36$.prototype;
  dart.applyMixin(StatefulElement_SingleChildWidgetElementMixin$36$, nested.SingleChildWidgetElementMixin);
  nested._SingleChildStatefulMixinElement = class _SingleChildStatefulMixinElement extends StatefulElement_SingleChildWidgetElementMixin$36$ {
    static ['_#new#tearOff'](widget) {
      return new nested._SingleChildStatefulMixinElement.new(widget);
    }
    get widget() {
      return nested.SingleChildStatefulWidgetMixin.as(super.widget);
    }
    get state() {
      return T$.SingleChildStateMixinOfStatefulWidget().as(super.state);
    }
    build() {
      if (this[_parent] != null) {
        return this.state.buildWithChild(this, dart.nullCheck(dart.nullCheck(this[_parent]).injectedChild));
      }
      return super.build();
    }
  };
  (nested._SingleChildStatefulMixinElement.new = function(widget) {
    nested._SingleChildStatefulMixinElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._SingleChildStatefulMixinElement.prototype;
  dart.addTypeTests(nested._SingleChildStatefulMixinElement);
  dart.addTypeCaches(nested._SingleChildStatefulMixinElement);
  dart.setGetterSignature(nested._SingleChildStatefulMixinElement, () => ({
    __proto__: dart.getGetters(nested._SingleChildStatefulMixinElement.__proto__),
    widget: nested.SingleChildStatefulWidgetMixin,
    state: nested.SingleChildStateMixin$(framework.StatefulWidget)
  }));
  dart.setLibraryUri(nested._SingleChildStatefulMixinElement, I[8]);
  nested.SingleChildInheritedElementMixin = class SingleChildInheritedElementMixin extends core.Object {};
  nested.SingleChildInheritedElementMixin[dart.mixinOn] = _SingleChildInheritedElementMixin$36InheritedElement$36SingleChildWidgetElementMixin => class SingleChildInheritedElementMixin extends _SingleChildInheritedElementMixin$36InheritedElement$36SingleChildWidgetElementMixin {
    build() {
      if (this[_parent] != null) {
        return dart.nullCheck(dart.nullCheck(this[_parent]).injectedChild);
      }
      return super.build();
    }
  };
  dart.addTypeTests(nested.SingleChildInheritedElementMixin);
  dart.addTypeCaches(nested.SingleChildInheritedElementMixin);
  nested.SingleChildInheritedElementMixin[dart.implements] = () => [nested.SingleChildWidgetElementMixin, framework.InheritedElement];
  dart.setMethodSignature(nested.SingleChildInheritedElementMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildInheritedElementMixin.__proto__),
    build: dart.fnType(framework.Widget, [])
  }));
  dart.setLibraryUri(nested.SingleChildInheritedElementMixin, I[8]);
  var images$ = dart.privateName(product_mdl, "ProductModel.images");
  var name$ = dart.privateName(product_mdl, "ProductModel.name");
  var price$ = dart.privateName(product_mdl, "ProductModel.price");
  var stock$ = dart.privateName(product_mdl, "ProductModel.stock");
  var description$ = dart.privateName(product_mdl, "ProductModel.description");
  var store$ = dart.privateName(product_mdl, "ProductModel.store");
  product_mdl.ProductModel = class ProductModel extends core.Object {
    get images() {
      return this[images$];
    }
    set images(value) {
      super.images = value;
    }
    get name() {
      return this[name$];
    }
    set name(value) {
      super.name = value;
    }
    get price() {
      return this[price$];
    }
    set price(value) {
      super.price = value;
    }
    get stock() {
      return this[stock$];
    }
    set stock(value) {
      super.stock = value;
    }
    get description() {
      return this[description$];
    }
    set description(value) {
      super.description = value;
    }
    get store() {
      return this[store$];
    }
    set store(value) {
      super.store = value;
    }
    static ['_#new#tearOff'](opts) {
      let images = opts && 'images' in opts ? opts.images : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let price = opts && 'price' in opts ? opts.price : null;
      let stock = opts && 'stock' in opts ? opts.stock : null;
      let description = opts && 'description' in opts ? opts.description : null;
      let store = opts && 'store' in opts ? opts.store : null;
      return new product_mdl.ProductModel.new({images: images, name: name, price: price, stock: stock, description: description, store: store});
    }
    get priceFormat() {
      return extension_hlp['IntegerExt|get#currencyFormatRp'](this.price);
    }
  };
  (product_mdl.ProductModel.new = function(opts) {
    let images = opts && 'images' in opts ? opts.images : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let price = opts && 'price' in opts ? opts.price : null;
    let stock = opts && 'stock' in opts ? opts.stock : null;
    let description = opts && 'description' in opts ? opts.description : null;
    let store = opts && 'store' in opts ? opts.store : null;
    this[images$] = images;
    this[name$] = name;
    this[price$] = price;
    this[stock$] = stock;
    this[description$] = description;
    this[store$] = store;
    ;
  }).prototype = product_mdl.ProductModel.prototype;
  dart.addTypeTests(product_mdl.ProductModel);
  dart.addTypeCaches(product_mdl.ProductModel);
  dart.setGetterSignature(product_mdl.ProductModel, () => ({
    __proto__: dart.getGetters(product_mdl.ProductModel.__proto__),
    priceFormat: core.String
  }));
  dart.setLibraryUri(product_mdl.ProductModel, I[30]);
  dart.setFieldSignature(product_mdl.ProductModel, () => ({
    __proto__: dart.getFields(product_mdl.ProductModel.__proto__),
    images: dart.finalFieldType(core.List$(core.String)),
    name: dart.finalFieldType(core.String),
    price: dart.finalFieldType(core.int),
    stock: dart.finalFieldType(core.int),
    description: dart.finalFieldType(core.String),
    store: dart.finalFieldType(store_mdl.StoreModel)
  }));
  var name$0 = dart.privateName(store_mdl, "StoreModel.name");
  var type$1 = dart.privateName(store_mdl, "StoreModel.type");
  var imageUrl$ = dart.privateName(store_mdl, "StoreModel.imageUrl");
  store_mdl.StoreModel = class StoreModel extends core.Object {
    get name() {
      return this[name$0];
    }
    set name(value) {
      super.name = value;
    }
    get type() {
      return this[type$1];
    }
    set type(value) {
      super.type = value;
    }
    get imageUrl() {
      return this[imageUrl$];
    }
    set imageUrl(value) {
      super.imageUrl = value;
    }
    static ['_#new#tearOff'](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let imageUrl = opts && 'imageUrl' in opts ? opts.imageUrl : null;
      return new store_mdl.StoreModel.new({name: name, type: type, imageUrl: imageUrl});
    }
  };
  (store_mdl.StoreModel.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let imageUrl = opts && 'imageUrl' in opts ? opts.imageUrl : null;
    this[name$0] = name;
    this[type$1] = type;
    this[imageUrl$] = imageUrl;
    ;
  }).prototype = store_mdl.StoreModel.prototype;
  dart.addTypeTests(store_mdl.StoreModel);
  dart.addTypeCaches(store_mdl.StoreModel);
  dart.setLibraryUri(store_mdl.StoreModel, I[31]);
  dart.setFieldSignature(store_mdl.StoreModel, () => ({
    __proto__: dart.getFields(store_mdl.StoreModel.__proto__),
    name: dart.finalFieldType(core.String),
    type: dart.finalFieldType(store_mdl.StoreEnum),
    imageUrl: dart.finalFieldType(core.String)
  }));
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  store_mdl.StoreEnum = class StoreEnum extends core._Enum {
    [_enumToString]() {
      return "StoreEnum." + this[_name];
    }
    static ['_#new#tearOff'](index, name, value) {
      return new store_mdl.StoreEnum.new(index, name, value);
    }
    static getType(value) {
      return store_mdl.StoreEnum.values[$firstWhere](dart.fn(value => value.value === dart.str(value), T$.StoreEnumTobool()), {orElse: dart.fn(() => store_mdl.StoreEnum.star, T$.VoidToStoreEnum())});
    }
    static ['_#getType#tearOff'](value) {
      return store_mdl.StoreEnum.getType(value);
    }
  };
  (store_mdl.StoreEnum.new = function(index, name, value) {
    this.value = value;
    store_mdl.StoreEnum.__proto__.new.call(this, index, name);
    ;
  }).prototype = store_mdl.StoreEnum.prototype;
  dart.addTypeTests(store_mdl.StoreEnum);
  dart.addTypeCaches(store_mdl.StoreEnum);
  dart.setMethodSignature(store_mdl.StoreEnum, () => ({
    __proto__: dart.getMethods(store_mdl.StoreEnum.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setStaticMethodSignature(store_mdl.StoreEnum, () => ['getType']);
  dart.setLibraryUri(store_mdl.StoreEnum, I[31]);
  dart.setFieldSignature(store_mdl.StoreEnum, () => ({
    __proto__: dart.getFields(store_mdl.StoreEnum.__proto__),
    value: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(store_mdl.StoreEnum, () => ['values', 'star', 'starPlus', 'officialStore']);
  dart.defineLazy(store_mdl.StoreEnum, {
    /*store_mdl.StoreEnum.values*/get values() {
      return C[79] || CT.C79;
    },
    /*store_mdl.StoreEnum.star*/get star() {
      return C[80] || CT.C80;
    },
    /*store_mdl.StoreEnum.starPlus*/get starPlus() {
      return C[81] || CT.C81;
    },
    /*store_mdl.StoreEnum.officialStore*/get officialStore() {
      return C[82] || CT.C82;
    }
  }, false);
  dart.defineLazy(product_dt, {
    /*product_dt.dataProducts*/get dataProducts() {
      return T$.JSArrayOfProductModel$1().of([new product_mdl$.ProductModel.new({images: T$.JSArrayOfString().of(["lib/assets/images/products/lampu.png", "lib/assets/images/products/lampu.png", "lib/assets/images/products/lampu.png"]), name: "Lampu", price: 90000, stock: 20, description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. ", store: new store_mdl$.StoreModel.new({name: "CWB Online Store", type: store_mdl$.StoreEnum.officialStore, imageUrl: "https://avatars.githubusercontent.com/u/534678?v=4"})}), new product_mdl$.ProductModel.new({images: T$.JSArrayOfString().of(["lib/assets/images/products/earphone.png", "lib/assets/images/products/earphone.png", "lib/assets/images/products/earphone.png"]), name: "Earphone", price: 320000, stock: 20, description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. ", store: new store_mdl$.StoreModel.new({name: "CWB Online Store", type: store_mdl$.StoreEnum.officialStore, imageUrl: "https://avatars.githubusercontent.com/u/534678?v=4"})}), new product_mdl$.ProductModel.new({images: T$.JSArrayOfString().of(["lib/assets/images/products/keyboard.png", "lib/assets/images/products/keyboard.png", "lib/assets/images/products/keyboard.png"]), name: "Keyboard Mechanical", price: 320000, stock: 20, description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. ", store: new store_mdl$.StoreModel.new({name: "CWB Online Store", type: store_mdl$.StoreEnum.officialStore, imageUrl: "https://avatars.githubusercontent.com/u/534678?v=4"})}), new product_mdl$.ProductModel.new({images: T$.JSArrayOfString().of(["lib/assets/images/products/mac.png", "lib/assets/images/products/mac.png", "lib/assets/images/products/mac.png"]), name: "Headset", price: 320000, stock: 20, description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. ", store: new store_mdl$.StoreModel.new({name: "CWB Online Store", type: store_mdl$.StoreEnum.officialStore, imageUrl: "https://avatars.githubusercontent.com/u/534678?v=4"})})]);
    }
  }, false);
  var _products$ = dart.privateName(cart_prov$, "_products");
  cart_prov$.CartProvider = class CartProvider extends change_notifier.ChangeNotifier {
    get products() {
      return this[_products$];
    }
    add(item) {
      this[_products$][$add](item);
      this.notifyListeners();
    }
    remove(item) {
      this[_products$][$remove](item);
      this.notifyListeners();
    }
    removeAll() {
      this[_products$][$clear]();
      this.notifyListeners();
    }
    getCartTotal() {
      return this[_products$][$fold](core.double, 0, dart.fn((prevValue, element) => prevValue + element.price, T$.doubleAndProductModelTodouble$1()));
    }
    static ['_#new#tearOff']() {
      return new cart_prov$.CartProvider.new();
    }
  };
  (cart_prov$.CartProvider.new = function() {
    this[_products$] = T$.JSArrayOfProductModel$1().of([]);
    cart_prov$.CartProvider.__proto__.new.call(this);
    ;
  }).prototype = cart_prov$.CartProvider.prototype;
  dart.addTypeTests(cart_prov$.CartProvider);
  dart.addTypeCaches(cart_prov$.CartProvider);
  dart.setMethodSignature(cart_prov$.CartProvider, () => ({
    __proto__: dart.getMethods(cart_prov$.CartProvider.__proto__),
    add: dart.fnType(dart.void, [product_mdl$.ProductModel]),
    remove: dart.fnType(dart.void, [product_mdl$.ProductModel]),
    removeAll: dart.fnType(dart.void, []),
    getCartTotal: dart.fnType(core.double, [])
  }));
  dart.setGetterSignature(cart_prov$.CartProvider, () => ({
    __proto__: dart.getGetters(cart_prov$.CartProvider.__proto__),
    products: core.List$(product_mdl$.ProductModel)
  }));
  dart.setLibraryUri(cart_prov$.CartProvider, I[32]);
  dart.setFieldSignature(cart_prov$.CartProvider, () => ({
    __proto__: dart.getFields(cart_prov$.CartProvider.__proto__),
    [_products$]: dart.finalFieldType(core.List$(product_mdl$.ProductModel))
  }));
  button_wdg.MyButtons = class MyButtons extends core.Object {
    static showMyButtons(context, label, txColor, bgColor, $function, opts) {
      let outlined = opts && 'outlined' in opts ? opts.outlined : null;
      let gradiented = opts && 'gradiented' in opts ? opts.gradiented : null;
      let strokeColor = opts && 'strokeColor' in opts ? opts.strokeColor : null;
      let hasIcon = opts && 'hasIcon' in opts ? opts.hasIcon : null;
      let isLoading = opts && 'isLoading' in opts ? opts.isLoading : false;
      return new material_button.MaterialButton.new({onPressed: $function, hoverColor: colors$0.cTransparent, child: new container.Container.new({alignment: alignment.Alignment.center, padding: new edge_insets.EdgeInsets.symmetric({vertical: 10, horizontal: 20 * 0.5}), decoration: new box_decoration.BoxDecoration.new({color: outlined ? colors$0.cTransparent : bgColor, gradient: gradiented ? colors$0.cGradientPrim : null, borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(10)), border: outlined ? box_border.Border.all({color: dart.nullCheck(strokeColor), width: 2}) : null}), child: isLoading ? new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([new basic.SizedBox.new({width: 24, height: 24, child: new progress_indicator.CircularProgressIndicator.new({color: colors$0.cPrimer})}), new basic.SizedBox.new({width: 10}), new text$.Text.new(label, {style: widgets_hlp$.myStyle({color: txColor})})])}) : new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([hasIcon == null ? new basic.SizedBox.shrink() : new basic.Padding.new({padding: C[83] || CT.C83, child: hasIcon}), new text$.Text.new(label, {style: widgets_hlp$.myStyle({fSize: 18, color: txColor})})])})})});
    }
    static primary(context, label, $function) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$0.cWhite, colors$0.cPrimer, $function, {outlined: false, gradiented: false});
    }
    static secondary(context, label, $function) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$0.cSecond, colors$0.cSecond, $function, {outlined: false, gradiented: false});
    }
    static warning(context, label, $function) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$0.cBlack, colors$0.cBSWarning, $function, {outlined: false, gradiented: false});
    }
    static danger(context, label, $function) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$0.cWhite, colors$0.cRed, $function, {outlined: false, gradiented: false});
    }
    static disabled(context, label) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$0.cWhite, colors$0.cGrey, dart.fn(() => {
      }, T$.VoidToNull()), {outlined: false, gradiented: false});
    }
    static primaryOutlined(context, label, $function) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$0.cBlack, colors$0.cPrimer, $function, {outlined: true, gradiented: false, strokeColor: colors$0.cPrimer});
    }
    static secondaryOutlined(context, label, $function) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$0.cSecond, colors$0.cSecond, $function, {outlined: true, gradiented: false, strokeColor: colors$0.cPrimer});
    }
    static dangerOutlined(context, label, $function) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$0.cRed, colors$0.cRed, $function, {outlined: true, gradiented: false, strokeColor: colors$0.cPrimer});
    }
    static primaryGradiented(context, label, $function) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$0.cBlack, colors$0.cPrimer, $function, {outlined: false, gradiented: true});
    }
    static isLoading(context, label) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$0.cWhite, colors$0.cGrey, dart.fn(() => {
      }, T$.VoidToNull()), {outlined: false, gradiented: false, isLoading: true});
    }
    static primaryIconned(context, label, icon, $function) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$0.cBlack, colors$0.cPrimer, $function, {outlined: false, gradiented: false, hasIcon: icon});
    }
    static ['_#new#tearOff']() {
      return new button_wdg.MyButtons.new();
    }
  };
  (button_wdg.MyButtons.new = function() {
    ;
  }).prototype = button_wdg.MyButtons.prototype;
  dart.addTypeTests(button_wdg.MyButtons);
  dart.addTypeCaches(button_wdg.MyButtons);
  dart.setStaticMethodSignature(button_wdg.MyButtons, () => ['showMyButtons', 'primary', 'secondary', 'warning', 'danger', 'disabled', 'primaryOutlined', 'secondaryOutlined', 'dangerOutlined', 'primaryGradiented', 'isLoading', 'primaryIconned']);
  dart.setLibraryUri(button_wdg.MyButtons, I[33]);
  dialog_wdg.MyDialogs = class MyDialogs extends core.Object {
    static showDialogBox(context, opts) {
      let title = opts && 'title' in opts ? opts.title : "Alert";
      let subtitle = opts && 'subtitle' in opts ? opts.subtitle : "Something occured in your Apps";
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      return dialog.showDialog(dart.dynamic, {context: context, builder: dart.fn(context => new dialog.Dialog.new({backgroundColor: colors$0.cTransparent, child: new container.Container.new({padding: new edge_insets.EdgeInsets.symmetric({vertical: 16}), margin: new edge_insets.EdgeInsets.all(14), decoration: new box_decoration.BoxDecoration.new({color: colors$0.cBlack.withOpacity(0.6), borderRadius: new border_radius.BorderRadius.circular(12)}), child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([new icon.Icon.new(icons.Icons.add_alert, {size: 50, color: iconColor}), new basic.SizedBox.new({height: 24}), new text$.Text.new(title, {style: widgets_hlp$.myStyle({fSize: 16, color: colors$0.cWhite})}), new basic.SizedBox.new({height: 12}), new text$.Text.new(subtitle, {style: widgets_hlp$.myStyle({color: colors$0.cWhite})})])})})}), T$.BuildContextToDialog())});
    }
    static showAlertDialogBox(context, opts) {
      let title = opts && 'title' in opts ? opts.title : "Alert";
      let subtitle = opts && 'subtitle' in opts ? opts.subtitle : "Something occured in your Apps";
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      return dialog.showDialog(dart.dynamic, {context: context, builder: dart.fn(context => new dialog.AlertDialog.new({title: new text$.Text.new(title, {style: widgets_hlp$.myStyle({fSize: 16})}), content: new text$.Text.new(subtitle), actions: T$.JSArrayOfWidget().of([new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T$.JSArrayOfWidget().of([new basic.SizedBox.new({width: extension_hlp$['BuildContextExtension|get#deviceWidth'](context) * 0.3, child: button_wdg.MyButtons.primary(context, "OK", dart.fn(() => {
                  }, T$.VoidToNull()))}), new basic.SizedBox.new({width: 5}), new basic.SizedBox.new({width: extension_hlp$['BuildContextExtension|get#deviceWidth'](context) * 0.3, child: button_wdg.MyButtons.primaryOutlined(context, "Cancel", dart.fn(() => {
                  }, T$.VoidToNull()))})])})])}), T$.BuildContextToAlertDialog())});
    }
    static loading(context, opts) {
      let title = opts && 'title' in opts ? opts.title : "Loading...";
      return dialog.showDialog(dart.dynamic, {context: context, builder: dart.fn(context => new dialog.AlertDialog.new({content: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([new progress_indicator.CircularProgressIndicator.new(), new basic.SizedBox.new({height: 10}), new text$.Text.new(title)])})}), T$.BuildContextToAlertDialog())});
    }
    static alert(context, title, subtitle) {
      return dialog_wdg.MyDialogs.showDialogBox(context, {title: title, subtitle: subtitle, iconColor: colors.Colors.orange});
    }
    static alert2(context, title, subtitle) {
      return dialog_wdg.MyDialogs.showAlertDialogBox(context, {title: title, subtitle: subtitle});
    }
    static ['_#new#tearOff']() {
      return new dialog_wdg.MyDialogs.new();
    }
  };
  (dialog_wdg.MyDialogs.new = function() {
    ;
  }).prototype = dialog_wdg.MyDialogs.prototype;
  dart.addTypeTests(dialog_wdg.MyDialogs);
  dart.addTypeCaches(dialog_wdg.MyDialogs);
  dart.setStaticMethodSignature(dialog_wdg.MyDialogs, () => ['showDialogBox', 'showAlertDialogBox', 'loading', 'alert', 'alert2']);
  dart.setLibraryUri(dialog_wdg.MyDialogs, I[34]);
  snackbar_wdg.MySnackbar = class MySnackbar extends core.Object {
    static showSnackbar(context, title, subtitle, txColor, bgColor, iconColor) {
      scaffold.ScaffoldMessenger.of(context).showSnackBar(new snack_bar.SnackBar.new({content: new basic.Row.new({children: T$.JSArrayOfWidget().of([new icon.Icon.new(icons.Icons.notification_important, {color: iconColor}), new basic.SizedBox.new({width: 5}), new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.start, crossAxisAlignment: flex.CrossAxisAlignment.start, children: T$.JSArrayOfWidget().of([new text$.Text.new(title, {style: widgets_hlp.getFont(14, {color: txColor})}), new text$.Text.new(subtitle, {style: widgets_hlp.getFont(12, {color: txColor})})])})])}), backgroundColor: bgColor, duration: new core.Duration.new({seconds: 2})}));
    }
    static primary(context, title, subtitle) {
      snackbar_wdg.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.white, new ui.Color.new(4278221823), colors.Colors.white);
    }
    static secondary(context, title, subtitle) {
      snackbar_wdg.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.white, new ui.Color.new(4285298045), colors.Colors.white);
    }
    static success(context, title, subtitle) {
      snackbar_wdg.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.white, new ui.Color.new(4280854341), colors.Colors.white);
    }
    static danger(context, title, subtitle) {
      snackbar_wdg.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.white, colors.Colors.red, colors.Colors.white);
    }
    static warning(context, title, subtitle) {
      snackbar_wdg.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.black, new ui.Color.new(4294951175), colors.Colors.black);
    }
    static info(context, title, subtitle) {
      snackbar_wdg.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.white, new ui.Color.new(4279739064), colors.Colors.white);
    }
    static light(context, title, subtitle) {
      snackbar_wdg.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.black, new ui.Color.new(4294507002), colors.Colors.black);
    }
    static dark(context, title, subtitle) {
      snackbar_wdg.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.white, new ui.Color.new(4281612864), colors.Colors.white);
    }
    static ['_#new#tearOff']() {
      return new snackbar_wdg.MySnackbar.new();
    }
  };
  (snackbar_wdg.MySnackbar.new = function() {
    ;
  }).prototype = snackbar_wdg.MySnackbar.prototype;
  dart.addTypeTests(snackbar_wdg.MySnackbar);
  dart.addTypeCaches(snackbar_wdg.MySnackbar);
  dart.setStaticMethodSignature(snackbar_wdg.MySnackbar, () => ['showSnackbar', 'primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark']);
  dart.setLibraryUri(snackbar_wdg.MySnackbar, I[35]);
  var InputBorder_borderSide = dart.privateName(input_border, "InputBorder.borderSide");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var OutlineInputBorder_borderRadius = dart.privateName(input_border, "OutlineInputBorder.borderRadius");
  var OutlineInputBorder_gapPadding = dart.privateName(input_border, "OutlineInputBorder.gapPadding");
  textfield_wdg.MyTextField = class MyTextField extends core.Object {
    static inputBox(label, opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let obscureText = opts && 'obscureText' in opts ? opts.obscureText : false;
      let readOnly = opts && 'readOnly' in opts ? opts.readOnly : false;
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return new container.Container.new({padding: C[78] || CT.C78, height: 60, color: colors$0.cPrimer.withOpacity(0.2), child: new text_form_field.TextFormField.new({readOnly: readOnly, controller: controller, onChanged: onChanged, obscureText: obscureText, decoration: new input_decorator.InputDecoration.new({contentPadding: C[84] || CT.C84, labelText: label, floatingLabelBehavior: input_decorator.FloatingLabelBehavior.auto, border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(6), borderSide: borders.BorderSide.none}), enabledBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(6), borderSide: borders.BorderSide.none})})})});
    }
    static round2(label, opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let obscureText = opts && 'obscureText' in opts ? opts.obscureText : false;
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return new container.Container.new({padding: C[78] || CT.C78, height: 60, decoration: my_box_decoration.appBoxDecorationTextField({borderColor: colors$0.cPrimer.withOpacity(0.4)}), child: new text_form_field.TextFormField.new({controller: controller, onChanged: onChanged, obscureText: obscureText, decoration: new input_decorator.InputDecoration.new({contentPadding: new edge_insets.EdgeInsets.only({top: 7, left: 10}), labelText: label, floatingLabelBehavior: input_decorator.FloatingLabelBehavior.auto, border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(6), borderSide: borders.BorderSide.none}), enabledBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(6), borderSide: borders.BorderSide.none})})})});
    }
    static round(label, opts) {
      let width = opts && 'width' in opts ? opts.width : 280;
      let height = opts && 'height' in opts ? opts.height : 50;
      let hintText = opts && 'hintText' in opts ? opts.hintText : "Type in your info";
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let obscureText = opts && 'obscureText' in opts ? opts.obscureText : false;
      let readOnly = opts && 'readOnly' in opts ? opts.readOnly : false;
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return new basic.SizedBox.new({width: width, height: height, child: new text_form_field.TextFormField.new({controller: controller, onChanged: dart.fn(value => dart.nullCheck(onChanged)(value), T$.StringTovoid()), keyboardType: text_input.TextInputType.multiline, readOnly: readOnly, decoration: new input_decorator.InputDecoration.new({contentPadding: new edge_insets.EdgeInsets.only({top: 7, left: 10}), hintText: hintText, border: C[85] || CT.C85, enabledBorder: C[89] || CT.C89, focusedBorder: C[89] || CT.C89, disabledBorder: C[89] || CT.C89}), maxLines: 1, autocorrect: false, obscureText: obscureText})});
    }
    static roundDisable(label, opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      return textfield_wdg.MyTextField.round(label, {controller: controller, readOnly: true});
    }
    static roundIcon(label, iconName, opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return new container.Container.new({padding: new edge_insets.EdgeInsets.only({left: 25, right: 25}), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T$.JSArrayOfWidget().of([new my_text.Text14Normal.new({text: label}), new basic.SizedBox.new({height: 5}), new container.Container.new({width: 325, height: 50, decoration: my_box_decoration.appBoxDecorationTextField(), child: new basic.Row.new({children: T$.JSArrayOfWidget().of([new container.Container.new({margin: new edge_insets.EdgeInsets.only({left: 17}), child: new image.Image.asset(iconName)}), textfield_wdg.MyTextField.round(label, {controller: controller, onChanged: onChanged})])})})])})});
    }
    static square(label, opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let obscureText = opts && 'obscureText' in opts ? opts.obscureText : false;
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return textfield_wdg.MyTextField.inputBox(label, {controller: controller, obscureText: obscureText, onChanged: onChanged});
    }
    static ['_#new#tearOff']() {
      return new textfield_wdg.MyTextField.new();
    }
  };
  (textfield_wdg.MyTextField.new = function() {
    ;
  }).prototype = textfield_wdg.MyTextField.prototype;
  dart.addTypeTests(textfield_wdg.MyTextField);
  dart.addTypeCaches(textfield_wdg.MyTextField);
  dart.setStaticMethodSignature(textfield_wdg.MyTextField, () => ['inputBox', 'round2', 'round', 'roundDisable', 'roundIcon', 'square']);
  dart.setLibraryUri(textfield_wdg.MyTextField, I[36]);
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  form_input_wdg.MyForms = class MyForms extends core.Object {
    static showFormInput(context, opts) {
      let t14;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let showLabel = opts && 'showLabel' in opts ? opts.showLabel : null;
      let obscureText = opts && 'obscureText' in opts ? opts.obscureText : null;
      let keyboardType = opts && 'keyboardType' in opts ? opts.keyboardType : null;
      let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
      let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: (() => {
          let t13 = T$.JSArrayOfWidget().of([]);
          if (showLabel) t13[$addAll](T$.JSArrayOfWidget().of([new text$.Text.new(label, {style: C[91] || CT.C91}), C[92] || CT.C92]));
          t13.push(new text_form_field.TextFormField.new({controller: controller, onChanged: onChanged, obscureText: (t14 = obscureText, t14 == null ? false : t14), keyboardType: keyboardType, decoration: new input_decorator.InputDecoration.new({prefixIcon: prefixIcon, suffixIcon: suffixIcon, hintText: label})}));
          return t13;
        })()});
    }
    static text(context, controller, label, opts) {
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return form_input_wdg.MyForms.showFormInput(context, {controller: controller, label: label, showLabel: true, obscureText: false, keyboardType: text_input.TextInputType.text, suffixIcon: new basic.SizedBox.shrink(), onChanged: onChanged});
    }
    static textIconned(context, controller, label, icon, opts) {
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return form_input_wdg.MyForms.showFormInput(context, {controller: controller, label: label, showLabel: true, obscureText: false, keyboardType: text_input.TextInputType.text, prefixIcon: icon, onChanged: onChanged});
    }
    static password(context, controller, label, opts) {
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return form_input_wdg.MyForms.showFormInput(context, {controller: controller, label: label, showLabel: true, obscureText: true, keyboardType: text_input.TextInputType.text, suffixIcon: new basic.SizedBox.shrink(), onChanged: onChanged});
    }
    static ['_#new#tearOff']() {
      return new form_input_wdg.MyForms.new();
    }
  };
  (form_input_wdg.MyForms.new = function() {
    ;
  }).prototype = form_input_wdg.MyForms.prototype;
  dart.addTypeTests(form_input_wdg.MyForms);
  dart.addTypeCaches(form_input_wdg.MyForms);
  dart.setStaticMethodSignature(form_input_wdg.MyForms, () => ['showFormInput', 'text', 'textIconned', 'password']);
  dart.setLibraryUri(form_input_wdg.MyForms, I[37]);
  var width$ = dart.privateName(my_box_decoration, "AppBoxDecorationImage.width");
  var height$ = dart.privateName(my_box_decoration, "AppBoxDecorationImage.height");
  var imagePath$ = dart.privateName(my_box_decoration, "AppBoxDecorationImage.imagePath");
  my_box_decoration.AppBoxDecorationImage = class AppBoxDecorationImage extends framework.StatelessWidget {
    get width() {
      return this[width$];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    get imagePath() {
      return this[imagePath$];
    }
    set imagePath(value) {
      super.imagePath = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let width = opts && 'width' in opts ? opts.width : 40;
      let height = opts && 'height' in opts ? opts.height : 40;
      let imagePath = opts && 'imagePath' in opts ? opts.imagePath : "lib/assets/icons/menu.svg";
      return new my_box_decoration.AppBoxDecorationImage.new({key: key, width: width, height: height, imagePath: imagePath});
    }
    build(context) {
      return new container.Container.new({width: this.width, height: this.width, decoration: new box_decoration.BoxDecoration.new({image: new decoration_image.DecorationImage.new({fit: box_fit.BoxFit.fitHeight, image: new image_resolution.AssetImage.new(this.imagePath)}), borderRadius: new border_radius.BorderRadius.circular(20)})});
    }
  };
  (my_box_decoration.AppBoxDecorationImage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let width = opts && 'width' in opts ? opts.width : 40;
    let height = opts && 'height' in opts ? opts.height : 40;
    let imagePath = opts && 'imagePath' in opts ? opts.imagePath : "lib/assets/icons/menu.svg";
    this[width$] = width;
    this[height$] = height;
    this[imagePath$] = imagePath;
    my_box_decoration.AppBoxDecorationImage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = my_box_decoration.AppBoxDecorationImage.prototype;
  dart.addTypeTests(my_box_decoration.AppBoxDecorationImage);
  dart.addTypeCaches(my_box_decoration.AppBoxDecorationImage);
  dart.setMethodSignature(my_box_decoration.AppBoxDecorationImage, () => ({
    __proto__: dart.getMethods(my_box_decoration.AppBoxDecorationImage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(my_box_decoration.AppBoxDecorationImage, I[38]);
  dart.setFieldSignature(my_box_decoration.AppBoxDecorationImage, () => ({
    __proto__: dart.getFields(my_box_decoration.AppBoxDecorationImage.__proto__),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    imagePath: dart.finalFieldType(core.String)
  }));
  my_box_decoration.appBoxShadow = function appBoxShadow(opts) {
    let color = opts && 'color' in opts ? opts.color : C[43] || CT.C43;
    let radius = opts && 'radius' in opts ? opts.radius : 15;
    let sR = opts && 'sR' in opts ? opts.sR : 1;
    let bR = opts && 'bR' in opts ? opts.bR : 2;
    let boxBorder = opts && 'boxBorder' in opts ? opts.boxBorder : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    return new box_decoration.BoxDecoration.new({color: color, borderRadius: new border_radius.BorderRadius.circular(radius), border: boxBorder, boxShadow: T$.JSArrayOfBoxShadow().of([new box_shadow.BoxShadow.new({color: colors.Colors.grey.withOpacity(0.1), spreadRadius: sR, blurRadius: bR, offset: C[93] || CT.C93})])});
  };
  my_box_decoration.appBoxShadowWithRadius = function appBoxShadowWithRadius(opts) {
    let color = opts && 'color' in opts ? opts.color : C[43] || CT.C43;
    let radius = opts && 'radius' in opts ? opts.radius : 15;
    let sR = opts && 'sR' in opts ? opts.sR : 1;
    let bR = opts && 'bR' in opts ? opts.bR : 2;
    let border = opts && 'border' in opts ? opts.border : null;
    return new box_decoration.BoxDecoration.new({color: color, borderRadius: new border_radius.BorderRadius.only({topLeft: new ui.Radius.circular(20), topRight: new ui.Radius.circular(20)}), border: border, boxShadow: T$.JSArrayOfBoxShadow().of([new box_shadow.BoxShadow.new({color: colors.Colors.grey.withOpacity(0.1), spreadRadius: sR, blurRadius: bR, offset: C[93] || CT.C93})])});
  };
  my_box_decoration.appBoxDecorationTextField = function appBoxDecorationTextField(opts) {
    let color = opts && 'color' in opts ? opts.color : C[36] || CT.C36;
    let radius = opts && 'radius' in opts ? opts.radius : 15;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : C[39] || CT.C39;
    return new box_decoration.BoxDecoration.new({color: color, borderRadius: new border_radius.BorderRadius.circular(radius), border: box_border.Border.all({color: borderColor})});
  };
  var text$0 = dart.privateName(my_text, "Text16Normal.text");
  var color$ = dart.privateName(my_text, "Text16Normal.color");
  var fontWeight$ = dart.privateName(my_text, "Text16Normal.fontWeight");
  my_text.Text16Normal = class Text16Normal extends framework.StatelessWidget {
    get text() {
      return this[text$0];
    }
    set text(value) {
      super.text = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get fontWeight() {
      return this[fontWeight$];
    }
    set fontWeight(value) {
      super.fontWeight = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let text = opts && 'text' in opts ? opts.text : "";
      let color = opts && 'color' in opts ? opts.color : C[41] || CT.C41;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : C[94] || CT.C94;
      return new my_text.Text16Normal.new({key: key, text: text, color: color, fontWeight: fontWeight});
    }
    build(context) {
      return new text$.Text.new(this.text, {textAlign: ui.TextAlign.center, style: new text_style.TextStyle.new({color: this.color, fontSize: 16, fontWeight: this.fontWeight})});
    }
  };
  (my_text.Text16Normal.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : "";
    let color = opts && 'color' in opts ? opts.color : C[41] || CT.C41;
    let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : C[94] || CT.C94;
    this[text$0] = text;
    this[color$] = color;
    this[fontWeight$] = fontWeight;
    my_text.Text16Normal.__proto__.new.call(this, {key: key});
    ;
  }).prototype = my_text.Text16Normal.prototype;
  dart.addTypeTests(my_text.Text16Normal);
  dart.addTypeCaches(my_text.Text16Normal);
  dart.setMethodSignature(my_text.Text16Normal, () => ({
    __proto__: dart.getMethods(my_text.Text16Normal.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(my_text.Text16Normal, I[39]);
  dart.setFieldSignature(my_text.Text16Normal, () => ({
    __proto__: dart.getFields(my_text.Text16Normal.__proto__),
    text: dart.finalFieldType(core.String),
    color: dart.finalFieldType(ui.Color),
    fontWeight: dart.finalFieldType(ui.FontWeight)
  }));
  var text$1 = dart.privateName(my_text, "Text14Normal.text");
  var color$0 = dart.privateName(my_text, "Text14Normal.color");
  my_text.Text14Normal = class Text14Normal extends framework.StatelessWidget {
    get text() {
      return this[text$1];
    }
    set text(value) {
      super.text = value;
    }
    get color() {
      return this[color$0];
    }
    set color(value) {
      super.color = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let text = opts && 'text' in opts ? opts.text : "";
      let color = opts && 'color' in opts ? opts.color : C[37] || CT.C37;
      return new my_text.Text14Normal.new({key: key, text: text, color: color});
    }
    build(context) {
      return new text$.Text.new(this.text, {textAlign: ui.TextAlign.start, style: new text_style.TextStyle.new({color: this.color, fontSize: 14, fontWeight: ui.FontWeight.normal})});
    }
  };
  (my_text.Text14Normal.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : "";
    let color = opts && 'color' in opts ? opts.color : C[37] || CT.C37;
    this[text$1] = text;
    this[color$0] = color;
    my_text.Text14Normal.__proto__.new.call(this, {key: key});
    ;
  }).prototype = my_text.Text14Normal.prototype;
  dart.addTypeTests(my_text.Text14Normal);
  dart.addTypeCaches(my_text.Text14Normal);
  dart.setMethodSignature(my_text.Text14Normal, () => ({
    __proto__: dart.getMethods(my_text.Text14Normal.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(my_text.Text14Normal, I[39]);
  dart.setFieldSignature(my_text.Text14Normal, () => ({
    __proto__: dart.getFields(my_text.Text14Normal.__proto__),
    text: dart.finalFieldType(core.String),
    color: dart.finalFieldType(ui.Color)
  }));
  var text$2 = dart.privateName(my_text, "Text11Normal.text");
  var color$1 = dart.privateName(my_text, "Text11Normal.color");
  my_text.Text11Normal = class Text11Normal extends framework.StatelessWidget {
    get text() {
      return this[text$2];
    }
    set text(value) {
      super.text = value;
    }
    get color() {
      return this[color$1];
    }
    set color(value) {
      super.color = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let text = opts && 'text' in opts ? opts.text : "";
      let color = opts && 'color' in opts ? opts.color : C[37] || CT.C37;
      return new my_text.Text11Normal.new({key: key, text: text, color: color});
    }
    build(context) {
      return new text$.Text.new(this.text, {textAlign: ui.TextAlign.start, style: new text_style.TextStyle.new({color: this.color, fontSize: 11, fontWeight: ui.FontWeight.normal})});
    }
  };
  (my_text.Text11Normal.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : "";
    let color = opts && 'color' in opts ? opts.color : C[37] || CT.C37;
    this[text$2] = text;
    this[color$1] = color;
    my_text.Text11Normal.__proto__.new.call(this, {key: key});
    ;
  }).prototype = my_text.Text11Normal.prototype;
  dart.addTypeTests(my_text.Text11Normal);
  dart.addTypeCaches(my_text.Text11Normal);
  dart.setMethodSignature(my_text.Text11Normal, () => ({
    __proto__: dart.getMethods(my_text.Text11Normal.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(my_text.Text11Normal, I[39]);
  dart.setFieldSignature(my_text.Text11Normal, () => ({
    __proto__: dart.getFields(my_text.Text11Normal.__proto__),
    text: dart.finalFieldType(core.String),
    color: dart.finalFieldType(ui.Color)
  }));
  var text$3 = dart.privateName(my_text, "Text10Normal.text");
  var color$2 = dart.privateName(my_text, "Text10Normal.color");
  my_text.Text10Normal = class Text10Normal extends framework.StatelessWidget {
    get text() {
      return this[text$3];
    }
    set text(value) {
      super.text = value;
    }
    get color() {
      return this[color$2];
    }
    set color(value) {
      super.color = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let text = opts && 'text' in opts ? opts.text : "";
      let color = opts && 'color' in opts ? opts.color : C[37] || CT.C37;
      return new my_text.Text10Normal.new({key: key, text: text, color: color});
    }
    build(context) {
      return new text$.Text.new(this.text, {textAlign: ui.TextAlign.start, style: new text_style.TextStyle.new({color: this.color, fontSize: 10, fontWeight: ui.FontWeight.normal})});
    }
  };
  (my_text.Text10Normal.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : "";
    let color = opts && 'color' in opts ? opts.color : C[37] || CT.C37;
    this[text$3] = text;
    this[color$2] = color;
    my_text.Text10Normal.__proto__.new.call(this, {key: key});
    ;
  }).prototype = my_text.Text10Normal.prototype;
  dart.addTypeTests(my_text.Text10Normal);
  dart.addTypeCaches(my_text.Text10Normal);
  dart.setMethodSignature(my_text.Text10Normal, () => ({
    __proto__: dart.getMethods(my_text.Text10Normal.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(my_text.Text10Normal, I[39]);
  dart.setFieldSignature(my_text.Text10Normal, () => ({
    __proto__: dart.getFields(my_text.Text10Normal.__proto__),
    text: dart.finalFieldType(core.String),
    color: dart.finalFieldType(ui.Color)
  }));
  my_text.text24Normal = function text24Normal(opts) {
    let text = opts && 'text' in opts ? opts.text : "";
    let color = opts && 'color' in opts ? opts.color : C[37] || CT.C37;
    let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : C[94] || CT.C94;
    return new text$.Text.new(text, {textAlign: ui.TextAlign.center, style: new text_style.TextStyle.new({color: color, fontSize: 24, fontWeight: fontWeight})});
  };
  my_text.textUnderline = function textUnderline(opts) {
    let text = opts && 'text' in opts ? opts.text : "Your text";
    return new gesture_detector.GestureDetector.new({onTap: dart.fn(() => {
      }, T$.VoidTovoid()), child: new text$.Text.new(text, {style: new text_style.TextStyle.new({fontWeight: ui.FontWeight.normal, fontSize: 12, color: colors$0.cTx1, decoration: ui.TextDecoration.underline, decorationColor: colors$0.cTx1})})});
  };
  plugin_platform_interface.MockPlatformInterfaceMixin = class MockPlatformInterfaceMixin extends core.Object {};
  (plugin_platform_interface.MockPlatformInterfaceMixin.new = function() {
    ;
  }).prototype = plugin_platform_interface.MockPlatformInterfaceMixin.prototype;
  dart.addTypeTests(plugin_platform_interface.MockPlatformInterfaceMixin);
  dart.addTypeCaches(plugin_platform_interface.MockPlatformInterfaceMixin);
  plugin_platform_interface.MockPlatformInterfaceMixin[dart.implements] = () => [plugin_platform_interface.PlatformInterface];
  dart.setLibraryUri(plugin_platform_interface.MockPlatformInterfaceMixin, I[4]);
  method_channel_shared_preferences.MethodChannelSharedPreferencesStore = class MethodChannelSharedPreferencesStore extends shared_preferences_platform_interface.SharedPreferencesStorePlatform {
    remove(key) {
      return async.async(core.bool, function* remove() {
        return dart.nullCheck(yield method_channel_shared_preferences._kChannel.invokeMethod(core.bool, "remove", new (T$.IdentityMapOfString$dynamic()).from(["key", key])));
      });
    }
    setValue(valueType, key, value) {
      return async.async(core.bool, function* setValue() {
        return dart.nullCheck(yield method_channel_shared_preferences._kChannel.invokeMethod(core.bool, "set" + valueType, new (T$.IdentityMapOfString$dynamic()).from(["key", key, "value", value])));
      });
    }
    clear() {
      return async.async(core.bool, function* clear() {
        return dart.nullCheck(yield method_channel_shared_preferences._kChannel.invokeMethod(core.bool, "clear"));
      });
    }
    clearWithPrefix(prefix) {
      return async.async(core.bool, (function* clearWithPrefix() {
        return this.clearWithParameters(new types.ClearParameters.new({filter: new types.PreferencesFilter.new({prefix: prefix})}));
      }).bind(this));
    }
    clearWithParameters(parameters) {
      return async.async(core.bool, function* clearWithParameters() {
        let t14;
        let filter = parameters.filter;
        return dart.nullCheck(yield method_channel_shared_preferences._kChannel.invokeMethod(core.bool, "clearWithParameters", new (T$.IdentityMapOfString$dynamic()).from(["prefix", filter.prefix, "allowList", (t14 = filter.allowList, t14 == null ? null : t14[$toList]())])));
      });
    }
    getAll() {
      return async.async(T$.MapOfString$Object(), function* getAll() {
        let t14;
        t14 = (yield method_channel_shared_preferences._kChannel.invokeMapMethod(core.String, core.Object, "getAll"));
        return t14 == null ? new (T$.IdentityMapOfString$Object()).new() : t14;
      });
    }
    getAllWithPrefix(prefix, opts) {
      let allowList = opts && 'allowList' in opts ? opts.allowList : null;
      return async.async(T$.MapOfString$Object(), (function* getAllWithPrefix() {
        return this.getAllWithParameters(new types.GetAllParameters.new({filter: new types.PreferencesFilter.new({prefix: prefix})}));
      }).bind(this));
    }
    getAllWithParameters(parameters) {
      return async.async(T$.MapOfString$Object(), function* getAllWithParameters() {
        let t14, t14$;
        let filter = parameters.filter;
        let allowListAsList = (t14 = filter.allowList, t14 == null ? null : t14[$toList]());
        t14$ = (yield method_channel_shared_preferences._kChannel.invokeMapMethod(core.String, core.Object, "getAllWithParameters", new (T$.IdentityMapOfString$dynamic()).from(["prefix", filter.prefix, "allowList", allowListAsList])));
        return t14$ == null ? new (T$.IdentityMapOfString$Object()).new() : t14$;
      });
    }
    static ['_#new#tearOff']() {
      return new method_channel_shared_preferences.MethodChannelSharedPreferencesStore.new();
    }
  };
  (method_channel_shared_preferences.MethodChannelSharedPreferencesStore.new = function() {
    method_channel_shared_preferences.MethodChannelSharedPreferencesStore.__proto__.new.call(this);
    ;
  }).prototype = method_channel_shared_preferences.MethodChannelSharedPreferencesStore.prototype;
  dart.addTypeTests(method_channel_shared_preferences.MethodChannelSharedPreferencesStore);
  dart.addTypeCaches(method_channel_shared_preferences.MethodChannelSharedPreferencesStore);
  dart.setMethodSignature(method_channel_shared_preferences.MethodChannelSharedPreferencesStore, () => ({
    __proto__: dart.getMethods(method_channel_shared_preferences.MethodChannelSharedPreferencesStore.__proto__),
    remove: dart.fnType(async.Future$(core.bool), [core.String]),
    setValue: dart.fnType(async.Future$(core.bool), [core.String, core.String, core.Object]),
    clear: dart.fnType(async.Future$(core.bool), []),
    getAll: dart.fnType(async.Future$(core.Map$(core.String, core.Object)), []),
    getAllWithPrefix: dart.fnType(async.Future$(core.Map$(core.String, core.Object)), [core.String], {allowList: dart.nullable(core.Set$(core.String))}, {})
  }));
  dart.setLibraryUri(method_channel_shared_preferences.MethodChannelSharedPreferencesStore, I[40]);
  var MethodChannel__binaryMessenger = dart.privateName(platform_channel, "MethodChannel._binaryMessenger");
  var StandardMethodCodec_messageCodec = dart.privateName(message_codecs, "StandardMethodCodec.messageCodec");
  var MethodChannel_codec = dart.privateName(platform_channel, "MethodChannel.codec");
  var MethodChannel_name = dart.privateName(platform_channel, "MethodChannel.name");
  dart.defineLazy(method_channel_shared_preferences, {
    /*method_channel_shared_preferences._kChannel*/get _kChannel() {
      return C[95] || CT.C95;
    }
  }, false);
  var _processResponse = dart.privateName(base_client_http_hlp, "_processResponse");
  base_client_http_hlp.BaseClient = class BaseClient extends core.Object {
    get(baseUrl, api) {
      return async.async(dart.dynamic, (function* get() {
        let uri = core.Uri.parse(baseUrl + api);
        try {
          let response = (yield http.get(uri).timeout(new core.Duration.new({seconds: 30})));
          return this[_processResponse](response);
        } catch (e) {
          let ex = dart.getThrown(e);
          if (io.SocketException.is(ex)) {
            dart.throw(new exception_hlp.FetchDataException.new("No Internet connection", uri.toString()));
          } else if (async.TimeoutException.is(ex)) {
            dart.throw(new exception_hlp.ApiNotRespondingException.new("API not responded in time", uri.toString()));
          } else if (_http.HttpException.is(ex)) {
            dart.throw(new base_client_http_hlp.Failure.new("Couldn't find the object"));
          } else if (core.FormatException.is(ex)) {
            dart.throw(new base_client_http_hlp.Failure.new("Bad response format"));
          } else
            throw e;
        }
      }).bind(this));
    }
    post(baseUrl, api, payloadObj) {
      return async.async(dart.dynamic, (function* post() {
        let uri = core.Uri.parse(baseUrl + api);
        let payload = convert.json.encode(payloadObj);
        try {
          let response = (yield http.post(uri, {body: payload, headers: new (T$.IdentityMapOfString$String()).from(["Content-Type", "application/json; charset=UTF-8"])}).timeout(new core.Duration.new({seconds: 30})));
          return this[_processResponse](response);
        } catch (e) {
          let ex = dart.getThrown(e);
          if (io.SocketException.is(ex)) {
            dart.throw(new exception_hlp.FetchDataException.new("No Internet connection", uri.toString()));
          } else if (async.TimeoutException.is(ex)) {
            dart.throw(new exception_hlp.ApiNotRespondingException.new("API not responded in time", uri.toString()));
          } else if (_http.HttpException.is(ex)) {
            dart.throw(new base_client_http_hlp.Failure.new("Couldn't find the object"));
          } else if (core.FormatException.is(ex)) {
            dart.throw(new base_client_http_hlp.Failure.new("Bad response format"));
          } else
            throw e;
        }
      }).bind(this));
    }
    [_processResponse](response) {
      switch (response.statusCode) {
        case 200:
          {
            let responseJson = convert.utf8.decode(response.bodyBytes);
            return responseJson;
          }
        case 201:
          {
            let responseJson = convert.utf8.decode(response.bodyBytes);
            return responseJson;
          }
        case 400:
          {
            dart.throw(new exception_hlp.BadRequestException.new(convert.utf8.decode(response.bodyBytes), dart.nullCheck(response.request).url.toString()));
          }
        case 401:
        case 403:
          {
            dart.throw(new exception_hlp.UnAuthorizedException.new(convert.utf8.decode(response.bodyBytes), dart.nullCheck(response.request).url.toString()));
          }
        case 422:
          {
            dart.throw(new exception_hlp.BadRequestException.new(convert.utf8.decode(response.bodyBytes), dart.nullCheck(response.request).url.toString()));
          }
        case 500:
        default:
          {
            dart.throw(new exception_hlp.FetchDataException.new("Error occured with code : " + dart.str(response.statusCode), dart.nullCheck(response.request).url.toString()));
          }
      }
    }
    static ['_#new#tearOff']() {
      return new base_client_http_hlp.BaseClient.new();
    }
  };
  (base_client_http_hlp.BaseClient.new = function() {
    ;
  }).prototype = base_client_http_hlp.BaseClient.prototype;
  dart.addTypeTests(base_client_http_hlp.BaseClient);
  dart.addTypeCaches(base_client_http_hlp.BaseClient);
  dart.setMethodSignature(base_client_http_hlp.BaseClient, () => ({
    __proto__: dart.getMethods(base_client_http_hlp.BaseClient.__proto__),
    get: dart.fnType(async.Future, [core.String, core.String]),
    post: dart.fnType(async.Future, [core.String, core.String, dart.dynamic]),
    [_processResponse]: dart.fnType(dart.dynamic, [response$.Response])
  }));
  dart.setLibraryUri(base_client_http_hlp.BaseClient, I[41]);
  var msg$ = dart.privateName(base_client_http_hlp, "Failure.msg");
  base_client_http_hlp.Failure = class Failure extends core.Object {
    get msg() {
      return this[msg$];
    }
    set msg(value) {
      super.msg = value;
    }
    static ['_#new#tearOff'](msg) {
      return new base_client_http_hlp.Failure.new(msg);
    }
    toString() {
      return this.msg;
    }
  };
  (base_client_http_hlp.Failure.new = function(msg) {
    this[msg$] = msg;
    ;
  }).prototype = base_client_http_hlp.Failure.prototype;
  dart.addTypeTests(base_client_http_hlp.Failure);
  dart.addTypeCaches(base_client_http_hlp.Failure);
  dart.setLibraryUri(base_client_http_hlp.Failure, I[41]);
  dart.setFieldSignature(base_client_http_hlp.Failure, () => ({
    __proto__: dart.getFields(base_client_http_hlp.Failure.__proto__),
    msg: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(base_client_http_hlp.Failure, ['toString']);
  var message$ = dart.privateName(exception_hlp, "ExceptionHandler.message");
  var prefix$0 = dart.privateName(exception_hlp, "ExceptionHandler.prefix");
  var url$ = dart.privateName(exception_hlp, "ExceptionHandler.url");
  exception_hlp.ExceptionHandler = class ExceptionHandler extends core.Object {
    get message() {
      return this[message$];
    }
    set message(value) {
      super.message = value;
    }
    get prefix() {
      return this[prefix$0];
    }
    set prefix(value) {
      super.prefix = value;
    }
    get url() {
      return this[url$];
    }
    set url(value) {
      super.url = value;
    }
    static ['_#new#tearOff'](message = null, prefix = null, url = null) {
      return new exception_hlp.ExceptionHandler.new(message, prefix, url);
    }
  };
  (exception_hlp.ExceptionHandler.new = function(message = null, prefix = null, url = null) {
    this[message$] = message;
    this[prefix$0] = prefix;
    this[url$] = url;
    ;
  }).prototype = exception_hlp.ExceptionHandler.prototype;
  dart.addTypeTests(exception_hlp.ExceptionHandler);
  dart.addTypeCaches(exception_hlp.ExceptionHandler);
  exception_hlp.ExceptionHandler[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(exception_hlp.ExceptionHandler, I[42]);
  dart.setFieldSignature(exception_hlp.ExceptionHandler, () => ({
    __proto__: dart.getFields(exception_hlp.ExceptionHandler.__proto__),
    message: dart.finalFieldType(dart.nullable(core.String)),
    prefix: dart.finalFieldType(dart.nullable(core.String)),
    url: dart.finalFieldType(dart.nullable(core.String))
  }));
  exception_hlp.BadRequestException = class BadRequestException extends exception_hlp.ExceptionHandler {
    static ['_#new#tearOff'](message = null, url = null) {
      return new exception_hlp.BadRequestException.new(message, url);
    }
  };
  (exception_hlp.BadRequestException.new = function(message = null, url = null) {
    exception_hlp.BadRequestException.__proto__.new.call(this, message, "Bad Request", url);
    ;
  }).prototype = exception_hlp.BadRequestException.prototype;
  dart.addTypeTests(exception_hlp.BadRequestException);
  dart.addTypeCaches(exception_hlp.BadRequestException);
  dart.setLibraryUri(exception_hlp.BadRequestException, I[42]);
  exception_hlp.FetchDataException = class FetchDataException extends exception_hlp.ExceptionHandler {
    static ['_#new#tearOff'](message = null, url = null) {
      return new exception_hlp.FetchDataException.new(message, url);
    }
  };
  (exception_hlp.FetchDataException.new = function(message = null, url = null) {
    exception_hlp.FetchDataException.__proto__.new.call(this, message, "Unable to process", url);
    ;
  }).prototype = exception_hlp.FetchDataException.prototype;
  dart.addTypeTests(exception_hlp.FetchDataException);
  dart.addTypeCaches(exception_hlp.FetchDataException);
  dart.setLibraryUri(exception_hlp.FetchDataException, I[42]);
  exception_hlp.ApiNotRespondingException = class ApiNotRespondingException extends exception_hlp.ExceptionHandler {
    static ['_#new#tearOff'](message = null, url = null) {
      return new exception_hlp.ApiNotRespondingException.new(message, url);
    }
  };
  (exception_hlp.ApiNotRespondingException.new = function(message = null, url = null) {
    exception_hlp.ApiNotRespondingException.__proto__.new.call(this, message, "Api not responded in time", url);
    ;
  }).prototype = exception_hlp.ApiNotRespondingException.prototype;
  dart.addTypeTests(exception_hlp.ApiNotRespondingException);
  dart.addTypeCaches(exception_hlp.ApiNotRespondingException);
  dart.setLibraryUri(exception_hlp.ApiNotRespondingException, I[42]);
  exception_hlp.UnAuthorizedException = class UnAuthorizedException extends exception_hlp.ExceptionHandler {
    static ['_#new#tearOff'](message = null, url = null) {
      return new exception_hlp.UnAuthorizedException.new(message, url);
    }
  };
  (exception_hlp.UnAuthorizedException.new = function(message = null, url = null) {
    exception_hlp.UnAuthorizedException.__proto__.new.call(this, message, "UnAuthorized request", url);
    ;
  }).prototype = exception_hlp.UnAuthorizedException.prototype;
  dart.addTypeTests(exception_hlp.UnAuthorizedException);
  dart.addTypeCaches(exception_hlp.UnAuthorizedException);
  dart.setLibraryUri(exception_hlp.UnAuthorizedException, I[42]);
  extension_hlp['BuildContextExtension|get#deviceHeight'] = function BuildContextExtension$124get$35deviceHeight($this) {
    return media_query.MediaQuery.of($this).size.height;
  };
  extension_hlp['BuildContextExtension|get#deviceWidth'] = function BuildContextExtension$124get$35deviceWidth($this) {
    return media_query.MediaQuery.of($this).size.width;
  };
  extension_hlp['NavigatorExtension|pop'] = function NavigatorExtension$124pop(T, $this, result = null) {
    navigator.Navigator.pop(T, $this, result);
  };
  extension_hlp['NavigatorExtension|get#pop'] = function NavigatorExtension$124get$35pop($this) {
    return dart.fn((T, result = null) => extension_hlp['NavigatorExtension|pop'](T, $this, result), T$.TNTovoid());
  };
  extension_hlp['NavigatorExtension|popToRoot'] = function NavigatorExtension$124popToRoot(T, $this) {
    navigator.Navigator.popUntil($this, dart.fn(route => route.isFirst, T$.RouteTobool()));
  };
  extension_hlp['NavigatorExtension|get#popToRoot'] = function NavigatorExtension$124get$35popToRoot($this) {
    return dart.fn(T => extension_hlp['NavigatorExtension|popToRoot'](T, $this), T$.VoidTovoid$1());
  };
  extension_hlp['NavigatorExtension|push'] = function NavigatorExtension$124push(T, $this, widget, name = null) {
    return async.async(dart.nullable(T), function* NavigatorExtension$124push() {
      return navigator.Navigator.push(T, $this, new (page.MaterialPageRoute$(T)).new({builder: dart.fn(context => widget, T$.BuildContextToWidget()), settings: new navigator.RouteSettings.new({name: name})}));
    });
  };
  extension_hlp['NavigatorExtension|get#push'] = function NavigatorExtension$124get$35push($this) {
    return dart.fn((T, widget, name = null) => extension_hlp['NavigatorExtension|push'](T, $this, widget, name), T$.WidgetAndStringNToFutureOfTN());
  };
  extension_hlp['NavigatorExtension|pushReplacement'] = function NavigatorExtension$124pushReplacement(T, TO, $this, widget) {
    return async.async(dart.nullable(T), function* NavigatorExtension$124pushReplacement() {
      return navigator.Navigator.pushReplacement(T, TO, $this, new (page.MaterialPageRoute$(T)).new({builder: dart.fn(context => widget, T$.BuildContextToWidget())}));
    });
  };
  extension_hlp['NavigatorExtension|get#pushReplacement'] = function NavigatorExtension$124get$35pushReplacement($this) {
    return dart.fn((T, TO, widget) => extension_hlp['NavigatorExtension|pushReplacement'](T, TO, $this, widget), T$.WidgetToFutureOfTN());
  };
  extension_hlp['NavigatorExtension|pushAndRemoveUntil'] = function NavigatorExtension$124pushAndRemoveUntil(T, $this, widget, predicate) {
    return async.async(dart.nullable(T), function* NavigatorExtension$124pushAndRemoveUntil() {
      return navigator.Navigator.pushAndRemoveUntil(T, $this, new (page.MaterialPageRoute$(T)).new({builder: dart.fn(context => widget, T$.BuildContextToWidget())}), predicate);
    });
  };
  extension_hlp['NavigatorExtension|get#pushAndRemoveUntil'] = function NavigatorExtension$124get$35pushAndRemoveUntil($this) {
    return dart.fn((T, widget, predicate) => extension_hlp['NavigatorExtension|pushAndRemoveUntil'](T, $this, widget, predicate), T$.WidgetAndFnToFutureOfTN());
  };
  extension_hlp['IntegerExt|get#currencyFormatRp'] = function IntegerExt$124get$35currencyFormatRp($this) {
    return number_format.NumberFormat.currency({locale: "id", symbol: "IDR ", decimalDigits: 0}).format($this);
  };
  extension_hlp['Capitalized|capitalized'] = function Capitalized$124capitalized($this) {
    return $this[$substring](0, 1)[$toUpperCase]() + $this[$substring](1)[$toLowerCase]();
  };
  extension_hlp['Capitalized|get#capitalized'] = function Capitalized$124get$35capitalized($this) {
    return dart.fn(() => extension_hlp['Capitalized|capitalized']($this), T$.VoidToString());
  };
  dialog_hlp.DialogHelper = class DialogHelper extends core.Object {
    static TemporaryOnly() {
      new basic.Center.new({child: new progress_indicator.CircularProgressIndicator.new()});
    }
    static ['_#new#tearOff']() {
      return new dialog_hlp.DialogHelper.new();
    }
  };
  (dialog_hlp.DialogHelper.new = function() {
    ;
  }).prototype = dialog_hlp.DialogHelper.prototype;
  dart.addTypeTests(dialog_hlp.DialogHelper);
  dart.addTypeCaches(dialog_hlp.DialogHelper);
  dart.setStaticMethodSignature(dialog_hlp.DialogHelper, () => ['TemporaryOnly']);
  dart.setLibraryUri(dialog_hlp.DialogHelper, I[43]);
  material_color_hlp.getMaterialColor = function getMaterialColor(color) {
    let red = color.red;
    let green = color.green;
    let blue = color.blue;
    let alpha = color.alpha;
    let shades = new (T$.IdentityMapOfint$Color()).from([50, new ui.Color.fromARGB(alpha, red, green, blue), 100, new ui.Color.fromARGB(alpha, red, green, blue), 200, new ui.Color.fromARGB(alpha, red, green, blue), 300, new ui.Color.fromARGB(alpha, red, green, blue), 400, new ui.Color.fromARGB(alpha, red, green, blue), 500, new ui.Color.fromARGB(alpha, red, green, blue), 600, new ui.Color.fromARGB(alpha, red, green, blue), 700, new ui.Color.fromARGB(alpha, red, green, blue), 800, new ui.Color.fromARGB(alpha, red, green, blue), 900, new ui.Color.fromARGB(alpha, red, green, blue)]);
    return new colors.MaterialColor.new(color.value, shades);
  };
  var mobileBody$ = dart.privateName(responsive_hlp, "ResponsiveLayout.mobileBody");
  var tabletBody$ = dart.privateName(responsive_hlp, "ResponsiveLayout.tabletBody");
  var desktopBody$ = dart.privateName(responsive_hlp, "ResponsiveLayout.desktopBody");
  responsive_hlp.ResponsiveLayout = class ResponsiveLayout extends framework.StatelessWidget {
    get mobileBody() {
      return this[mobileBody$];
    }
    set mobileBody(value) {
      super.mobileBody = value;
    }
    get tabletBody() {
      return this[tabletBody$];
    }
    set tabletBody(value) {
      super.tabletBody = value;
    }
    get desktopBody() {
      return this[desktopBody$];
    }
    set desktopBody(value) {
      super.desktopBody = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let mobileBody = opts && 'mobileBody' in opts ? opts.mobileBody : null;
      let tabletBody = opts && 'tabletBody' in opts ? opts.tabletBody : null;
      let desktopBody = opts && 'desktopBody' in opts ? opts.desktopBody : null;
      return new responsive_hlp.ResponsiveLayout.new({key: key, mobileBody: mobileBody, tabletBody: tabletBody, desktopBody: desktopBody});
    }
    build(context) {
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, dimension) => {
          let t33, t33$;
          if (dimension.maxWidth < 768) {
            return this.mobileBody;
          } else if (dimension.maxWidth >= 768 && dimension.maxWidth < 1440) {
            t33 = this.tabletBody;
            return t33 == null ? this.mobileBody : t33;
          } else {
            t33$ = this.desktopBody;
            return t33$ == null ? this.mobileBody : t33$;
          }
        }, T$.BuildContextAndBoxConstraintsToWidget())});
    }
  };
  (responsive_hlp.ResponsiveLayout.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let mobileBody = opts && 'mobileBody' in opts ? opts.mobileBody : null;
    let tabletBody = opts && 'tabletBody' in opts ? opts.tabletBody : null;
    let desktopBody = opts && 'desktopBody' in opts ? opts.desktopBody : null;
    this[mobileBody$] = mobileBody;
    this[tabletBody$] = tabletBody;
    this[desktopBody$] = desktopBody;
    responsive_hlp.ResponsiveLayout.__proto__.new.call(this, {key: key});
    ;
  }).prototype = responsive_hlp.ResponsiveLayout.prototype;
  dart.addTypeTests(responsive_hlp.ResponsiveLayout);
  dart.addTypeCaches(responsive_hlp.ResponsiveLayout);
  dart.setMethodSignature(responsive_hlp.ResponsiveLayout, () => ({
    __proto__: dart.getMethods(responsive_hlp.ResponsiveLayout.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(responsive_hlp.ResponsiveLayout, I[44]);
  dart.setFieldSignature(responsive_hlp.ResponsiveLayout, () => ({
    __proto__: dart.getFields(responsive_hlp.ResponsiveLayout.__proto__),
    mobileBody: dart.finalFieldType(framework.Widget),
    tabletBody: dart.finalFieldType(dart.nullable(framework.Widget)),
    desktopBody: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  session_hlp.MySession = class MySession extends core.Object {
    static setLoggedIn(status) {
      return async.async(core.bool, function* setLoggedIn() {
        let prefs = (yield shared_preferences.SharedPreferences.getInstance());
        return prefs.setBool("logged_in", status);
      });
    }
    static getLogedIn() {
      return async.async(core.bool, function* getLogedIn() {
        let t33;
        let prefs = (yield shared_preferences.SharedPreferences.getInstance());
        t33 = prefs.getBool("logged_in");
        return t33 == null ? false : t33;
      });
    }
    static setUserId(userId) {
      return async.async(core.bool, function* setUserId() {
        let prefs = (yield shared_preferences.SharedPreferences.getInstance());
        return prefs.setString("user_id", userId);
      });
    }
    static getUserId() {
      return async.async(core.String, function* getUserId() {
        let t33;
        let prefs = (yield shared_preferences.SharedPreferences.getInstance());
        t33 = prefs.getString("user_id");
        return t33 == null ? "" : t33;
      });
    }
    static ['_#new#tearOff']() {
      return new session_hlp.MySession.new();
    }
  };
  (session_hlp.MySession.new = function() {
    ;
  }).prototype = session_hlp.MySession.prototype;
  dart.addTypeTests(session_hlp.MySession);
  dart.addTypeCaches(session_hlp.MySession);
  dart.setStaticMethodSignature(session_hlp.MySession, () => ['setLoggedIn', 'getLogedIn', 'setUserId', 'getUserId']);
  dart.setLibraryUri(session_hlp.MySession, I[45]);
  var _currentDate = dart.privateName(utils_hlp, "_currentDate");
  var _currentTime = dart.privateName(utils_hlp, "_currentTime");
  var _curDateTime = dart.privateName(utils_hlp, "_curDateTime");
  utils_hlp.MyUtils = class MyUtils extends core.Object {
    get currentDate() {
      return this[_currentDate];
    }
    get currentTime() {
      return this[_currentTime];
    }
    get curDateTime() {
      return this[_curDateTime];
    }
    getCurrentTime() {
      let now = new core.DateTime.now();
      let timeFormatter = new date_format.DateFormat.Hms();
      let formattedTime = timeFormatter.format(now);
      return formattedTime;
    }
    getCurrentDate() {
      let now = new core.DateTime.now();
      let formatter = new date_format.DateFormat.new("dd MMM yyyy");
      let formattedDate = formatter.format(now);
      return formattedDate;
    }
    getCurrentDateTime(opts) {
      let t33;
      let format = opts && 'format' in opts ? opts.format : null;
      let now = new core.DateTime.now();
      let fmt = (t33 = format, t33 == null ? "dd MMM yyyy HH:mm" : t33);
      let formattedDateTime = new date_format.DateFormat.new(fmt).format(now);
      return formattedDateTime;
    }
    getCurrentDateTimeMulti() {
      let now = new core.DateTime.now();
      let formattedDateTime = new date_format.DateFormat.new("dd MMM yyyy HH:mm").format(now);
      let formatter = new date_format.DateFormat.new("dd MMM yyyy");
      let timeFormatter = new date_format.DateFormat.Hms();
      let formattedDate = formatter.format(now);
      let formattedTime = timeFormatter.format(now);
      this[_currentDate] = formattedDate;
      this[_currentTime] = formattedTime;
      core.print("Date and Time: " + formattedDateTime);
      core.print("Date: " + formattedDate);
      core.print("Time: " + formattedTime);
    }
    static getUnixDate(myDate) {
      return myDate.millisecondsSinceEpoch / 1000;
    }
    static convertUnixDate(myUnixDate, opts) {
      let dateFormat = opts && 'dateFormat' in opts ? opts.dateFormat : null;
      if (dateFormat != null) {
        let df = new date_format.DateFormat.new(dateFormat);
        let output = df.format(new core.DateTime.fromMillisecondsSinceEpoch(myUnixDate * 1000));
        return output;
      } else {
        let output = new core.DateTime.fromMillisecondsSinceEpoch(myUnixDate * 1000);
        return output;
      }
    }
    static convertMySqlDate(mySqlDate, dateFormat) {
      let formattedDateTime = new date_format.DateFormat.new(dateFormat).format(mySqlDate);
      return formattedDateTime;
    }
    static convertToIdr(number, decimalDigit) {
      let currencyFormatter = number_format.NumberFormat.currency({locale: "id", symbol: "Rp ", decimalDigits: decimalDigit});
      return currencyFormatter.format(number);
    }
    static getDigitOnly(value) {
      let onlyDigits = core.String.as(dart.dsend(value, 'replaceAll', [core.RegExp.new("[^0-9]"), ""]));
      return onlyDigits;
    }
    static formatCurrency(amount, opts) {
      let decimalCount = opts && 'decimalCount' in opts ? opts.decimalCount : 0;
      let formatCurrency = number_format.NumberFormat.simpleCurrency({decimalDigits: decimalCount});
      return formatCurrency.format(amount);
    }
    static convertMySqlTime(strTime) {
      let parseDt = core.DateTime.parse(strTime);
      let formattedDateTime = new date_format.DateFormat.new("HH:mm").format(parseDt);
      return formattedDateTime;
    }
    static getCustomFormattedDateTime(givenDateTime, dateFormat) {
      let docDateTime = core.DateTime.parse(givenDateTime);
      return new date_format.DateFormat.new(dateFormat).format(docDateTime);
    }
    static getDateOnly(dateTime) {
      let output = new date_format.DateFormat.new("dd").format(dateTime);
      return output;
    }
    static getMonthOnly(dateTime) {
      let output = new date_format.DateFormat.new("MMM").format(dateTime);
      return output;
    }
    static ['_#new#tearOff']() {
      return new utils_hlp.MyUtils.new();
    }
  };
  (utils_hlp.MyUtils.new = function() {
    this[_currentDate] = "1 Jan 2021";
    this[_currentTime] = "01:30:45";
    this[_curDateTime] = "2021-06-07 01:30:45";
    ;
  }).prototype = utils_hlp.MyUtils.prototype;
  dart.addTypeTests(utils_hlp.MyUtils);
  dart.addTypeCaches(utils_hlp.MyUtils);
  dart.setMethodSignature(utils_hlp.MyUtils, () => ({
    __proto__: dart.getMethods(utils_hlp.MyUtils.__proto__),
    getCurrentTime: dart.fnType(core.String, []),
    getCurrentDate: dart.fnType(core.String, []),
    getCurrentDateTime: dart.fnType(core.String, [], {format: dart.nullable(core.String)}, {}),
    getCurrentDateTimeMulti: dart.fnType(dart.void, [])
  }));
  dart.setStaticMethodSignature(utils_hlp.MyUtils, () => ['getUnixDate', 'convertUnixDate', 'convertMySqlDate', 'convertToIdr', 'getDigitOnly', 'formatCurrency', 'convertMySqlTime', 'getCustomFormattedDateTime', 'getDateOnly', 'getMonthOnly']);
  dart.setGetterSignature(utils_hlp.MyUtils, () => ({
    __proto__: dart.getGetters(utils_hlp.MyUtils.__proto__),
    currentDate: core.String,
    currentTime: core.String,
    curDateTime: core.String
  }));
  dart.setLibraryUri(utils_hlp.MyUtils, I[46]);
  dart.setFieldSignature(utils_hlp.MyUtils, () => ({
    __proto__: dart.getFields(utils_hlp.MyUtils.__proto__),
    [_currentDate]: dart.fieldType(core.String),
    [_currentTime]: dart.fieldType(core.String),
    [_curDateTime]: dart.fieldType(core.String)
  }));
  var JsonEncoder__toEncodable = dart.privateName(convert, "JsonEncoder._toEncodable");
  var JsonEncoder_indent = dart.privateName(convert, "JsonEncoder.indent");
  utils_hlp.convertJson = function convertJson(param) {
    let encoder = C[98] || CT.C98;
    let object = encoder.convert(param);
    return object;
  };
  widgets_hlp.myStyle = function myStyle(opts) {
    let t33, t33$;
    let fSize = opts && 'fSize' in opts ? opts.fSize : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let isBold = opts && 'isBold' in opts ? opts.isBold : false;
    let fName = opts && 'fName' in opts ? opts.fName : null;
    return new text_style.TextStyle.new({fontSize: (t33 = fSize, t33 == null ? 14 : t33), color: (t33$ = color, t33$ == null ? colors$1.cBlack : t33$), fontWeight: isBold ? ui.FontWeight.bold : ui.FontWeight.normal, fontFamily: fName});
  };
  widgets_hlp.getFont = function getFont(fontSize, opts) {
    let t33;
    let color = opts && 'color' in opts ? opts.color : null;
    let isBold = opts && 'isBold' in opts ? opts.isBold : false;
    let fontName = opts && 'fontName' in opts ? opts.fontName : null;
    return new text_style.TextStyle.new({fontSize: fontSize, color: (t33 = color, t33 == null ? colors$1.cBlack : t33), fontWeight: isBold ? ui.FontWeight.bold : ui.FontWeight.normal, fontFamily: fontName});
  };
  widgets_hlp.buildLoading = function buildLoading() {
    return new basic.Center.new({child: new progress_indicator.CircularProgressIndicator.new()});
  };
  form_input_pg$.FormInputPage = class FormInputPage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new form_input_pg$.FormInputPage.new({key: key});
    }
    createState() {
      return new form_input_pg$._FormInputPageState.new();
    }
  };
  (form_input_pg$.FormInputPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    form_input_pg$.FormInputPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = form_input_pg$.FormInputPage.prototype;
  dart.addTypeTests(form_input_pg$.FormInputPage);
  dart.addTypeCaches(form_input_pg$.FormInputPage);
  dart.setMethodSignature(form_input_pg$.FormInputPage, () => ({
    __proto__: dart.getMethods(form_input_pg$.FormInputPage.__proto__),
    createState: dart.fnType(framework.State$(form_input_pg$.FormInputPage), [])
  }));
  dart.setLibraryUri(form_input_pg$.FormInputPage, I[47]);
  form_input_pg$._FormInputPageState = class _FormInputPageState extends framework.State$(form_input_pg$.FormInputPage) {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text$.Text.new("Example: Form Input")}), body: new single_child_scroll_view.SingleChildScrollView.new({padding: new edge_insets.EdgeInsets.all(10), child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new text$.Text.new("Form input Text"), form_input_wdg$.MyForms.text(context, this.txtName, "Name"), new basic.SizedBox.new({height: 5}), form_input_wdg$.MyForms.text(context, this.txtName, "Email"), new basic.SizedBox.new({height: 5}), form_input_wdg$.MyForms.password(context, this.txtName, "Password"), new basic.SizedBox.new({height: 5}), form_input_wdg$.MyForms.textIconned(context, this.txtName, "Password", new icon.Icon.new(icons.Icons.cabin))])})})});
    }
    static ['_#new#tearOff']() {
      return new form_input_pg$._FormInputPageState.new();
    }
  };
  (form_input_pg$._FormInputPageState.new = function() {
    this.txtName = new editable_text.TextEditingController.new();
    form_input_pg$._FormInputPageState.__proto__.new.call(this);
    ;
  }).prototype = form_input_pg$._FormInputPageState.prototype;
  dart.addTypeTests(form_input_pg$._FormInputPageState);
  dart.addTypeCaches(form_input_pg$._FormInputPageState);
  dart.setMethodSignature(form_input_pg$._FormInputPageState, () => ({
    __proto__: dart.getMethods(form_input_pg$._FormInputPageState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(form_input_pg$._FormInputPageState, I[47]);
  dart.setFieldSignature(form_input_pg$._FormInputPageState, () => ({
    __proto__: dart.getFields(form_input_pg$._FormInputPageState.__proto__),
    txtName: dart.finalFieldType(editable_text.TextEditingController)
  }));
  button_wdg$.MyButtons = class MyButtons extends core.Object {
    static showMyButtons(context, label, txColor, bgColor, $function, opts) {
      let outlined = opts && 'outlined' in opts ? opts.outlined : null;
      let gradiented = opts && 'gradiented' in opts ? opts.gradiented : null;
      let strokeColor = opts && 'strokeColor' in opts ? opts.strokeColor : null;
      let hasIcon = opts && 'hasIcon' in opts ? opts.hasIcon : null;
      let isLoading = opts && 'isLoading' in opts ? opts.isLoading : false;
      return new material_button.MaterialButton.new({onPressed: $function, hoverColor: colors$1.cTransparent, child: new container.Container.new({alignment: alignment.Alignment.center, padding: new edge_insets.EdgeInsets.symmetric({vertical: 10, horizontal: 20 * 0.5}), decoration: new box_decoration.BoxDecoration.new({color: outlined ? colors$1.cTransparent : bgColor, gradient: gradiented ? colors$1.cGradientPrim : null, borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(10)), border: outlined ? box_border.Border.all({color: dart.nullCheck(strokeColor), width: 2}) : null}), child: isLoading ? new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([new basic.SizedBox.new({width: 24, height: 24, child: new progress_indicator.CircularProgressIndicator.new({color: colors$1.cPrimer})}), new basic.SizedBox.new({width: 10}), new text$.Text.new(label, {style: widgets_hlp.myStyle({color: txColor})})])}) : new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([hasIcon == null ? new basic.SizedBox.shrink() : new basic.Padding.new({padding: C[83] || CT.C83, child: hasIcon}), new text$.Text.new(label, {style: widgets_hlp.myStyle({fSize: 18, color: txColor})})])})})});
    }
    static primary(context, label, $function) {
      return button_wdg$.MyButtons.showMyButtons(context, label, colors$1.cWhite, colors$1.cPrimer, $function, {outlined: false, gradiented: false});
    }
    static secondary(context, label, $function) {
      return button_wdg$.MyButtons.showMyButtons(context, label, colors$1.cSecond, colors$1.cSecond, $function, {outlined: false, gradiented: false});
    }
    static warning(context, label, $function) {
      return button_wdg$.MyButtons.showMyButtons(context, label, colors$1.cBlack, colors$1.cBSWarning, $function, {outlined: false, gradiented: false});
    }
    static danger(context, label, $function) {
      return button_wdg$.MyButtons.showMyButtons(context, label, colors$1.cWhite, colors$1.cRed, $function, {outlined: false, gradiented: false});
    }
    static disabled(context, label) {
      return button_wdg$.MyButtons.showMyButtons(context, label, colors$1.cWhite, colors$1.cGrey, dart.fn(() => {
      }, T$.VoidToNull()), {outlined: false, gradiented: false});
    }
    static primaryOutlined(context, label, $function) {
      return button_wdg$.MyButtons.showMyButtons(context, label, colors$1.cBlack, colors$1.cPrimer, $function, {outlined: true, gradiented: false, strokeColor: colors$1.cPrimer});
    }
    static secondaryOutlined(context, label, $function) {
      return button_wdg$.MyButtons.showMyButtons(context, label, colors$1.cSecond, colors$1.cSecond, $function, {outlined: true, gradiented: false, strokeColor: colors$1.cPrimer});
    }
    static dangerOutlined(context, label, $function) {
      return button_wdg$.MyButtons.showMyButtons(context, label, colors$1.cRed, colors$1.cRed, $function, {outlined: true, gradiented: false, strokeColor: colors$1.cPrimer});
    }
    static primaryGradiented(context, label, $function) {
      return button_wdg$.MyButtons.showMyButtons(context, label, colors$1.cBlack, colors$1.cPrimer, $function, {outlined: false, gradiented: true});
    }
    static isLoading(context, label) {
      return button_wdg$.MyButtons.showMyButtons(context, label, colors$1.cWhite, colors$1.cGrey, dart.fn(() => {
      }, T$.VoidToNull()), {outlined: false, gradiented: false, isLoading: true});
    }
    static primaryIconned(context, label, icon, $function) {
      return button_wdg$.MyButtons.showMyButtons(context, label, colors$1.cBlack, colors$1.cPrimer, $function, {outlined: false, gradiented: false, hasIcon: icon});
    }
    static ['_#new#tearOff']() {
      return new button_wdg$.MyButtons.new();
    }
  };
  (button_wdg$.MyButtons.new = function() {
    ;
  }).prototype = button_wdg$.MyButtons.prototype;
  dart.addTypeTests(button_wdg$.MyButtons);
  dart.addTypeCaches(button_wdg$.MyButtons);
  dart.setStaticMethodSignature(button_wdg$.MyButtons, () => ['showMyButtons', 'primary', 'secondary', 'warning', 'danger', 'disabled', 'primaryOutlined', 'secondaryOutlined', 'dangerOutlined', 'primaryGradiented', 'isLoading', 'primaryIconned']);
  dart.setLibraryUri(button_wdg$.MyButtons, I[48]);
  dialog_wdg$.MyDialogs = class MyDialogs extends core.Object {
    static showDialogBox(context, opts) {
      let title = opts && 'title' in opts ? opts.title : "Alert";
      let subtitle = opts && 'subtitle' in opts ? opts.subtitle : "Something occured in your Apps";
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      return dialog.showDialog(dart.dynamic, {context: context, builder: dart.fn(context => new dialog.Dialog.new({backgroundColor: colors$1.cTransparent, child: new container.Container.new({padding: new edge_insets.EdgeInsets.symmetric({vertical: 16}), margin: new edge_insets.EdgeInsets.all(14), decoration: new box_decoration.BoxDecoration.new({color: colors$1.cBlack.withOpacity(0.6), borderRadius: new border_radius.BorderRadius.circular(12)}), child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([new icon.Icon.new(icons.Icons.add_alert, {size: 50, color: iconColor}), new basic.SizedBox.new({height: 24}), new text$.Text.new(title, {style: widgets_hlp.myStyle({fSize: 16, color: colors$1.cWhite})}), new basic.SizedBox.new({height: 12}), new text$.Text.new(subtitle, {style: widgets_hlp.myStyle({color: colors$1.cWhite})})])})})}), T$.BuildContextToDialog())});
    }
    static showAlertDialogBox(context, opts) {
      let title = opts && 'title' in opts ? opts.title : "Alert";
      let subtitle = opts && 'subtitle' in opts ? opts.subtitle : "Something occured in your Apps";
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      return dialog.showDialog(dart.dynamic, {context: context, builder: dart.fn(context => new dialog.AlertDialog.new({title: new text$.Text.new(title, {style: widgets_hlp.myStyle({fSize: 16})}), content: new text$.Text.new(subtitle), actions: T$.JSArrayOfWidget().of([new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T$.JSArrayOfWidget().of([new basic.SizedBox.new({width: extension_hlp['BuildContextExtension|get#deviceWidth'](context) * 0.3, child: button_wdg$.MyButtons.primary(context, "OK", dart.fn(() => {
                  }, T$.VoidToNull()))}), new basic.SizedBox.new({width: 5}), new basic.SizedBox.new({width: extension_hlp['BuildContextExtension|get#deviceWidth'](context) * 0.3, child: button_wdg$.MyButtons.primaryOutlined(context, "Cancel", dart.fn(() => {
                  }, T$.VoidToNull()))})])})])}), T$.BuildContextToAlertDialog())});
    }
    static loading(context, opts) {
      let title = opts && 'title' in opts ? opts.title : "Loading...";
      return dialog.showDialog(dart.dynamic, {context: context, builder: dart.fn(context => new dialog.AlertDialog.new({content: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([new progress_indicator.CircularProgressIndicator.new(), new basic.SizedBox.new({height: 10}), new text$.Text.new(title)])})}), T$.BuildContextToAlertDialog())});
    }
    static alert(context, title, subtitle) {
      return dialog_wdg$.MyDialogs.showDialogBox(context, {title: title, subtitle: subtitle, iconColor: colors.Colors.orange});
    }
    static alert2(context, title, subtitle) {
      return dialog_wdg$.MyDialogs.showAlertDialogBox(context, {title: title, subtitle: subtitle});
    }
    static ['_#new#tearOff']() {
      return new dialog_wdg$.MyDialogs.new();
    }
  };
  (dialog_wdg$.MyDialogs.new = function() {
    ;
  }).prototype = dialog_wdg$.MyDialogs.prototype;
  dart.addTypeTests(dialog_wdg$.MyDialogs);
  dart.addTypeCaches(dialog_wdg$.MyDialogs);
  dart.setStaticMethodSignature(dialog_wdg$.MyDialogs, () => ['showDialogBox', 'showAlertDialogBox', 'loading', 'alert', 'alert2']);
  dart.setLibraryUri(dialog_wdg$.MyDialogs, I[49]);
  snackbar_wdg$.MySnackbar = class MySnackbar extends core.Object {
    static showSnackbar(context, title, subtitle, txColor, bgColor, iconColor) {
      scaffold.ScaffoldMessenger.of(context).showSnackBar(new snack_bar.SnackBar.new({content: new basic.Row.new({children: T$.JSArrayOfWidget().of([new icon.Icon.new(icons.Icons.notification_important, {color: iconColor}), new basic.SizedBox.new({width: 5}), new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.start, crossAxisAlignment: flex.CrossAxisAlignment.start, children: T$.JSArrayOfWidget().of([new text$.Text.new(title, {style: widgets_hlp.getFont(14, {color: txColor})}), new text$.Text.new(subtitle, {style: widgets_hlp.getFont(12, {color: txColor})})])})])}), backgroundColor: bgColor, duration: new core.Duration.new({seconds: 2})}));
    }
    static primary(context, title, subtitle) {
      snackbar_wdg$.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.white, new ui.Color.new(4278221823), colors.Colors.white);
    }
    static secondary(context, title, subtitle) {
      snackbar_wdg$.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.white, new ui.Color.new(4285298045), colors.Colors.white);
    }
    static success(context, title, subtitle) {
      snackbar_wdg$.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.white, new ui.Color.new(4280854341), colors.Colors.white);
    }
    static danger(context, title, subtitle) {
      snackbar_wdg$.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.white, colors.Colors.red, colors.Colors.white);
    }
    static warning(context, title, subtitle) {
      snackbar_wdg$.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.black, new ui.Color.new(4294951175), colors.Colors.black);
    }
    static info(context, title, subtitle) {
      snackbar_wdg$.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.white, new ui.Color.new(4279739064), colors.Colors.white);
    }
    static light(context, title, subtitle) {
      snackbar_wdg$.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.black, new ui.Color.new(4294507002), colors.Colors.black);
    }
    static dark(context, title, subtitle) {
      snackbar_wdg$.MySnackbar.showSnackbar(framework.BuildContext.as(context), title, subtitle, colors.Colors.white, new ui.Color.new(4281612864), colors.Colors.white);
    }
    static ['_#new#tearOff']() {
      return new snackbar_wdg$.MySnackbar.new();
    }
  };
  (snackbar_wdg$.MySnackbar.new = function() {
    ;
  }).prototype = snackbar_wdg$.MySnackbar.prototype;
  dart.addTypeTests(snackbar_wdg$.MySnackbar);
  dart.addTypeCaches(snackbar_wdg$.MySnackbar);
  dart.setStaticMethodSignature(snackbar_wdg$.MySnackbar, () => ['showSnackbar', 'primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark']);
  dart.setLibraryUri(snackbar_wdg$.MySnackbar, I[50]);
  textfield_wdg$.MyTextField = class MyTextField extends core.Object {
    static inputBox(label, opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let obscureText = opts && 'obscureText' in opts ? opts.obscureText : false;
      let readOnly = opts && 'readOnly' in opts ? opts.readOnly : false;
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return new container.Container.new({padding: C[78] || CT.C78, height: 60, color: colors$1.cPrimer.withOpacity(0.2), child: new text_form_field.TextFormField.new({readOnly: readOnly, controller: controller, onChanged: onChanged, obscureText: obscureText, decoration: new input_decorator.InputDecoration.new({contentPadding: C[84] || CT.C84, labelText: label, floatingLabelBehavior: input_decorator.FloatingLabelBehavior.auto, border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(6), borderSide: borders.BorderSide.none}), enabledBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(6), borderSide: borders.BorderSide.none})})})});
    }
    static round2(label, opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let obscureText = opts && 'obscureText' in opts ? opts.obscureText : false;
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return new container.Container.new({padding: C[78] || CT.C78, height: 60, decoration: my_box_decoration$.appBoxDecorationTextField({borderColor: colors$1.cPrimer.withOpacity(0.4)}), child: new text_form_field.TextFormField.new({controller: controller, onChanged: onChanged, obscureText: obscureText, decoration: new input_decorator.InputDecoration.new({contentPadding: new edge_insets.EdgeInsets.only({top: 7, left: 10}), labelText: label, floatingLabelBehavior: input_decorator.FloatingLabelBehavior.auto, border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(6), borderSide: borders.BorderSide.none}), enabledBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(6), borderSide: borders.BorderSide.none})})})});
    }
    static round(label, opts) {
      let width = opts && 'width' in opts ? opts.width : 280;
      let height = opts && 'height' in opts ? opts.height : 50;
      let hintText = opts && 'hintText' in opts ? opts.hintText : "Type in your info";
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let obscureText = opts && 'obscureText' in opts ? opts.obscureText : false;
      let readOnly = opts && 'readOnly' in opts ? opts.readOnly : false;
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return new basic.SizedBox.new({width: width, height: height, child: new text_form_field.TextFormField.new({controller: controller, onChanged: dart.fn(value => dart.nullCheck(onChanged)(value), T$.StringTovoid()), keyboardType: text_input.TextInputType.multiline, readOnly: readOnly, decoration: new input_decorator.InputDecoration.new({contentPadding: new edge_insets.EdgeInsets.only({top: 7, left: 10}), hintText: hintText, border: C[85] || CT.C85, enabledBorder: C[89] || CT.C89, focusedBorder: C[89] || CT.C89, disabledBorder: C[89] || CT.C89}), maxLines: 1, autocorrect: false, obscureText: obscureText})});
    }
    static roundDisable(label, opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      return textfield_wdg$.MyTextField.round(label, {controller: controller, readOnly: true});
    }
    static roundIcon(label, iconName, opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return new container.Container.new({padding: new edge_insets.EdgeInsets.only({left: 25, right: 25}), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T$.JSArrayOfWidget().of([new my_text$.Text14Normal.new({text: label}), new basic.SizedBox.new({height: 5}), new container.Container.new({width: 325, height: 50, decoration: my_box_decoration$.appBoxDecorationTextField(), child: new basic.Row.new({children: T$.JSArrayOfWidget().of([new container.Container.new({margin: new edge_insets.EdgeInsets.only({left: 17}), child: new image.Image.asset(iconName)}), textfield_wdg$.MyTextField.round(label, {controller: controller, onChanged: onChanged})])})})])})});
    }
    static square(label, opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let obscureText = opts && 'obscureText' in opts ? opts.obscureText : false;
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return textfield_wdg$.MyTextField.inputBox(label, {controller: controller, obscureText: obscureText, onChanged: onChanged});
    }
    static ['_#new#tearOff']() {
      return new textfield_wdg$.MyTextField.new();
    }
  };
  (textfield_wdg$.MyTextField.new = function() {
    ;
  }).prototype = textfield_wdg$.MyTextField.prototype;
  dart.addTypeTests(textfield_wdg$.MyTextField);
  dart.addTypeCaches(textfield_wdg$.MyTextField);
  dart.setStaticMethodSignature(textfield_wdg$.MyTextField, () => ['inputBox', 'round2', 'round', 'roundDisable', 'roundIcon', 'square']);
  dart.setLibraryUri(textfield_wdg$.MyTextField, I[51]);
  form_input_wdg$.MyForms = class MyForms extends core.Object {
    static showFormInput(context, opts) {
      let t34;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let showLabel = opts && 'showLabel' in opts ? opts.showLabel : null;
      let obscureText = opts && 'obscureText' in opts ? opts.obscureText : null;
      let keyboardType = opts && 'keyboardType' in opts ? opts.keyboardType : null;
      let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
      let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: (() => {
          let t33 = T$.JSArrayOfWidget().of([]);
          if (showLabel) t33[$addAll](T$.JSArrayOfWidget().of([new text$.Text.new(label, {style: C[91] || CT.C91}), C[92] || CT.C92]));
          t33.push(new text_form_field.TextFormField.new({controller: controller, onChanged: onChanged, obscureText: (t34 = obscureText, t34 == null ? false : t34), keyboardType: keyboardType, decoration: new input_decorator.InputDecoration.new({prefixIcon: prefixIcon, suffixIcon: suffixIcon, hintText: label})}));
          return t33;
        })()});
    }
    static text(context, controller, label, opts) {
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return form_input_wdg$.MyForms.showFormInput(context, {controller: controller, label: label, showLabel: true, obscureText: false, keyboardType: text_input.TextInputType.text, suffixIcon: new basic.SizedBox.shrink(), onChanged: onChanged});
    }
    static textIconned(context, controller, label, icon, opts) {
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return form_input_wdg$.MyForms.showFormInput(context, {controller: controller, label: label, showLabel: true, obscureText: false, keyboardType: text_input.TextInputType.text, prefixIcon: icon, onChanged: onChanged});
    }
    static password(context, controller, label, opts) {
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      return form_input_wdg$.MyForms.showFormInput(context, {controller: controller, label: label, showLabel: true, obscureText: true, keyboardType: text_input.TextInputType.text, suffixIcon: new basic.SizedBox.shrink(), onChanged: onChanged});
    }
    static ['_#new#tearOff']() {
      return new form_input_wdg$.MyForms.new();
    }
  };
  (form_input_wdg$.MyForms.new = function() {
    ;
  }).prototype = form_input_wdg$.MyForms.prototype;
  dart.addTypeTests(form_input_wdg$.MyForms);
  dart.addTypeCaches(form_input_wdg$.MyForms);
  dart.setStaticMethodSignature(form_input_wdg$.MyForms, () => ['showFormInput', 'text', 'textIconned', 'password']);
  dart.setLibraryUri(form_input_wdg$.MyForms, I[52]);
  var width$0 = dart.privateName(my_box_decoration$, "AppBoxDecorationImage.width");
  var height$0 = dart.privateName(my_box_decoration$, "AppBoxDecorationImage.height");
  var imagePath$0 = dart.privateName(my_box_decoration$, "AppBoxDecorationImage.imagePath");
  my_box_decoration$.AppBoxDecorationImage = class AppBoxDecorationImage extends framework.StatelessWidget {
    get width() {
      return this[width$0];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$0];
    }
    set height(value) {
      super.height = value;
    }
    get imagePath() {
      return this[imagePath$0];
    }
    set imagePath(value) {
      super.imagePath = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let width = opts && 'width' in opts ? opts.width : 40;
      let height = opts && 'height' in opts ? opts.height : 40;
      let imagePath = opts && 'imagePath' in opts ? opts.imagePath : "lib/assets/icons/menu.svg";
      return new my_box_decoration$.AppBoxDecorationImage.new({key: key, width: width, height: height, imagePath: imagePath});
    }
    build(context) {
      return new container.Container.new({width: this.width, height: this.width, decoration: new box_decoration.BoxDecoration.new({image: new decoration_image.DecorationImage.new({fit: box_fit.BoxFit.fitHeight, image: new image_resolution.AssetImage.new(this.imagePath)}), borderRadius: new border_radius.BorderRadius.circular(20)})});
    }
  };
  (my_box_decoration$.AppBoxDecorationImage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let width = opts && 'width' in opts ? opts.width : 40;
    let height = opts && 'height' in opts ? opts.height : 40;
    let imagePath = opts && 'imagePath' in opts ? opts.imagePath : "lib/assets/icons/menu.svg";
    this[width$0] = width;
    this[height$0] = height;
    this[imagePath$0] = imagePath;
    my_box_decoration$.AppBoxDecorationImage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = my_box_decoration$.AppBoxDecorationImage.prototype;
  dart.addTypeTests(my_box_decoration$.AppBoxDecorationImage);
  dart.addTypeCaches(my_box_decoration$.AppBoxDecorationImage);
  dart.setMethodSignature(my_box_decoration$.AppBoxDecorationImage, () => ({
    __proto__: dart.getMethods(my_box_decoration$.AppBoxDecorationImage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(my_box_decoration$.AppBoxDecorationImage, I[53]);
  dart.setFieldSignature(my_box_decoration$.AppBoxDecorationImage, () => ({
    __proto__: dart.getFields(my_box_decoration$.AppBoxDecorationImage.__proto__),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    imagePath: dart.finalFieldType(core.String)
  }));
  my_box_decoration$.appBoxShadow = function appBoxShadow$(opts) {
    let color = opts && 'color' in opts ? opts.color : C[43] || CT.C43;
    let radius = opts && 'radius' in opts ? opts.radius : 15;
    let sR = opts && 'sR' in opts ? opts.sR : 1;
    let bR = opts && 'bR' in opts ? opts.bR : 2;
    let boxBorder = opts && 'boxBorder' in opts ? opts.boxBorder : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    return new box_decoration.BoxDecoration.new({color: color, borderRadius: new border_radius.BorderRadius.circular(radius), border: boxBorder, boxShadow: T$.JSArrayOfBoxShadow().of([new box_shadow.BoxShadow.new({color: colors.Colors.grey.withOpacity(0.1), spreadRadius: sR, blurRadius: bR, offset: C[93] || CT.C93})])});
  };
  my_box_decoration$.appBoxShadowWithRadius = function appBoxShadowWithRadius$(opts) {
    let color = opts && 'color' in opts ? opts.color : C[43] || CT.C43;
    let radius = opts && 'radius' in opts ? opts.radius : 15;
    let sR = opts && 'sR' in opts ? opts.sR : 1;
    let bR = opts && 'bR' in opts ? opts.bR : 2;
    let border = opts && 'border' in opts ? opts.border : null;
    return new box_decoration.BoxDecoration.new({color: color, borderRadius: new border_radius.BorderRadius.only({topLeft: new ui.Radius.circular(20), topRight: new ui.Radius.circular(20)}), border: border, boxShadow: T$.JSArrayOfBoxShadow().of([new box_shadow.BoxShadow.new({color: colors.Colors.grey.withOpacity(0.1), spreadRadius: sR, blurRadius: bR, offset: C[93] || CT.C93})])});
  };
  my_box_decoration$.appBoxDecorationTextField = function appBoxDecorationTextField$(opts) {
    let color = opts && 'color' in opts ? opts.color : C[36] || CT.C36;
    let radius = opts && 'radius' in opts ? opts.radius : 15;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : C[39] || CT.C39;
    return new box_decoration.BoxDecoration.new({color: color, borderRadius: new border_radius.BorderRadius.circular(radius), border: box_border.Border.all({color: borderColor})});
  };
  var text$4 = dart.privateName(my_text$, "Text16Normal.text");
  var color$3 = dart.privateName(my_text$, "Text16Normal.color");
  var fontWeight$0 = dart.privateName(my_text$, "Text16Normal.fontWeight");
  my_text$.Text16Normal = class Text16Normal extends framework.StatelessWidget {
    get text() {
      return this[text$4];
    }
    set text(value) {
      super.text = value;
    }
    get color() {
      return this[color$3];
    }
    set color(value) {
      super.color = value;
    }
    get fontWeight() {
      return this[fontWeight$0];
    }
    set fontWeight(value) {
      super.fontWeight = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let text = opts && 'text' in opts ? opts.text : "";
      let color = opts && 'color' in opts ? opts.color : C[41] || CT.C41;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : C[94] || CT.C94;
      return new my_text$.Text16Normal.new({key: key, text: text, color: color, fontWeight: fontWeight});
    }
    build(context) {
      return new text$.Text.new(this.text, {textAlign: ui.TextAlign.center, style: new text_style.TextStyle.new({color: this.color, fontSize: 16, fontWeight: this.fontWeight})});
    }
  };
  (my_text$.Text16Normal.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : "";
    let color = opts && 'color' in opts ? opts.color : C[41] || CT.C41;
    let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : C[94] || CT.C94;
    this[text$4] = text;
    this[color$3] = color;
    this[fontWeight$0] = fontWeight;
    my_text$.Text16Normal.__proto__.new.call(this, {key: key});
    ;
  }).prototype = my_text$.Text16Normal.prototype;
  dart.addTypeTests(my_text$.Text16Normal);
  dart.addTypeCaches(my_text$.Text16Normal);
  dart.setMethodSignature(my_text$.Text16Normal, () => ({
    __proto__: dart.getMethods(my_text$.Text16Normal.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(my_text$.Text16Normal, I[54]);
  dart.setFieldSignature(my_text$.Text16Normal, () => ({
    __proto__: dart.getFields(my_text$.Text16Normal.__proto__),
    text: dart.finalFieldType(core.String),
    color: dart.finalFieldType(ui.Color),
    fontWeight: dart.finalFieldType(ui.FontWeight)
  }));
  var text$5 = dart.privateName(my_text$, "Text14Normal.text");
  var color$4 = dart.privateName(my_text$, "Text14Normal.color");
  my_text$.Text14Normal = class Text14Normal extends framework.StatelessWidget {
    get text() {
      return this[text$5];
    }
    set text(value) {
      super.text = value;
    }
    get color() {
      return this[color$4];
    }
    set color(value) {
      super.color = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let text = opts && 'text' in opts ? opts.text : "";
      let color = opts && 'color' in opts ? opts.color : C[37] || CT.C37;
      return new my_text$.Text14Normal.new({key: key, text: text, color: color});
    }
    build(context) {
      return new text$.Text.new(this.text, {textAlign: ui.TextAlign.start, style: new text_style.TextStyle.new({color: this.color, fontSize: 14, fontWeight: ui.FontWeight.normal})});
    }
  };
  (my_text$.Text14Normal.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : "";
    let color = opts && 'color' in opts ? opts.color : C[37] || CT.C37;
    this[text$5] = text;
    this[color$4] = color;
    my_text$.Text14Normal.__proto__.new.call(this, {key: key});
    ;
  }).prototype = my_text$.Text14Normal.prototype;
  dart.addTypeTests(my_text$.Text14Normal);
  dart.addTypeCaches(my_text$.Text14Normal);
  dart.setMethodSignature(my_text$.Text14Normal, () => ({
    __proto__: dart.getMethods(my_text$.Text14Normal.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(my_text$.Text14Normal, I[54]);
  dart.setFieldSignature(my_text$.Text14Normal, () => ({
    __proto__: dart.getFields(my_text$.Text14Normal.__proto__),
    text: dart.finalFieldType(core.String),
    color: dart.finalFieldType(ui.Color)
  }));
  var text$6 = dart.privateName(my_text$, "Text11Normal.text");
  var color$5 = dart.privateName(my_text$, "Text11Normal.color");
  my_text$.Text11Normal = class Text11Normal extends framework.StatelessWidget {
    get text() {
      return this[text$6];
    }
    set text(value) {
      super.text = value;
    }
    get color() {
      return this[color$5];
    }
    set color(value) {
      super.color = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let text = opts && 'text' in opts ? opts.text : "";
      let color = opts && 'color' in opts ? opts.color : C[37] || CT.C37;
      return new my_text$.Text11Normal.new({key: key, text: text, color: color});
    }
    build(context) {
      return new text$.Text.new(this.text, {textAlign: ui.TextAlign.start, style: new text_style.TextStyle.new({color: this.color, fontSize: 11, fontWeight: ui.FontWeight.normal})});
    }
  };
  (my_text$.Text11Normal.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : "";
    let color = opts && 'color' in opts ? opts.color : C[37] || CT.C37;
    this[text$6] = text;
    this[color$5] = color;
    my_text$.Text11Normal.__proto__.new.call(this, {key: key});
    ;
  }).prototype = my_text$.Text11Normal.prototype;
  dart.addTypeTests(my_text$.Text11Normal);
  dart.addTypeCaches(my_text$.Text11Normal);
  dart.setMethodSignature(my_text$.Text11Normal, () => ({
    __proto__: dart.getMethods(my_text$.Text11Normal.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(my_text$.Text11Normal, I[54]);
  dart.setFieldSignature(my_text$.Text11Normal, () => ({
    __proto__: dart.getFields(my_text$.Text11Normal.__proto__),
    text: dart.finalFieldType(core.String),
    color: dart.finalFieldType(ui.Color)
  }));
  var text$7 = dart.privateName(my_text$, "Text10Normal.text");
  var color$6 = dart.privateName(my_text$, "Text10Normal.color");
  my_text$.Text10Normal = class Text10Normal extends framework.StatelessWidget {
    get text() {
      return this[text$7];
    }
    set text(value) {
      super.text = value;
    }
    get color() {
      return this[color$6];
    }
    set color(value) {
      super.color = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let text = opts && 'text' in opts ? opts.text : "";
      let color = opts && 'color' in opts ? opts.color : C[37] || CT.C37;
      return new my_text$.Text10Normal.new({key: key, text: text, color: color});
    }
    build(context) {
      return new text$.Text.new(this.text, {textAlign: ui.TextAlign.start, style: new text_style.TextStyle.new({color: this.color, fontSize: 10, fontWeight: ui.FontWeight.normal})});
    }
  };
  (my_text$.Text10Normal.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : "";
    let color = opts && 'color' in opts ? opts.color : C[37] || CT.C37;
    this[text$7] = text;
    this[color$6] = color;
    my_text$.Text10Normal.__proto__.new.call(this, {key: key});
    ;
  }).prototype = my_text$.Text10Normal.prototype;
  dart.addTypeTests(my_text$.Text10Normal);
  dart.addTypeCaches(my_text$.Text10Normal);
  dart.setMethodSignature(my_text$.Text10Normal, () => ({
    __proto__: dart.getMethods(my_text$.Text10Normal.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(my_text$.Text10Normal, I[54]);
  dart.setFieldSignature(my_text$.Text10Normal, () => ({
    __proto__: dart.getFields(my_text$.Text10Normal.__proto__),
    text: dart.finalFieldType(core.String),
    color: dart.finalFieldType(ui.Color)
  }));
  my_text$.text24Normal = function text24Normal$(opts) {
    let text = opts && 'text' in opts ? opts.text : "";
    let color = opts && 'color' in opts ? opts.color : C[37] || CT.C37;
    let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : C[94] || CT.C94;
    return new text$.Text.new(text, {textAlign: ui.TextAlign.center, style: new text_style.TextStyle.new({color: color, fontSize: 24, fontWeight: fontWeight})});
  };
  my_text$.textUnderline = function textUnderline$(opts) {
    let text = opts && 'text' in opts ? opts.text : "Your text";
    return new gesture_detector.GestureDetector.new({onTap: dart.fn(() => {
      }, T$.VoidTovoid()), child: new text$.Text.new(text, {style: new text_style.TextStyle.new({fontWeight: ui.FontWeight.normal, fontSize: 12, color: colors$1.cTx1, decoration: ui.TextDecoration.underline, decorationColor: colors$1.cTx1})})});
  };
  var images$0 = dart.privateName(product_mdl$, "ProductModel.images");
  var name$1 = dart.privateName(product_mdl$, "ProductModel.name");
  var price$0 = dart.privateName(product_mdl$, "ProductModel.price");
  var stock$0 = dart.privateName(product_mdl$, "ProductModel.stock");
  var description$0 = dart.privateName(product_mdl$, "ProductModel.description");
  var store$0 = dart.privateName(product_mdl$, "ProductModel.store");
  product_mdl$.ProductModel = class ProductModel extends core.Object {
    get images() {
      return this[images$0];
    }
    set images(value) {
      super.images = value;
    }
    get name() {
      return this[name$1];
    }
    set name(value) {
      super.name = value;
    }
    get price() {
      return this[price$0];
    }
    set price(value) {
      super.price = value;
    }
    get stock() {
      return this[stock$0];
    }
    set stock(value) {
      super.stock = value;
    }
    get description() {
      return this[description$0];
    }
    set description(value) {
      super.description = value;
    }
    get store() {
      return this[store$0];
    }
    set store(value) {
      super.store = value;
    }
    static ['_#new#tearOff'](opts) {
      let images = opts && 'images' in opts ? opts.images : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let price = opts && 'price' in opts ? opts.price : null;
      let stock = opts && 'stock' in opts ? opts.stock : null;
      let description = opts && 'description' in opts ? opts.description : null;
      let store = opts && 'store' in opts ? opts.store : null;
      return new product_mdl$.ProductModel.new({images: images, name: name, price: price, stock: stock, description: description, store: store});
    }
    get priceFormat() {
      return extension_hlp['IntegerExt|get#currencyFormatRp'](this.price);
    }
  };
  (product_mdl$.ProductModel.new = function(opts) {
    let images = opts && 'images' in opts ? opts.images : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let price = opts && 'price' in opts ? opts.price : null;
    let stock = opts && 'stock' in opts ? opts.stock : null;
    let description = opts && 'description' in opts ? opts.description : null;
    let store = opts && 'store' in opts ? opts.store : null;
    this[images$0] = images;
    this[name$1] = name;
    this[price$0] = price;
    this[stock$0] = stock;
    this[description$0] = description;
    this[store$0] = store;
    ;
  }).prototype = product_mdl$.ProductModel.prototype;
  dart.addTypeTests(product_mdl$.ProductModel);
  dart.addTypeCaches(product_mdl$.ProductModel);
  dart.setGetterSignature(product_mdl$.ProductModel, () => ({
    __proto__: dart.getGetters(product_mdl$.ProductModel.__proto__),
    priceFormat: core.String
  }));
  dart.setLibraryUri(product_mdl$.ProductModel, I[55]);
  dart.setFieldSignature(product_mdl$.ProductModel, () => ({
    __proto__: dart.getFields(product_mdl$.ProductModel.__proto__),
    images: dart.finalFieldType(core.List$(core.String)),
    name: dart.finalFieldType(core.String),
    price: dart.finalFieldType(core.int),
    stock: dart.finalFieldType(core.int),
    description: dart.finalFieldType(core.String),
    store: dart.finalFieldType(store_mdl$.StoreModel)
  }));
  var name$2 = dart.privateName(store_mdl$, "StoreModel.name");
  var type$2 = dart.privateName(store_mdl$, "StoreModel.type");
  var imageUrl$0 = dart.privateName(store_mdl$, "StoreModel.imageUrl");
  store_mdl$.StoreModel = class StoreModel extends core.Object {
    get name() {
      return this[name$2];
    }
    set name(value) {
      super.name = value;
    }
    get type() {
      return this[type$2];
    }
    set type(value) {
      super.type = value;
    }
    get imageUrl() {
      return this[imageUrl$0];
    }
    set imageUrl(value) {
      super.imageUrl = value;
    }
    static ['_#new#tearOff'](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let imageUrl = opts && 'imageUrl' in opts ? opts.imageUrl : null;
      return new store_mdl$.StoreModel.new({name: name, type: type, imageUrl: imageUrl});
    }
  };
  (store_mdl$.StoreModel.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let imageUrl = opts && 'imageUrl' in opts ? opts.imageUrl : null;
    this[name$2] = name;
    this[type$2] = type;
    this[imageUrl$0] = imageUrl;
    ;
  }).prototype = store_mdl$.StoreModel.prototype;
  dart.addTypeTests(store_mdl$.StoreModel);
  dart.addTypeCaches(store_mdl$.StoreModel);
  dart.setLibraryUri(store_mdl$.StoreModel, I[56]);
  dart.setFieldSignature(store_mdl$.StoreModel, () => ({
    __proto__: dart.getFields(store_mdl$.StoreModel.__proto__),
    name: dart.finalFieldType(core.String),
    type: dart.finalFieldType(store_mdl$.StoreEnum),
    imageUrl: dart.finalFieldType(core.String)
  }));
  store_mdl$.StoreEnum = class StoreEnum extends core._Enum {
    [_enumToString]() {
      return "StoreEnum." + this[_name];
    }
    static ['_#new#tearOff'](index, name, value) {
      return new store_mdl$.StoreEnum.new(index, name, value);
    }
    static getType(value) {
      return store_mdl$.StoreEnum.values[$firstWhere](dart.fn(value => value.value === dart.str(value), T$.StoreEnumTobool$1()), {orElse: dart.fn(() => store_mdl$.StoreEnum.star, T$.VoidToStoreEnum$1())});
    }
    static ['_#getType#tearOff'](value) {
      return store_mdl$.StoreEnum.getType(value);
    }
  };
  (store_mdl$.StoreEnum.new = function(index, name, value) {
    this.value = value;
    store_mdl$.StoreEnum.__proto__.new.call(this, index, name);
    ;
  }).prototype = store_mdl$.StoreEnum.prototype;
  dart.addTypeTests(store_mdl$.StoreEnum);
  dart.addTypeCaches(store_mdl$.StoreEnum);
  dart.setMethodSignature(store_mdl$.StoreEnum, () => ({
    __proto__: dart.getMethods(store_mdl$.StoreEnum.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setStaticMethodSignature(store_mdl$.StoreEnum, () => ['getType']);
  dart.setLibraryUri(store_mdl$.StoreEnum, I[56]);
  dart.setFieldSignature(store_mdl$.StoreEnum, () => ({
    __proto__: dart.getFields(store_mdl$.StoreEnum.__proto__),
    value: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(store_mdl$.StoreEnum, () => ['values', 'star', 'starPlus', 'officialStore']);
  dart.defineLazy(store_mdl$.StoreEnum, {
    /*store_mdl$.StoreEnum.values*/get values() {
      return C[99] || CT.C99;
    },
    /*store_mdl$.StoreEnum.star*/get star() {
      return C[100] || CT.C100;
    },
    /*store_mdl$.StoreEnum.starPlus*/get starPlus() {
      return C[101] || CT.C101;
    },
    /*store_mdl$.StoreEnum.officialStore*/get officialStore() {
      return C[102] || CT.C102;
    }
  }, false);
  http.head = function head(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(response$.Response, dart.fn(client => client.head(url, {headers: headers}), T$.ClientToFutureOfResponse()));
  };
  http.get = function get(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(response$.Response, dart.fn(client => client.get(url, {headers: headers}), T$.ClientToFutureOfResponse()));
  };
  http.post = function post(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.post(url, {headers: headers, body: body, encoding: encoding}), T$.ClientToFutureOfResponse()));
  };
  http.put = function put(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.put(url, {headers: headers, body: body, encoding: encoding}), T$.ClientToFutureOfResponse()));
  };
  http.patch = function patch(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.patch(url, {headers: headers, body: body, encoding: encoding}), T$.ClientToFutureOfResponse()));
  };
  http.delete = function $delete(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.delete(url, {headers: headers, body: body, encoding: encoding}), T$.ClientToFutureOfResponse()));
  };
  http.read = function read(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(core.String, dart.fn(client => client.read(url, {headers: headers}), T$.ClientToFutureOfString()));
  };
  http.readBytes = function readBytes(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(typed_data.Uint8List, dart.fn(client => client.readBytes(url, {headers: headers}), T$.ClientToFutureOfUint8List()));
  };
  http._withClient = function _withClient(T, fn) {
    return async.async(T, function* _withClient() {
      let client = client$.Client.new();
      try {
        return yield fn(client);
      } finally {
        client.close();
      }
    });
  };
  var _preferenceCache$ = dart.privateName(shared_preferences, "_preferenceCache");
  var _setValue = dart.privateName(shared_preferences, "_setValue");
  shared_preferences.SharedPreferences = class SharedPreferences extends core.Object {
    static ['_#_#tearOff'](_preferenceCache) {
      return new shared_preferences.SharedPreferences.__(_preferenceCache);
    }
    static get _store() {
      return shared_preferences_platform_interface.SharedPreferencesStorePlatform.instance;
    }
    static setPrefix(prefix, opts) {
      let allowList = opts && 'allowList' in opts ? opts.allowList : null;
      if (shared_preferences.SharedPreferences._completer != null) {
        dart.throw(new core.StateError.new("setPrefix cannot be called after getInstance"));
      }
      shared_preferences.SharedPreferences._prefix = prefix;
      shared_preferences.SharedPreferences._prefixHasBeenChanged = true;
      shared_preferences.SharedPreferences._allowList = allowList;
    }
    static resetStatic() {
      shared_preferences.SharedPreferences._completer = null;
      shared_preferences.SharedPreferences._prefix = "flutter.";
      shared_preferences.SharedPreferences._prefixHasBeenChanged = false;
      shared_preferences.SharedPreferences._allowList = null;
    }
    static getInstance() {
      return async.async(shared_preferences.SharedPreferences, function* getInstance() {
        if (shared_preferences.SharedPreferences._completer == null) {
          let completer = T$.CompleterOfSharedPreferences().new();
          shared_preferences.SharedPreferences._completer = completer;
          try {
            let preferencesMap = (yield shared_preferences.SharedPreferences._getSharedPreferencesMap());
            completer.complete(new shared_preferences.SharedPreferences.__(preferencesMap));
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Object.is(e)) {
              completer.completeError(e);
              let sharedPrefsFuture = completer.future;
              shared_preferences.SharedPreferences._completer = null;
              return sharedPrefsFuture;
            } else
              throw e$;
          }
        }
        return dart.nullCheck(shared_preferences.SharedPreferences._completer).future;
      });
    }
    getKeys() {
      return T$.LinkedHashSetOfString().from(this[_preferenceCache$][$keys]);
    }
    get(key) {
      return this[_preferenceCache$][$_get](key);
    }
    getBool(key) {
      return T$.boolN().as(this[_preferenceCache$][$_get](key));
    }
    getInt(key) {
      return T$.intN().as(this[_preferenceCache$][$_get](key));
    }
    getDouble(key) {
      return T$.doubleN().as(this[_preferenceCache$][$_get](key));
    }
    getString(key) {
      return T$.StringN().as(this[_preferenceCache$][$_get](key));
    }
    containsKey(key) {
      return this[_preferenceCache$][$containsKey](key);
    }
    getStringList(key) {
      let t39;
      let list = T$.ListN().as(this[_preferenceCache$][$_get](key));
      if (list != null && !T$.ListOfString().is(list)) {
        list = list[$cast](core.String)[$toList]();
        this[_preferenceCache$][$_set](key, list);
      }
      return T$.ListNOfString().as((t39 = list, t39 == null ? null : t39[$toList]()));
    }
    setBool(key, value) {
      return this[_setValue]("Bool", key, value);
    }
    setInt(key, value) {
      return this[_setValue]("Int", key, value);
    }
    setDouble(key, value) {
      return this[_setValue]("Double", key, value);
    }
    setString(key, value) {
      return this[_setValue]("String", key, value);
    }
    setStringList(key, value) {
      return this[_setValue]("StringList", key, value);
    }
    remove(key) {
      let prefixedKey = shared_preferences.SharedPreferences._prefix + key;
      this[_preferenceCache$][$remove](key);
      return shared_preferences.SharedPreferences._store.remove(prefixedKey);
    }
    [_setValue](valueType, key, value) {
      core.ArgumentError.checkNotNull(core.Object, value, "value");
      let prefixedKey = shared_preferences.SharedPreferences._prefix + key;
      if (T$.ListOfString().is(value)) {
        this[_preferenceCache$][$_set](key, value[$toList]());
      } else {
        this[_preferenceCache$][$_set](key, value);
      }
      return shared_preferences.SharedPreferences._store.setValue(valueType, prefixedKey, value);
    }
    commit() {
      return async.async(core.bool, function* commit() {
        return true;
      });
    }
    clear() {
      this[_preferenceCache$][$clear]();
      if (shared_preferences.SharedPreferences._prefixHasBeenChanged) {
        try {
          return shared_preferences.SharedPreferences._store.clearWithParameters(new types.ClearParameters.new({filter: new types.PreferencesFilter.new({prefix: shared_preferences.SharedPreferences._prefix, allowList: shared_preferences.SharedPreferences._allowList})}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            if (core.UnimplementedError.is(e)) {
              dart.throw(new core.UnimplementedError.new("This implementation of Shared Preferences doesn't yet support the setPrefix method.\nEither update the implementation to support setPrefix, or do not call setPrefix.\n        "));
            } else {
              dart.rethrow(e$);
            }
          } else
            throw e$;
        }
      }
      return shared_preferences.SharedPreferences._store.clear();
    }
    reload() {
      return async.async(dart.void, (function* reload() {
        let preferences = (yield shared_preferences.SharedPreferences._getSharedPreferencesMap());
        this[_preferenceCache$][$clear]();
        this[_preferenceCache$][$addAll](preferences);
      }).bind(this));
    }
    static _getSharedPreferencesMap() {
      return async.async(T$.MapOfString$Object(), function* _getSharedPreferencesMap() {
        let fromSystem = new (T$.IdentityMapOfString$Object()).new();
        if (shared_preferences.SharedPreferences._prefixHasBeenChanged) {
          try {
            fromSystem[$addAll](yield shared_preferences.SharedPreferences._store.getAllWithParameters(new types.GetAllParameters.new({filter: new types.PreferencesFilter.new({prefix: shared_preferences.SharedPreferences._prefix, allowList: shared_preferences.SharedPreferences._allowList})})));
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Object.is(e)) {
              if (core.UnimplementedError.is(e)) {
                dart.throw(new core.UnimplementedError.new("This implementation of Shared Preferences doesn't yet support the setPrefix method.\nEither update the implementation to support setPrefix, or do not call setPrefix.\n        "));
              } else {
                dart.rethrow(e$);
              }
            } else
              throw e$;
          }
        } else {
          fromSystem[$addAll](yield shared_preferences.SharedPreferences._store.getAll());
        }
        if (shared_preferences.SharedPreferences._prefix[$isEmpty]) {
          return fromSystem;
        }
        let preferencesMap = new (T$.IdentityMapOfString$Object()).new();
        for (let key of fromSystem[$keys]) {
          if (!key[$startsWith](shared_preferences.SharedPreferences._prefix)) dart.assertFailed(null, I[57], 264, 14, "key.startsWith(_prefix)");
          preferencesMap[$_set](key[$substring](shared_preferences.SharedPreferences._prefix.length), dart.nullCheck(fromSystem[$_get](key)));
        }
        return preferencesMap;
      });
    }
    static setMockInitialValues(values) {
      let newValues = values[$map](core.String, core.Object, dart.fn((key, value) => {
        let newKey = key;
        if (!key[$startsWith](shared_preferences.SharedPreferences._prefix)) {
          newKey = shared_preferences.SharedPreferences._prefix + key;
        }
        return new (T$.MapEntryOfString$Object()).__(newKey, value);
      }, T$.StringAndObjectToMapEntryOfString$Object()));
      shared_preferences_platform_interface.SharedPreferencesStorePlatform.instance = new shared_preferences_platform_interface.InMemorySharedPreferencesStore.withData(newValues);
      shared_preferences.SharedPreferences._completer = null;
    }
  };
  (shared_preferences.SharedPreferences.__ = function(_preferenceCache) {
    this[_preferenceCache$] = _preferenceCache;
    ;
  }).prototype = shared_preferences.SharedPreferences.prototype;
  dart.addTypeTests(shared_preferences.SharedPreferences);
  dart.addTypeCaches(shared_preferences.SharedPreferences);
  dart.setMethodSignature(shared_preferences.SharedPreferences, () => ({
    __proto__: dart.getMethods(shared_preferences.SharedPreferences.__proto__),
    getKeys: dart.fnType(core.Set$(core.String), []),
    get: dart.fnType(dart.nullable(core.Object), [core.String]),
    getBool: dart.fnType(dart.nullable(core.bool), [core.String]),
    getInt: dart.fnType(dart.nullable(core.int), [core.String]),
    getDouble: dart.fnType(dart.nullable(core.double), [core.String]),
    getString: dart.fnType(dart.nullable(core.String), [core.String]),
    containsKey: dart.fnType(core.bool, [core.String]),
    getStringList: dart.fnType(dart.nullable(core.List$(core.String)), [core.String]),
    setBool: dart.fnType(async.Future$(core.bool), [core.String, core.bool]),
    setInt: dart.fnType(async.Future$(core.bool), [core.String, core.int]),
    setDouble: dart.fnType(async.Future$(core.bool), [core.String, core.double]),
    setString: dart.fnType(async.Future$(core.bool), [core.String, core.String]),
    setStringList: dart.fnType(async.Future$(core.bool), [core.String, core.List$(core.String)]),
    remove: dart.fnType(async.Future$(core.bool), [core.String]),
    [_setValue]: dart.fnType(async.Future$(core.bool), [core.String, core.String, core.Object]),
    commit: dart.fnType(async.Future$(core.bool), []),
    clear: dart.fnType(async.Future$(core.bool), []),
    reload: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(shared_preferences.SharedPreferences, () => ['setPrefix', 'resetStatic', 'getInstance', '_getSharedPreferencesMap', 'setMockInitialValues']);
  dart.setStaticGetterSignature(shared_preferences.SharedPreferences, () => ['_store']);
  dart.setLibraryUri(shared_preferences.SharedPreferences, I[58]);
  dart.setFieldSignature(shared_preferences.SharedPreferences, () => ({
    __proto__: dart.getFields(shared_preferences.SharedPreferences.__proto__),
    [_preferenceCache$]: dart.finalFieldType(core.Map$(core.String, core.Object))
  }));
  dart.setStaticFieldSignature(shared_preferences.SharedPreferences, () => ['_prefix', '_prefixHasBeenChanged', '_allowList', '_completer']);
  dart.defineLazy(shared_preferences.SharedPreferences, {
    /*shared_preferences.SharedPreferences._prefix*/get _prefix() {
      return "flutter.";
    },
    set _prefix(value) {},
    /*shared_preferences.SharedPreferences._prefixHasBeenChanged*/get _prefixHasBeenChanged() {
      return false;
    },
    set _prefixHasBeenChanged(value) {},
    /*shared_preferences.SharedPreferences._allowList*/get _allowList() {
      return null;
    },
    set _allowList(value) {},
    /*shared_preferences.SharedPreferences._completer*/get _completer() {
      return null;
    },
    set _completer(value) {}
  }, false);
  var _processResponse$ = dart.privateName(base_client_http_hlp$, "_processResponse");
  base_client_http_hlp$.BaseClient = class BaseClient extends core.Object {
    get(baseUrl, api) {
      return async.async(dart.dynamic, (function* get() {
        let uri = core.Uri.parse(baseUrl + api);
        try {
          let response = (yield http.get(uri).timeout(new core.Duration.new({seconds: 30})));
          return this[_processResponse$](response);
        } catch (e) {
          let ex = dart.getThrown(e);
          if (io.SocketException.is(ex)) {
            dart.throw(new exception_hlp$.FetchDataException.new("No Internet connection", uri.toString()));
          } else if (async.TimeoutException.is(ex)) {
            dart.throw(new exception_hlp$.ApiNotRespondingException.new("API not responded in time", uri.toString()));
          } else if (_http.HttpException.is(ex)) {
            dart.throw(new base_client_http_hlp$.Failure.new("Couldn't find the object"));
          } else if (core.FormatException.is(ex)) {
            dart.throw(new base_client_http_hlp$.Failure.new("Bad response format"));
          } else
            throw e;
        }
      }).bind(this));
    }
    post(baseUrl, api, payloadObj) {
      return async.async(dart.dynamic, (function* post() {
        let uri = core.Uri.parse(baseUrl + api);
        let payload = convert.json.encode(payloadObj);
        try {
          let response = (yield http.post(uri, {body: payload, headers: new (T$.IdentityMapOfString$String()).from(["Content-Type", "application/json; charset=UTF-8"])}).timeout(new core.Duration.new({seconds: 30})));
          return this[_processResponse$](response);
        } catch (e) {
          let ex = dart.getThrown(e);
          if (io.SocketException.is(ex)) {
            dart.throw(new exception_hlp$.FetchDataException.new("No Internet connection", uri.toString()));
          } else if (async.TimeoutException.is(ex)) {
            dart.throw(new exception_hlp$.ApiNotRespondingException.new("API not responded in time", uri.toString()));
          } else if (_http.HttpException.is(ex)) {
            dart.throw(new base_client_http_hlp$.Failure.new("Couldn't find the object"));
          } else if (core.FormatException.is(ex)) {
            dart.throw(new base_client_http_hlp$.Failure.new("Bad response format"));
          } else
            throw e;
        }
      }).bind(this));
    }
    [_processResponse$](response) {
      switch (response.statusCode) {
        case 200:
          {
            let responseJson = convert.utf8.decode(response.bodyBytes);
            return responseJson;
          }
        case 201:
          {
            let responseJson = convert.utf8.decode(response.bodyBytes);
            return responseJson;
          }
        case 400:
          {
            dart.throw(new exception_hlp$.BadRequestException.new(convert.utf8.decode(response.bodyBytes), dart.nullCheck(response.request).url.toString()));
          }
        case 401:
        case 403:
          {
            dart.throw(new exception_hlp$.UnAuthorizedException.new(convert.utf8.decode(response.bodyBytes), dart.nullCheck(response.request).url.toString()));
          }
        case 422:
          {
            dart.throw(new exception_hlp$.BadRequestException.new(convert.utf8.decode(response.bodyBytes), dart.nullCheck(response.request).url.toString()));
          }
        case 500:
        default:
          {
            dart.throw(new exception_hlp$.FetchDataException.new("Error occured with code : " + dart.str(response.statusCode), dart.nullCheck(response.request).url.toString()));
          }
      }
    }
    static ['_#new#tearOff']() {
      return new base_client_http_hlp$.BaseClient.new();
    }
  };
  (base_client_http_hlp$.BaseClient.new = function() {
    ;
  }).prototype = base_client_http_hlp$.BaseClient.prototype;
  dart.addTypeTests(base_client_http_hlp$.BaseClient);
  dart.addTypeCaches(base_client_http_hlp$.BaseClient);
  dart.setMethodSignature(base_client_http_hlp$.BaseClient, () => ({
    __proto__: dart.getMethods(base_client_http_hlp$.BaseClient.__proto__),
    get: dart.fnType(async.Future, [core.String, core.String]),
    post: dart.fnType(async.Future, [core.String, core.String, dart.dynamic]),
    [_processResponse$]: dart.fnType(dart.dynamic, [response$.Response])
  }));
  dart.setLibraryUri(base_client_http_hlp$.BaseClient, I[59]);
  var msg$0 = dart.privateName(base_client_http_hlp$, "Failure.msg");
  base_client_http_hlp$.Failure = class Failure extends core.Object {
    get msg() {
      return this[msg$0];
    }
    set msg(value) {
      super.msg = value;
    }
    static ['_#new#tearOff'](msg) {
      return new base_client_http_hlp$.Failure.new(msg);
    }
    toString() {
      return this.msg;
    }
  };
  (base_client_http_hlp$.Failure.new = function(msg) {
    this[msg$0] = msg;
    ;
  }).prototype = base_client_http_hlp$.Failure.prototype;
  dart.addTypeTests(base_client_http_hlp$.Failure);
  dart.addTypeCaches(base_client_http_hlp$.Failure);
  dart.setLibraryUri(base_client_http_hlp$.Failure, I[59]);
  dart.setFieldSignature(base_client_http_hlp$.Failure, () => ({
    __proto__: dart.getFields(base_client_http_hlp$.Failure.__proto__),
    msg: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(base_client_http_hlp$.Failure, ['toString']);
  var message$0 = dart.privateName(exception_hlp$, "ExceptionHandler.message");
  var prefix$1 = dart.privateName(exception_hlp$, "ExceptionHandler.prefix");
  var url$0 = dart.privateName(exception_hlp$, "ExceptionHandler.url");
  exception_hlp$.ExceptionHandler = class ExceptionHandler extends core.Object {
    get message() {
      return this[message$0];
    }
    set message(value) {
      super.message = value;
    }
    get prefix() {
      return this[prefix$1];
    }
    set prefix(value) {
      super.prefix = value;
    }
    get url() {
      return this[url$0];
    }
    set url(value) {
      super.url = value;
    }
    static ['_#new#tearOff'](message = null, prefix = null, url = null) {
      return new exception_hlp$.ExceptionHandler.new(message, prefix, url);
    }
  };
  (exception_hlp$.ExceptionHandler.new = function(message = null, prefix = null, url = null) {
    this[message$0] = message;
    this[prefix$1] = prefix;
    this[url$0] = url;
    ;
  }).prototype = exception_hlp$.ExceptionHandler.prototype;
  dart.addTypeTests(exception_hlp$.ExceptionHandler);
  dart.addTypeCaches(exception_hlp$.ExceptionHandler);
  exception_hlp$.ExceptionHandler[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(exception_hlp$.ExceptionHandler, I[60]);
  dart.setFieldSignature(exception_hlp$.ExceptionHandler, () => ({
    __proto__: dart.getFields(exception_hlp$.ExceptionHandler.__proto__),
    message: dart.finalFieldType(dart.nullable(core.String)),
    prefix: dart.finalFieldType(dart.nullable(core.String)),
    url: dart.finalFieldType(dart.nullable(core.String))
  }));
  exception_hlp$.BadRequestException = class BadRequestException extends exception_hlp$.ExceptionHandler {
    static ['_#new#tearOff'](message = null, url = null) {
      return new exception_hlp$.BadRequestException.new(message, url);
    }
  };
  (exception_hlp$.BadRequestException.new = function(message = null, url = null) {
    exception_hlp$.BadRequestException.__proto__.new.call(this, message, "Bad Request", url);
    ;
  }).prototype = exception_hlp$.BadRequestException.prototype;
  dart.addTypeTests(exception_hlp$.BadRequestException);
  dart.addTypeCaches(exception_hlp$.BadRequestException);
  dart.setLibraryUri(exception_hlp$.BadRequestException, I[60]);
  exception_hlp$.FetchDataException = class FetchDataException extends exception_hlp$.ExceptionHandler {
    static ['_#new#tearOff'](message = null, url = null) {
      return new exception_hlp$.FetchDataException.new(message, url);
    }
  };
  (exception_hlp$.FetchDataException.new = function(message = null, url = null) {
    exception_hlp$.FetchDataException.__proto__.new.call(this, message, "Unable to process", url);
    ;
  }).prototype = exception_hlp$.FetchDataException.prototype;
  dart.addTypeTests(exception_hlp$.FetchDataException);
  dart.addTypeCaches(exception_hlp$.FetchDataException);
  dart.setLibraryUri(exception_hlp$.FetchDataException, I[60]);
  exception_hlp$.ApiNotRespondingException = class ApiNotRespondingException extends exception_hlp$.ExceptionHandler {
    static ['_#new#tearOff'](message = null, url = null) {
      return new exception_hlp$.ApiNotRespondingException.new(message, url);
    }
  };
  (exception_hlp$.ApiNotRespondingException.new = function(message = null, url = null) {
    exception_hlp$.ApiNotRespondingException.__proto__.new.call(this, message, "Api not responded in time", url);
    ;
  }).prototype = exception_hlp$.ApiNotRespondingException.prototype;
  dart.addTypeTests(exception_hlp$.ApiNotRespondingException);
  dart.addTypeCaches(exception_hlp$.ApiNotRespondingException);
  dart.setLibraryUri(exception_hlp$.ApiNotRespondingException, I[60]);
  exception_hlp$.UnAuthorizedException = class UnAuthorizedException extends exception_hlp$.ExceptionHandler {
    static ['_#new#tearOff'](message = null, url = null) {
      return new exception_hlp$.UnAuthorizedException.new(message, url);
    }
  };
  (exception_hlp$.UnAuthorizedException.new = function(message = null, url = null) {
    exception_hlp$.UnAuthorizedException.__proto__.new.call(this, message, "UnAuthorized request", url);
    ;
  }).prototype = exception_hlp$.UnAuthorizedException.prototype;
  dart.addTypeTests(exception_hlp$.UnAuthorizedException);
  dart.addTypeCaches(exception_hlp$.UnAuthorizedException);
  dart.setLibraryUri(exception_hlp$.UnAuthorizedException, I[60]);
  extension_hlp$['BuildContextExtension|get#deviceHeight'] = function BuildContextExtension$124get$35deviceHeight$($this) {
    return media_query.MediaQuery.of($this).size.height;
  };
  extension_hlp$['BuildContextExtension|get#deviceWidth'] = function BuildContextExtension$124get$35deviceWidth$($this) {
    return media_query.MediaQuery.of($this).size.width;
  };
  extension_hlp$['NavigatorExtension|pop'] = function NavigatorExtension$124pop$(T, $this, result = null) {
    navigator.Navigator.pop(T, $this, result);
  };
  extension_hlp$['NavigatorExtension|get#pop'] = function NavigatorExtension$124get$35pop$($this) {
    return dart.fn((T, result = null) => extension_hlp$['NavigatorExtension|pop'](T, $this, result), T$.TNTovoid());
  };
  extension_hlp$['NavigatorExtension|popToRoot'] = function NavigatorExtension$124popToRoot$(T, $this) {
    navigator.Navigator.popUntil($this, dart.fn(route => route.isFirst, T$.RouteTobool()));
  };
  extension_hlp$['NavigatorExtension|get#popToRoot'] = function NavigatorExtension$124get$35popToRoot$($this) {
    return dart.fn(T => extension_hlp$['NavigatorExtension|popToRoot'](T, $this), T$.VoidTovoid$1());
  };
  extension_hlp$['NavigatorExtension|push'] = function NavigatorExtension$124push$(T, $this, widget, name = null) {
    return async.async(dart.nullable(T), function* NavigatorExtension$124push() {
      return navigator.Navigator.push(T, $this, new (page.MaterialPageRoute$(T)).new({builder: dart.fn(context => widget, T$.BuildContextToWidget()), settings: new navigator.RouteSettings.new({name: name})}));
    });
  };
  extension_hlp$['NavigatorExtension|get#push'] = function NavigatorExtension$124get$35push$($this) {
    return dart.fn((T, widget, name = null) => extension_hlp$['NavigatorExtension|push'](T, $this, widget, name), T$.WidgetAndStringNToFutureOfTN());
  };
  extension_hlp$['NavigatorExtension|pushReplacement'] = function NavigatorExtension$124pushReplacement$(T, TO, $this, widget) {
    return async.async(dart.nullable(T), function* NavigatorExtension$124pushReplacement() {
      return navigator.Navigator.pushReplacement(T, TO, $this, new (page.MaterialPageRoute$(T)).new({builder: dart.fn(context => widget, T$.BuildContextToWidget())}));
    });
  };
  extension_hlp$['NavigatorExtension|get#pushReplacement'] = function NavigatorExtension$124get$35pushReplacement$($this) {
    return dart.fn((T, TO, widget) => extension_hlp$['NavigatorExtension|pushReplacement'](T, TO, $this, widget), T$.WidgetToFutureOfTN());
  };
  extension_hlp$['NavigatorExtension|pushAndRemoveUntil'] = function NavigatorExtension$124pushAndRemoveUntil$(T, $this, widget, predicate) {
    return async.async(dart.nullable(T), function* NavigatorExtension$124pushAndRemoveUntil() {
      return navigator.Navigator.pushAndRemoveUntil(T, $this, new (page.MaterialPageRoute$(T)).new({builder: dart.fn(context => widget, T$.BuildContextToWidget())}), predicate);
    });
  };
  extension_hlp$['NavigatorExtension|get#pushAndRemoveUntil'] = function NavigatorExtension$124get$35pushAndRemoveUntil$($this) {
    return dart.fn((T, widget, predicate) => extension_hlp$['NavigatorExtension|pushAndRemoveUntil'](T, $this, widget, predicate), T$.WidgetAndFnToFutureOfTN());
  };
  extension_hlp$['IntegerExt|get#currencyFormatRp'] = function IntegerExt$124get$35currencyFormatRp$($this) {
    return number_format.NumberFormat.currency({locale: "id", symbol: "IDR ", decimalDigits: 0}).format($this);
  };
  extension_hlp$['Capitalized|capitalized'] = function Capitalized$124capitalized$($this) {
    return $this[$substring](0, 1)[$toUpperCase]() + $this[$substring](1)[$toLowerCase]();
  };
  extension_hlp$['Capitalized|get#capitalized'] = function Capitalized$124get$35capitalized$($this) {
    return dart.fn(() => extension_hlp$['Capitalized|capitalized']($this), T$.VoidToString());
  };
  dialog_hlp$.DialogHelper = class DialogHelper extends core.Object {
    static TemporaryOnly() {
      new basic.Center.new({child: new progress_indicator.CircularProgressIndicator.new()});
    }
    static ['_#new#tearOff']() {
      return new dialog_hlp$.DialogHelper.new();
    }
  };
  (dialog_hlp$.DialogHelper.new = function() {
    ;
  }).prototype = dialog_hlp$.DialogHelper.prototype;
  dart.addTypeTests(dialog_hlp$.DialogHelper);
  dart.addTypeCaches(dialog_hlp$.DialogHelper);
  dart.setStaticMethodSignature(dialog_hlp$.DialogHelper, () => ['TemporaryOnly']);
  dart.setLibraryUri(dialog_hlp$.DialogHelper, I[61]);
  material_color_hlp$.getMaterialColor = function getMaterialColor$(color) {
    let red = color.red;
    let green = color.green;
    let blue = color.blue;
    let alpha = color.alpha;
    let shades = new (T$.IdentityMapOfint$Color()).from([50, new ui.Color.fromARGB(alpha, red, green, blue), 100, new ui.Color.fromARGB(alpha, red, green, blue), 200, new ui.Color.fromARGB(alpha, red, green, blue), 300, new ui.Color.fromARGB(alpha, red, green, blue), 400, new ui.Color.fromARGB(alpha, red, green, blue), 500, new ui.Color.fromARGB(alpha, red, green, blue), 600, new ui.Color.fromARGB(alpha, red, green, blue), 700, new ui.Color.fromARGB(alpha, red, green, blue), 800, new ui.Color.fromARGB(alpha, red, green, blue), 900, new ui.Color.fromARGB(alpha, red, green, blue)]);
    return new colors.MaterialColor.new(color.value, shades);
  };
  var mobileBody$0 = dart.privateName(responsive_hlp$, "ResponsiveLayout.mobileBody");
  var tabletBody$0 = dart.privateName(responsive_hlp$, "ResponsiveLayout.tabletBody");
  var desktopBody$0 = dart.privateName(responsive_hlp$, "ResponsiveLayout.desktopBody");
  responsive_hlp$.ResponsiveLayout = class ResponsiveLayout extends framework.StatelessWidget {
    get mobileBody() {
      return this[mobileBody$0];
    }
    set mobileBody(value) {
      super.mobileBody = value;
    }
    get tabletBody() {
      return this[tabletBody$0];
    }
    set tabletBody(value) {
      super.tabletBody = value;
    }
    get desktopBody() {
      return this[desktopBody$0];
    }
    set desktopBody(value) {
      super.desktopBody = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let mobileBody = opts && 'mobileBody' in opts ? opts.mobileBody : null;
      let tabletBody = opts && 'tabletBody' in opts ? opts.tabletBody : null;
      let desktopBody = opts && 'desktopBody' in opts ? opts.desktopBody : null;
      return new responsive_hlp$.ResponsiveLayout.new({key: key, mobileBody: mobileBody, tabletBody: tabletBody, desktopBody: desktopBody});
    }
    build(context) {
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, dimension) => {
          let t60, t60$;
          if (dimension.maxWidth < 768) {
            return this.mobileBody;
          } else if (dimension.maxWidth >= 768 && dimension.maxWidth < 1440) {
            t60 = this.tabletBody;
            return t60 == null ? this.mobileBody : t60;
          } else {
            t60$ = this.desktopBody;
            return t60$ == null ? this.mobileBody : t60$;
          }
        }, T$.BuildContextAndBoxConstraintsToWidget())});
    }
  };
  (responsive_hlp$.ResponsiveLayout.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let mobileBody = opts && 'mobileBody' in opts ? opts.mobileBody : null;
    let tabletBody = opts && 'tabletBody' in opts ? opts.tabletBody : null;
    let desktopBody = opts && 'desktopBody' in opts ? opts.desktopBody : null;
    this[mobileBody$0] = mobileBody;
    this[tabletBody$0] = tabletBody;
    this[desktopBody$0] = desktopBody;
    responsive_hlp$.ResponsiveLayout.__proto__.new.call(this, {key: key});
    ;
  }).prototype = responsive_hlp$.ResponsiveLayout.prototype;
  dart.addTypeTests(responsive_hlp$.ResponsiveLayout);
  dart.addTypeCaches(responsive_hlp$.ResponsiveLayout);
  dart.setMethodSignature(responsive_hlp$.ResponsiveLayout, () => ({
    __proto__: dart.getMethods(responsive_hlp$.ResponsiveLayout.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(responsive_hlp$.ResponsiveLayout, I[62]);
  dart.setFieldSignature(responsive_hlp$.ResponsiveLayout, () => ({
    __proto__: dart.getFields(responsive_hlp$.ResponsiveLayout.__proto__),
    mobileBody: dart.finalFieldType(framework.Widget),
    tabletBody: dart.finalFieldType(dart.nullable(framework.Widget)),
    desktopBody: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  session_hlp$.MySession = class MySession extends core.Object {
    static setLoggedIn(status) {
      return async.async(core.bool, function* setLoggedIn() {
        let prefs = (yield shared_preferences.SharedPreferences.getInstance());
        return prefs.setBool("logged_in", status);
      });
    }
    static getLogedIn() {
      return async.async(core.bool, function* getLogedIn() {
        let t60;
        let prefs = (yield shared_preferences.SharedPreferences.getInstance());
        t60 = prefs.getBool("logged_in");
        return t60 == null ? false : t60;
      });
    }
    static setUserId(userId) {
      return async.async(core.bool, function* setUserId() {
        let prefs = (yield shared_preferences.SharedPreferences.getInstance());
        return prefs.setString("user_id", userId);
      });
    }
    static getUserId() {
      return async.async(core.String, function* getUserId() {
        let t60;
        let prefs = (yield shared_preferences.SharedPreferences.getInstance());
        t60 = prefs.getString("user_id");
        return t60 == null ? "" : t60;
      });
    }
    static ['_#new#tearOff']() {
      return new session_hlp$.MySession.new();
    }
  };
  (session_hlp$.MySession.new = function() {
    ;
  }).prototype = session_hlp$.MySession.prototype;
  dart.addTypeTests(session_hlp$.MySession);
  dart.addTypeCaches(session_hlp$.MySession);
  dart.setStaticMethodSignature(session_hlp$.MySession, () => ['setLoggedIn', 'getLogedIn', 'setUserId', 'getUserId']);
  dart.setLibraryUri(session_hlp$.MySession, I[63]);
  var _currentDate$ = dart.privateName(utils_hlp$, "_currentDate");
  var _currentTime$ = dart.privateName(utils_hlp$, "_currentTime");
  var _curDateTime$ = dart.privateName(utils_hlp$, "_curDateTime");
  utils_hlp$.MyUtils = class MyUtils extends core.Object {
    get currentDate() {
      return this[_currentDate$];
    }
    get currentTime() {
      return this[_currentTime$];
    }
    get curDateTime() {
      return this[_curDateTime$];
    }
    getCurrentTime() {
      let now = new core.DateTime.now();
      let timeFormatter = new date_format.DateFormat.Hms();
      let formattedTime = timeFormatter.format(now);
      return formattedTime;
    }
    getCurrentDate() {
      let now = new core.DateTime.now();
      let formatter = new date_format.DateFormat.new("dd MMM yyyy");
      let formattedDate = formatter.format(now);
      return formattedDate;
    }
    getCurrentDateTime(opts) {
      let t60;
      let format = opts && 'format' in opts ? opts.format : null;
      let now = new core.DateTime.now();
      let fmt = (t60 = format, t60 == null ? "dd MMM yyyy HH:mm" : t60);
      let formattedDateTime = new date_format.DateFormat.new(fmt).format(now);
      return formattedDateTime;
    }
    getCurrentDateTimeMulti() {
      let now = new core.DateTime.now();
      let formattedDateTime = new date_format.DateFormat.new("dd MMM yyyy HH:mm").format(now);
      let formatter = new date_format.DateFormat.new("dd MMM yyyy");
      let timeFormatter = new date_format.DateFormat.Hms();
      let formattedDate = formatter.format(now);
      let formattedTime = timeFormatter.format(now);
      this[_currentDate$] = formattedDate;
      this[_currentTime$] = formattedTime;
      core.print("Date and Time: " + formattedDateTime);
      core.print("Date: " + formattedDate);
      core.print("Time: " + formattedTime);
    }
    static getUnixDate(myDate) {
      return myDate.millisecondsSinceEpoch / 1000;
    }
    static convertUnixDate(myUnixDate, opts) {
      let dateFormat = opts && 'dateFormat' in opts ? opts.dateFormat : null;
      if (dateFormat != null) {
        let df = new date_format.DateFormat.new(dateFormat);
        let output = df.format(new core.DateTime.fromMillisecondsSinceEpoch(myUnixDate * 1000));
        return output;
      } else {
        let output = new core.DateTime.fromMillisecondsSinceEpoch(myUnixDate * 1000);
        return output;
      }
    }
    static convertMySqlDate(mySqlDate, dateFormat) {
      let formattedDateTime = new date_format.DateFormat.new(dateFormat).format(mySqlDate);
      return formattedDateTime;
    }
    static convertToIdr(number, decimalDigit) {
      let currencyFormatter = number_format.NumberFormat.currency({locale: "id", symbol: "Rp ", decimalDigits: decimalDigit});
      return currencyFormatter.format(number);
    }
    static getDigitOnly(value) {
      let onlyDigits = core.String.as(dart.dsend(value, 'replaceAll', [core.RegExp.new("[^0-9]"), ""]));
      return onlyDigits;
    }
    static formatCurrency(amount, opts) {
      let decimalCount = opts && 'decimalCount' in opts ? opts.decimalCount : 0;
      let formatCurrency = number_format.NumberFormat.simpleCurrency({decimalDigits: decimalCount});
      return formatCurrency.format(amount);
    }
    static convertMySqlTime(strTime) {
      let parseDt = core.DateTime.parse(strTime);
      let formattedDateTime = new date_format.DateFormat.new("HH:mm").format(parseDt);
      return formattedDateTime;
    }
    static getCustomFormattedDateTime(givenDateTime, dateFormat) {
      let docDateTime = core.DateTime.parse(givenDateTime);
      return new date_format.DateFormat.new(dateFormat).format(docDateTime);
    }
    static getDateOnly(dateTime) {
      let output = new date_format.DateFormat.new("dd").format(dateTime);
      return output;
    }
    static getMonthOnly(dateTime) {
      let output = new date_format.DateFormat.new("MMM").format(dateTime);
      return output;
    }
    static ['_#new#tearOff']() {
      return new utils_hlp$.MyUtils.new();
    }
  };
  (utils_hlp$.MyUtils.new = function() {
    this[_currentDate$] = "1 Jan 2021";
    this[_currentTime$] = "01:30:45";
    this[_curDateTime$] = "2021-06-07 01:30:45";
    ;
  }).prototype = utils_hlp$.MyUtils.prototype;
  dart.addTypeTests(utils_hlp$.MyUtils);
  dart.addTypeCaches(utils_hlp$.MyUtils);
  dart.setMethodSignature(utils_hlp$.MyUtils, () => ({
    __proto__: dart.getMethods(utils_hlp$.MyUtils.__proto__),
    getCurrentTime: dart.fnType(core.String, []),
    getCurrentDate: dart.fnType(core.String, []),
    getCurrentDateTime: dart.fnType(core.String, [], {format: dart.nullable(core.String)}, {}),
    getCurrentDateTimeMulti: dart.fnType(dart.void, [])
  }));
  dart.setStaticMethodSignature(utils_hlp$.MyUtils, () => ['getUnixDate', 'convertUnixDate', 'convertMySqlDate', 'convertToIdr', 'getDigitOnly', 'formatCurrency', 'convertMySqlTime', 'getCustomFormattedDateTime', 'getDateOnly', 'getMonthOnly']);
  dart.setGetterSignature(utils_hlp$.MyUtils, () => ({
    __proto__: dart.getGetters(utils_hlp$.MyUtils.__proto__),
    currentDate: core.String,
    currentTime: core.String,
    curDateTime: core.String
  }));
  dart.setLibraryUri(utils_hlp$.MyUtils, I[64]);
  dart.setFieldSignature(utils_hlp$.MyUtils, () => ({
    __proto__: dart.getFields(utils_hlp$.MyUtils.__proto__),
    [_currentDate$]: dart.fieldType(core.String),
    [_currentTime$]: dart.fieldType(core.String),
    [_curDateTime$]: dart.fieldType(core.String)
  }));
  utils_hlp$.convertJson = function convertJson$(param) {
    let encoder = C[98] || CT.C98;
    let object = encoder.convert(param);
    return object;
  };
  widgets_hlp$.myStyle = function myStyle$(opts) {
    let t60, t60$;
    let fSize = opts && 'fSize' in opts ? opts.fSize : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let isBold = opts && 'isBold' in opts ? opts.isBold : false;
    let fName = opts && 'fName' in opts ? opts.fName : null;
    return new text_style.TextStyle.new({fontSize: (t60 = fSize, t60 == null ? 14 : t60), color: (t60$ = color, t60$ == null ? colors$0.cBlack : t60$), fontWeight: isBold ? ui.FontWeight.bold : ui.FontWeight.normal, fontFamily: fName});
  };
  widgets_hlp$.getFont = function getFont$(fontSize, opts) {
    let t60;
    let color = opts && 'color' in opts ? opts.color : null;
    let isBold = opts && 'isBold' in opts ? opts.isBold : false;
    let fontName = opts && 'fontName' in opts ? opts.fontName : null;
    return new text_style.TextStyle.new({fontSize: fontSize, color: (t60 = color, t60 == null ? colors$0.cBlack : t60), fontWeight: isBold ? ui.FontWeight.bold : ui.FontWeight.normal, fontFamily: fontName});
  };
  widgets_hlp$.buildLoading = function buildLoading$() {
    return new basic.Center.new({child: new progress_indicator.CircularProgressIndicator.new()});
  };
  client$.Client = class Client extends core.Object {
    static new() {
      let t60;
      t60 = client$.zoneClient;
      return t60 == null ? browser_client.createClient() : t60;
    }
    static ['_#new#tearOff']() {
      return client$.Client.new();
    }
  };
  (client$.Client[dart.mixinNew] = function() {
  }).prototype = client$.Client.prototype;
  dart.addTypeTests(client$.Client);
  dart.addTypeCaches(client$.Client);
  dart.setStaticMethodSignature(client$.Client, () => ['new']);
  dart.setLibraryUri(client$.Client, I[65]);
  var _clientToken = dart.privateName(client$, "_clientToken");
  client$.runWithClient = function runWithClient(R, body, clientFactory, opts) {
    let zoneSpecification = opts && 'zoneSpecification' in opts ? opts.zoneSpecification : null;
    return async.runZoned(R, body, {zoneValues: new (T$.LinkedMapOfObjectN$ObjectN()).from([C[103] || CT.C103, async.Zone.current.bindCallback(client$.Client, clientFactory)]), zoneSpecification: zoneSpecification});
  };
  dart.copyProperties(client$, {
    get zoneClient() {
      let client = async.Zone.current._get(C[103] || CT.C103);
      return client == null ? null : T$.VoidToClient().as(client)();
    }
  });
  var message$1 = dart.privateName(exception, "ClientException.message");
  var uri$ = dart.privateName(exception, "ClientException.uri");
  exception.ClientException = class ClientException extends core.Object {
    get message() {
      return this[message$1];
    }
    set message(value) {
      super.message = value;
    }
    get uri() {
      return this[uri$];
    }
    set uri(value) {
      super.uri = value;
    }
    static ['_#new#tearOff'](message, uri = null) {
      return new exception.ClientException.new(message, uri);
    }
    toString() {
      return this.message;
    }
  };
  (exception.ClientException.new = function(message, uri = null) {
    this[message$1] = message;
    this[uri$] = uri;
    ;
  }).prototype = exception.ClientException.prototype;
  dart.addTypeTests(exception.ClientException);
  dart.addTypeCaches(exception.ClientException);
  exception.ClientException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(exception.ClientException, I[66]);
  dart.setFieldSignature(exception.ClientException, () => ({
    __proto__: dart.getFields(exception.ClientException.__proto__),
    message: dart.finalFieldType(core.String),
    uri: dart.finalFieldType(dart.nullable(core.Uri))
  }));
  dart.defineExtensionMethods(exception.ClientException, ['toString']);
  var _defaultEncoding = dart.privateName(request$, "_defaultEncoding");
  var _bodyBytes = dart.privateName(request$, "_bodyBytes");
  var _contentType = dart.privateName(request$, "_contentType");
  var _checkFinalized = dart.privateName(request$, "_checkFinalized");
  var method$ = dart.privateName(base_request, "BaseRequest.method");
  var url$1 = dart.privateName(base_request, "BaseRequest.url");
  var headers = dart.privateName(base_request, "BaseRequest.headers");
  var _contentLength = dart.privateName(base_request, "_contentLength");
  var _persistentConnection = dart.privateName(base_request, "_persistentConnection");
  var _followRedirects = dart.privateName(base_request, "_followRedirects");
  var _maxRedirects = dart.privateName(base_request, "_maxRedirects");
  var _finalized = dart.privateName(base_request, "_finalized");
  var _checkFinalized$ = dart.privateName(base_request, "_checkFinalized");
  var StreamView__stream = dart.privateName(async, "StreamView._stream");
  base_request.BaseRequest = class BaseRequest extends core.Object {
    get method() {
      return this[method$];
    }
    set method(value) {
      super.method = value;
    }
    get url() {
      return this[url$1];
    }
    set url(value) {
      super.url = value;
    }
    get headers() {
      return this[headers];
    }
    set headers(value) {
      super.headers = value;
    }
    get contentLength() {
      return this[_contentLength];
    }
    set contentLength(value) {
      if (value != null && dart.notNull(value) < 0) {
        dart.throw(new core.ArgumentError.new("Invalid content length " + dart.str(value) + "."));
      }
      this[_checkFinalized$]();
      this[_contentLength] = value;
    }
    get persistentConnection() {
      return this[_persistentConnection];
    }
    set persistentConnection(value) {
      this[_checkFinalized$]();
      this[_persistentConnection] = value;
    }
    get followRedirects() {
      return this[_followRedirects];
    }
    set followRedirects(value) {
      this[_checkFinalized$]();
      this[_followRedirects] = value;
    }
    get maxRedirects() {
      return this[_maxRedirects];
    }
    set maxRedirects(value) {
      this[_checkFinalized$]();
      this[_maxRedirects] = value;
    }
    get finalized() {
      return this[_finalized];
    }
    static _validateMethod(method) {
      if (!base_request.BaseRequest._tokenRE.hasMatch(method)) {
        dart.throw(new core.ArgumentError.value(method, "method", "Not a valid method"));
      }
      return method;
    }
    finalize() {
      if (this.finalized) dart.throw(new core.StateError.new("Can't finalize a finalized Request."));
      this[_finalized] = true;
      return C[104] || CT.C104;
    }
    send() {
      return async.async(streamed_response.StreamedResponse, (function* send() {
        let client = client$.Client.new();
        try {
          let response = (yield client.send(this));
          let stream = utils.onDone(T$.ListOfint(), response.stream, dart.bind(client, 'close'));
          return new streamed_response.StreamedResponse.new(new byte_stream.ByteStream.new(stream), response.statusCode, {contentLength: response.contentLength, request: response.request, headers: response.headers, isRedirect: response.isRedirect, persistentConnection: response.persistentConnection, reasonPhrase: response.reasonPhrase});
        } catch (e) {
          let _ = dart.getThrown(e);
          if (core.Object.is(_)) {
            client.close();
            dart.rethrow(e);
          } else
            throw e;
        }
      }).bind(this));
    }
    [_checkFinalized$]() {
      if (!this.finalized) return;
      dart.throw(new core.StateError.new("Can't modify a finalized Request."));
    }
    toString() {
      return this.method + " " + dart.str(this.url);
    }
  };
  (base_request.BaseRequest.new = function(method, url) {
    this[_contentLength] = null;
    this[_persistentConnection] = true;
    this[_followRedirects] = true;
    this[_maxRedirects] = 5;
    this[_finalized] = false;
    this[url$1] = url;
    this[method$] = base_request.BaseRequest._validateMethod(method);
    this[headers] = T$.LinkedHashMapOfString$String().new({equals: dart.fn((key1, key2) => key1[$toLowerCase]() === key2[$toLowerCase](), T$.StringAndStringTobool()), hashCode: dart.fn(key => key[$toLowerCase]()[$hashCode], T$.StringToint())});
    ;
  }).prototype = base_request.BaseRequest.prototype;
  dart.addTypeTests(base_request.BaseRequest);
  dart.addTypeCaches(base_request.BaseRequest);
  dart.setMethodSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getMethods(base_request.BaseRequest.__proto__),
    finalize: dart.fnType(byte_stream.ByteStream, []),
    send: dart.fnType(async.Future$(streamed_response.StreamedResponse), []),
    [_checkFinalized$]: dart.fnType(dart.void, [])
  }));
  dart.setStaticMethodSignature(base_request.BaseRequest, () => ['_validateMethod']);
  dart.setGetterSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getGetters(base_request.BaseRequest.__proto__),
    contentLength: dart.nullable(core.int),
    persistentConnection: core.bool,
    followRedirects: core.bool,
    maxRedirects: core.int,
    finalized: core.bool
  }));
  dart.setSetterSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getSetters(base_request.BaseRequest.__proto__),
    contentLength: dart.nullable(core.int),
    persistentConnection: core.bool,
    followRedirects: core.bool,
    maxRedirects: core.int
  }));
  dart.setLibraryUri(base_request.BaseRequest, I[67]);
  dart.setFieldSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getFields(base_request.BaseRequest.__proto__),
    method: dart.finalFieldType(core.String),
    url: dart.finalFieldType(core.Uri),
    [_contentLength]: dart.fieldType(dart.nullable(core.int)),
    [_persistentConnection]: dart.fieldType(core.bool),
    [_followRedirects]: dart.fieldType(core.bool),
    [_maxRedirects]: dart.fieldType(core.int),
    headers: dart.finalFieldType(core.Map$(core.String, core.String)),
    [_finalized]: dart.fieldType(core.bool)
  }));
  dart.setStaticFieldSignature(base_request.BaseRequest, () => ['_tokenRE']);
  dart.defineExtensionMethods(base_request.BaseRequest, ['toString']);
  dart.defineLazy(base_request.BaseRequest, {
    /*base_request.BaseRequest._tokenRE*/get _tokenRE() {
      return core.RegExp.new("^[\\w!#%&'*+\\-.^`|~]+$");
    }
  }, false);
  request$.Request = class Request extends base_request.BaseRequest {
    get contentLength() {
      return this.bodyBytes[$length];
    }
    set contentLength(value) {
      dart.throw(new core.UnsupportedError.new("Cannot set the contentLength property of " + "non-streaming Request objects."));
    }
    get encoding() {
      if (this[_contentType] == null || !dart.nullCheck(this[_contentType]).parameters[$containsKey]("charset")) {
        return this[_defaultEncoding];
      }
      return utils.requiredEncodingForCharset(dart.nullCheck(dart.nullCheck(this[_contentType]).parameters[$_get]("charset")));
    }
    set encoding(value) {
      this[_checkFinalized]();
      this[_defaultEncoding] = value;
      let contentType = this[_contentType];
      if (contentType == null) return;
      this[_contentType] = contentType.change({parameters: new (T$.IdentityMapOfString$String()).from(["charset", value.name])});
    }
    get bodyBytes() {
      return this[_bodyBytes];
    }
    set bodyBytes(value) {
      this[_checkFinalized]();
      this[_bodyBytes] = utils.toUint8List(value);
    }
    get body() {
      return this.encoding.decode(this.bodyBytes);
    }
    set body(value) {
      this.bodyBytes = this.encoding.encode(value);
      let contentType = this[_contentType];
      if (contentType == null) {
        this[_contentType] = new media_type.MediaType.new("text", "plain", new (T$.IdentityMapOfString$String()).from(["charset", this.encoding.name]));
      } else if (!contentType.parameters[$containsKey]("charset")) {
        this[_contentType] = contentType.change({parameters: new (T$.IdentityMapOfString$String()).from(["charset", this.encoding.name])});
      }
    }
    get bodyFields() {
      let contentType = this[_contentType];
      if (contentType == null || contentType.mimeType !== "application/x-www-form-urlencoded") {
        dart.throw(new core.StateError.new("Cannot access the body fields of a Request without " + "content-type \"application/x-www-form-urlencoded\"."));
      }
      return core.Uri.splitQueryString(this.body, {encoding: this.encoding});
    }
    set bodyFields(fields) {
      let contentType = this[_contentType];
      if (contentType == null) {
        this[_contentType] = new media_type.MediaType.new("application", "x-www-form-urlencoded");
      } else if (contentType.mimeType !== "application/x-www-form-urlencoded") {
        dart.throw(new core.StateError.new("Cannot set the body fields of a Request with " + "content-type \"" + contentType.mimeType + "\"."));
      }
      this.body = utils.mapToQuery(fields, {encoding: this.encoding});
    }
    static ['_#new#tearOff'](method, url) {
      return new request$.Request.new(method, url);
    }
    finalize() {
      super.finalize();
      return byte_stream.ByteStream.fromBytes(this.bodyBytes);
    }
    get [_contentType]() {
      let contentType = this.headers[$_get]("content-type");
      if (contentType == null) return null;
      return media_type.MediaType.parse(contentType);
    }
    set [_contentType](value) {
      if (value == null) {
        this.headers[$remove]("content-type");
      } else {
        this.headers[$_set]("content-type", dart.toString(value));
      }
    }
    [_checkFinalized]() {
      if (!this.finalized) return;
      dart.throw(new core.StateError.new("Can't modify a finalized Request."));
    }
  };
  (request$.Request.new = function(method, url) {
    this[_defaultEncoding] = convert.utf8;
    this[_bodyBytes] = _native_typed_data.NativeUint8List.new(0);
    request$.Request.__proto__.new.call(this, method, url);
    ;
  }).prototype = request$.Request.prototype;
  dart.addTypeTests(request$.Request);
  dart.addTypeCaches(request$.Request);
  dart.setMethodSignature(request$.Request, () => ({
    __proto__: dart.getMethods(request$.Request.__proto__),
    [_checkFinalized]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(request$.Request, () => ({
    __proto__: dart.getGetters(request$.Request.__proto__),
    contentLength: core.int,
    encoding: convert.Encoding,
    bodyBytes: typed_data.Uint8List,
    body: core.String,
    bodyFields: core.Map$(core.String, core.String),
    [_contentType]: dart.nullable(media_type.MediaType)
  }));
  dart.setSetterSignature(request$.Request, () => ({
    __proto__: dart.getSetters(request$.Request.__proto__),
    encoding: convert.Encoding,
    bodyBytes: core.List$(core.int),
    body: core.String,
    bodyFields: core.Map$(core.String, core.String),
    [_contentType]: dart.nullable(media_type.MediaType)
  }));
  dart.setLibraryUri(request$.Request, I[68]);
  dart.setFieldSignature(request$.Request, () => ({
    __proto__: dart.getFields(request$.Request.__proto__),
    [_defaultEncoding]: dart.fieldType(convert.Encoding),
    [_bodyBytes]: dart.fieldType(typed_data.Uint8List)
  }));
  var bodyBytes$ = dart.privateName(response$, "Response.bodyBytes");
  var request$0 = dart.privateName(base_response, "BaseResponse.request");
  var statusCode$ = dart.privateName(base_response, "BaseResponse.statusCode");
  var reasonPhrase$ = dart.privateName(base_response, "BaseResponse.reasonPhrase");
  var contentLength$ = dart.privateName(base_response, "BaseResponse.contentLength");
  var headers$ = dart.privateName(base_response, "BaseResponse.headers");
  var isRedirect$ = dart.privateName(base_response, "BaseResponse.isRedirect");
  var persistentConnection$ = dart.privateName(base_response, "BaseResponse.persistentConnection");
  base_response.BaseResponse = class BaseResponse extends core.Object {
    get request() {
      return this[request$0];
    }
    set request(value) {
      super.request = value;
    }
    get statusCode() {
      return this[statusCode$];
    }
    set statusCode(value) {
      super.statusCode = value;
    }
    get reasonPhrase() {
      return this[reasonPhrase$];
    }
    set reasonPhrase(value) {
      super.reasonPhrase = value;
    }
    get contentLength() {
      return this[contentLength$];
    }
    set contentLength(value) {
      super.contentLength = value;
    }
    get headers() {
      return this[headers$];
    }
    set headers(value) {
      super.headers = value;
    }
    get isRedirect() {
      return this[isRedirect$];
    }
    set isRedirect(value) {
      super.isRedirect = value;
    }
    get persistentConnection() {
      return this[persistentConnection$];
    }
    set persistentConnection(value) {
      super.persistentConnection = value;
    }
  };
  (base_response.BaseResponse.new = function(statusCode, opts) {
    let contentLength = opts && 'contentLength' in opts ? opts.contentLength : null;
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[106] || CT.C106;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    this[statusCode$] = statusCode;
    this[contentLength$] = contentLength;
    this[request$0] = request;
    this[headers$] = headers;
    this[isRedirect$] = isRedirect;
    this[persistentConnection$] = persistentConnection;
    this[reasonPhrase$] = reasonPhrase;
    if (this.statusCode < 100) {
      dart.throw(new core.ArgumentError.new("Invalid status code " + dart.str(this.statusCode) + "."));
    } else if (this.contentLength != null && dart.nullCheck(this.contentLength) < 0) {
      dart.throw(new core.ArgumentError.new("Invalid content length " + dart.str(this.contentLength) + "."));
    }
  }).prototype = base_response.BaseResponse.prototype;
  dart.addTypeTests(base_response.BaseResponse);
  dart.addTypeCaches(base_response.BaseResponse);
  dart.setLibraryUri(base_response.BaseResponse, I[69]);
  dart.setFieldSignature(base_response.BaseResponse, () => ({
    __proto__: dart.getFields(base_response.BaseResponse.__proto__),
    request: dart.finalFieldType(dart.nullable(base_request.BaseRequest)),
    statusCode: dart.finalFieldType(core.int),
    reasonPhrase: dart.finalFieldType(dart.nullable(core.String)),
    contentLength: dart.finalFieldType(dart.nullable(core.int)),
    headers: dart.finalFieldType(core.Map$(core.String, core.String)),
    isRedirect: dart.finalFieldType(core.bool),
    persistentConnection: dart.finalFieldType(core.bool)
  }));
  response$.Response = class Response extends base_response.BaseResponse {
    get bodyBytes() {
      return this[bodyBytes$];
    }
    set bodyBytes(value) {
      super.bodyBytes = value;
    }
    get body() {
      return response$._encodingForHeaders(this.headers).decode(this.bodyBytes);
    }
    static ['_#new#tearOff'](body, statusCode, opts) {
      let request = opts && 'request' in opts ? opts.request : null;
      let headers = opts && 'headers' in opts ? opts.headers : C[106] || CT.C106;
      let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
      let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
      let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
      return new response$.Response.new(body, statusCode, {request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    }
    static ['_#bytes#tearOff'](bodyBytes, statusCode, opts) {
      let request = opts && 'request' in opts ? opts.request : null;
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : null;
      let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : null;
      let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
      return new response$.Response.bytes(bodyBytes, statusCode, {request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    }
    static fromStream(response) {
      return async.async(response$.Response, function* fromStream() {
        let body = (yield response.stream.toBytes());
        return new response$.Response.bytes(body, response.statusCode, {request: response.request, headers: response.headers, isRedirect: response.isRedirect, persistentConnection: response.persistentConnection, reasonPhrase: response.reasonPhrase});
      });
    }
  };
  (response$.Response.new = function(body, statusCode, opts) {
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[106] || CT.C106;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    response$.Response.bytes.call(this, response$._encodingForHeaders(headers).encode(body), statusCode, {request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
  }).prototype = response$.Response.prototype;
  (response$.Response.bytes = function(bodyBytes, statusCode, opts) {
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[106] || CT.C106;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    this[bodyBytes$] = utils.toUint8List(bodyBytes);
    response$.Response.__proto__.new.call(this, statusCode, {contentLength: bodyBytes[$length], request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    ;
  }).prototype = response$.Response.prototype;
  dart.addTypeTests(response$.Response);
  dart.addTypeCaches(response$.Response);
  dart.setStaticMethodSignature(response$.Response, () => ['fromStream']);
  dart.setGetterSignature(response$.Response, () => ({
    __proto__: dart.getGetters(response$.Response.__proto__),
    body: core.String
  }));
  dart.setLibraryUri(response$.Response, I[70]);
  dart.setFieldSignature(response$.Response, () => ({
    __proto__: dart.getFields(response$.Response.__proto__),
    bodyBytes: dart.finalFieldType(typed_data.Uint8List)
  }));
  response$._encodingForHeaders = function _encodingForHeaders(headers) {
    return utils.encodingForCharset(response$._contentTypeForHeaders(headers).parameters[$_get]("charset"));
  };
  response$._contentTypeForHeaders = function _contentTypeForHeaders(headers) {
    let contentType = headers[$_get]("content-type");
    if (contentType != null) return media_type.MediaType.parse(contentType);
    return new media_type.MediaType.new("application", "octet-stream");
  };
  var _controller$ = dart.privateName(streamed_request, "_controller");
  streamed_request.StreamedRequest = class StreamedRequest extends base_request.BaseRequest {
    get sink() {
      return this[_controller$].sink;
    }
    static ['_#new#tearOff'](method, url) {
      return new streamed_request.StreamedRequest.new(method, url);
    }
    finalize() {
      super.finalize();
      return new byte_stream.ByteStream.new(this[_controller$].stream);
    }
  };
  (streamed_request.StreamedRequest.new = function(method, url) {
    this[_controller$] = T$.StreamControllerOfListOfint().new({sync: true});
    streamed_request.StreamedRequest.__proto__.new.call(this, method, url);
    ;
  }).prototype = streamed_request.StreamedRequest.prototype;
  dart.addTypeTests(streamed_request.StreamedRequest);
  dart.addTypeCaches(streamed_request.StreamedRequest);
  dart.setGetterSignature(streamed_request.StreamedRequest, () => ({
    __proto__: dart.getGetters(streamed_request.StreamedRequest.__proto__),
    sink: async.EventSink$(core.List$(core.int))
  }));
  dart.setLibraryUri(streamed_request.StreamedRequest, I[71]);
  dart.setFieldSignature(streamed_request.StreamedRequest, () => ({
    __proto__: dart.getFields(streamed_request.StreamedRequest.__proto__),
    [_controller$]: dart.finalFieldType(async.StreamController$(core.List$(core.int)))
  }));
  var _sendUnstreamed = dart.privateName(base_client, "_sendUnstreamed");
  var _checkResponseSuccess = dart.privateName(base_client, "_checkResponseSuccess");
  base_client.BaseClient = class BaseClient extends core.Object {
    head(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return this[_sendUnstreamed]("HEAD", url, headers);
    }
    get(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return this[_sendUnstreamed]("GET", url, headers);
    }
    post(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[_sendUnstreamed]("POST", url, headers, body, encoding);
    }
    put(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[_sendUnstreamed]("PUT", url, headers, body, encoding);
    }
    patch(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[_sendUnstreamed]("PATCH", url, headers, body, encoding);
    }
    delete(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[_sendUnstreamed]("DELETE", url, headers, body, encoding);
    }
    read(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return async.async(core.String, (function* read() {
        let response = (yield this.get(url, {headers: headers}));
        this[_checkResponseSuccess](url, response);
        return response.body;
      }).bind(this));
    }
    readBytes(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return async.async(typed_data.Uint8List, (function* readBytes() {
        let response = (yield this.get(url, {headers: headers}));
        this[_checkResponseSuccess](url, response);
        return response.bodyBytes;
      }).bind(this));
    }
    [_sendUnstreamed](method, url, headers, body = null, encoding = null) {
      return async.async(response$.Response, (function* _sendUnstreamed() {
        let request = new request$.Request.new(method, url);
        if (headers != null) request.headers[$addAll](headers);
        if (encoding != null) request.encoding = encoding;
        if (body != null) {
          if (typeof body == 'string') {
            request.body = body;
          } else if (core.List.is(body)) {
            request.bodyBytes = body[$cast](core.int);
          } else if (core.Map.is(body)) {
            request.bodyFields = body[$cast](core.String, core.String);
          } else {
            dart.throw(new core.ArgumentError.new("Invalid request body \"" + dart.str(body) + "\"."));
          }
        }
        return response$.Response.fromStream(yield this.send(request));
      }).bind(this));
    }
    [_checkResponseSuccess](url, response) {
      if (response.statusCode < 400) return;
      let message = "Request to " + dart.str(url) + " failed with status " + dart.str(response.statusCode);
      if (response.reasonPhrase != null) {
        message = message + ": " + dart.str(response.reasonPhrase);
      }
      dart.throw(new exception.ClientException.new(message + ".", url));
    }
    close() {
    }
  };
  (base_client.BaseClient.new = function() {
    ;
  }).prototype = base_client.BaseClient.prototype;
  dart.addTypeTests(base_client.BaseClient);
  dart.addTypeCaches(base_client.BaseClient);
  base_client.BaseClient[dart.implements] = () => [client$.Client];
  dart.setMethodSignature(base_client.BaseClient, () => ({
    __proto__: dart.getMethods(base_client.BaseClient.__proto__),
    head: dart.fnType(async.Future$(response$.Response), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    get: dart.fnType(async.Future$(response$.Response), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    post: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    put: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    patch: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    delete: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    read: dart.fnType(async.Future$(core.String), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    readBytes: dart.fnType(async.Future$(typed_data.Uint8List), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    [_sendUnstreamed]: dart.fnType(async.Future$(response$.Response), [core.String, core.Uri, dart.nullable(core.Map$(core.String, core.String))], [dart.nullable(core.Object), dart.nullable(convert.Encoding)]),
    [_checkResponseSuccess]: dart.fnType(dart.void, [core.Uri, response$.Response]),
    close: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(base_client.BaseClient, I[72]);
  var Utf8Codec__allowMalformed = dart.privateName(convert, "Utf8Codec._allowMalformed");
  byte_stream.ByteStream = class ByteStream extends async.StreamView$(core.List$(core.int)) {
    static ['_#new#tearOff'](stream) {
      return new byte_stream.ByteStream.new(stream);
    }
    static fromBytes(bytes) {
      return new byte_stream.ByteStream.new(T$.StreamOfListOfint().value(bytes));
    }
    static ['_#fromBytes#tearOff'](bytes) {
      return byte_stream.ByteStream.fromBytes(bytes);
    }
    toBytes() {
      let completer = T$.CompleterOfUint8List().new();
      let sink = new convert._ByteCallbackSink.new(dart.fn(bytes => completer.complete(_native_typed_data.NativeUint8List.fromList(bytes)), T$.ListOfintTovoid()));
      this.listen(T$.ListOfintTovoid().as(dart.bind(sink, 'add')), {onError: dart.bind(completer, 'completeError'), onDone: dart.bind(sink, 'close'), cancelOnError: true});
      return completer.future;
    }
    bytesToString(encoding = C[107] || CT.C107) {
      return encoding.decodeStream(this);
    }
    toStringStream(encoding = C[107] || CT.C107) {
      return encoding.decoder.bind(this);
    }
  };
  (byte_stream.ByteStream.new = function(stream) {
    byte_stream.ByteStream.__proto__.new.call(this, stream);
    ;
  }).prototype = byte_stream.ByteStream.prototype;
  dart.addTypeTests(byte_stream.ByteStream);
  dart.addTypeCaches(byte_stream.ByteStream);
  dart.setMethodSignature(byte_stream.ByteStream, () => ({
    __proto__: dart.getMethods(byte_stream.ByteStream.__proto__),
    toBytes: dart.fnType(async.Future$(typed_data.Uint8List), []),
    bytesToString: dart.fnType(async.Future$(core.String), [], [convert.Encoding]),
    toStringStream: dart.fnType(async.Stream$(core.String), [], [convert.Encoding])
  }));
  dart.setStaticMethodSignature(byte_stream.ByteStream, () => ['fromBytes']);
  dart.setLibraryUri(byte_stream.ByteStream, I[73]);
  var field$ = dart.privateName(multipart_file, "MultipartFile.field");
  var length$ = dart.privateName(multipart_file, "MultipartFile.length");
  var filename$ = dart.privateName(multipart_file, "MultipartFile.filename");
  var contentType$ = dart.privateName(multipart_file, "MultipartFile.contentType");
  var _isFinalized = dart.privateName(multipart_file, "_isFinalized");
  var _stream = dart.privateName(multipart_file, "_stream");
  multipart_file.MultipartFile = class MultipartFile extends core.Object {
    get field() {
      return this[field$];
    }
    set field(value) {
      super.field = value;
    }
    get length() {
      return this[length$];
    }
    set length(value) {
      super.length = value;
    }
    get filename() {
      return this[filename$];
    }
    set filename(value) {
      super.filename = value;
    }
    get contentType() {
      return this[contentType$];
    }
    set contentType(value) {
      super.contentType = value;
    }
    get isFinalized() {
      return this[_isFinalized];
    }
    static ['_#new#tearOff'](field, stream, length, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return new multipart_file.MultipartFile.new(field, stream, length, {filename: filename, contentType: contentType});
    }
    static fromBytes(field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      let stream = byte_stream.ByteStream.fromBytes(value);
      return new multipart_file.MultipartFile.new(field, stream, value[$length], {filename: filename, contentType: contentType});
    }
    static ['_#fromBytes#tearOff'](field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return multipart_file.MultipartFile.fromBytes(field, value, {filename: filename, contentType: contentType});
    }
    static fromString(field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      contentType == null ? contentType = new media_type.MediaType.new("text", "plain") : null;
      let encoding = utils.encodingForCharset(contentType.parameters[$_get]("charset"), convert.utf8);
      contentType = contentType.change({parameters: new (T$.IdentityMapOfString$String()).from(["charset", encoding.name])});
      return multipart_file.MultipartFile.fromBytes(field, encoding.encode(value), {filename: filename, contentType: contentType});
    }
    static ['_#fromString#tearOff'](field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return multipart_file.MultipartFile.fromString(field, value, {filename: filename, contentType: contentType});
    }
    static fromPath(field, filePath, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return multipart_file_stub.multipartFileFromPath(field, filePath, {filename: filename, contentType: contentType});
    }
    finalize() {
      if (this.isFinalized) {
        dart.throw(new core.StateError.new("Can't finalize a finalized MultipartFile."));
      }
      this[_isFinalized] = true;
      return this[_stream];
    }
  };
  (multipart_file.MultipartFile.new = function(field, stream, length, opts) {
    let t61;
    let filename = opts && 'filename' in opts ? opts.filename : null;
    let contentType = opts && 'contentType' in opts ? opts.contentType : null;
    this[_isFinalized] = false;
    this[field$] = field;
    this[length$] = length;
    this[filename$] = filename;
    this[_stream] = utils.toByteStream(stream);
    this[contentType$] = (t61 = contentType, t61 == null ? new media_type.MediaType.new("application", "octet-stream") : t61);
    ;
  }).prototype = multipart_file.MultipartFile.prototype;
  dart.addTypeTests(multipart_file.MultipartFile);
  dart.addTypeCaches(multipart_file.MultipartFile);
  dart.setMethodSignature(multipart_file.MultipartFile, () => ({
    __proto__: dart.getMethods(multipart_file.MultipartFile.__proto__),
    finalize: dart.fnType(byte_stream.ByteStream, [])
  }));
  dart.setStaticMethodSignature(multipart_file.MultipartFile, () => ['fromBytes', 'fromString', 'fromPath']);
  dart.setGetterSignature(multipart_file.MultipartFile, () => ({
    __proto__: dart.getGetters(multipart_file.MultipartFile.__proto__),
    isFinalized: core.bool
  }));
  dart.setLibraryUri(multipart_file.MultipartFile, I[74]);
  dart.setFieldSignature(multipart_file.MultipartFile, () => ({
    __proto__: dart.getFields(multipart_file.MultipartFile.__proto__),
    field: dart.finalFieldType(core.String),
    length: dart.finalFieldType(core.int),
    filename: dart.finalFieldType(dart.nullable(core.String)),
    contentType: dart.finalFieldType(media_type.MediaType),
    [_stream]: dart.finalFieldType(byte_stream.ByteStream),
    [_isFinalized]: dart.fieldType(core.bool)
  }));
  var fields = dart.privateName(multipart_request, "MultipartRequest.fields");
  var files = dart.privateName(multipart_request, "MultipartRequest.files");
  var _headerForField = dart.privateName(multipart_request, "_headerForField");
  var _headerForFile = dart.privateName(multipart_request, "_headerForFile");
  var _boundaryString = dart.privateName(multipart_request, "_boundaryString");
  var _finalize = dart.privateName(multipart_request, "_finalize");
  var _browserEncode = dart.privateName(multipart_request, "_browserEncode");
  multipart_request.MultipartRequest = class MultipartRequest extends base_request.BaseRequest {
    get fields() {
      return this[fields];
    }
    set fields(value) {
      super.fields = value;
    }
    get files() {
      return this[files];
    }
    set files(value) {
      super.files = value;
    }
    static ['_#new#tearOff'](method, url) {
      return new multipart_request.MultipartRequest.new(method, url);
    }
    get contentLength() {
      let length = 0;
      this.fields[$forEach](dart.fn((name, value) => {
        length = length + ("--".length + 70 + "\r\n".length + convert.utf8.encode(this[_headerForField](name, value))[$length] + convert.utf8.encode(value)[$length] + "\r\n".length);
      }, T$.StringAndStringTovoid()));
      for (let file of this.files) {
        length = length + ("--".length + 70 + "\r\n".length + convert.utf8.encode(this[_headerForFile](file))[$length] + file.length + "\r\n".length);
      }
      return length + "--".length + 70 + "--\r\n".length;
    }
    set contentLength(value) {
      dart.throw(new core.UnsupportedError.new("Cannot set the contentLength property of " + "multipart requests."));
    }
    finalize() {
      let boundary = this[_boundaryString]();
      this.headers[$_set]("content-type", "multipart/form-data; boundary=" + boundary);
      super.finalize();
      return new byte_stream.ByteStream.new(this[_finalize](boundary));
    }
    [_finalize](boundary) {
      return new (T$._AsyncStarImplOfListOfint()).new((function* _finalize(stream) {
        let line = C[108] || CT.C108;
        let separator = convert.utf8.encode("--" + boundary + "\r\n");
        let close = convert.utf8.encode("--" + boundary + "--\r\n");
        for (let field of this.fields[$entries]) {
          if (stream.add(separator)) return;
          yield;
          if (stream.add(convert.utf8.encode(this[_headerForField](field.key, field.value)))) return;
          yield;
          if (stream.add(convert.utf8.encode(field.value))) return;
          yield;
          if (stream.add(line)) return;
          yield;
        }
        for (let file of this.files) {
          if (stream.add(separator)) return;
          yield;
          if (stream.add(convert.utf8.encode(this[_headerForFile](file)))) return;
          yield;
          if (stream.addStream(file.finalize())) return;
          yield;
          if (stream.add(line)) return;
          yield;
        }
        if (stream.add(close)) return;
        yield;
      }).bind(this)).stream;
    }
    [_headerForField](name, value) {
      let header = "content-disposition: form-data; name=\"" + this[_browserEncode](name) + "\"";
      if (!utils.isPlainAscii(value)) {
        header = header + "\r\n" + "content-type: text/plain; charset=utf-8\r\n" + "content-transfer-encoding: binary";
      }
      return header + "\r\n\r\n";
    }
    [_headerForFile](file) {
      let header = "content-type: " + dart.str(file.contentType) + "\r\n" + "content-disposition: form-data; name=\"" + this[_browserEncode](file.field) + "\"";
      if (file.filename != null) {
        header = header + "; filename=\"" + this[_browserEncode](dart.nullCheck(file.filename)) + "\"";
      }
      return header + "\r\n\r\n";
    }
    [_browserEncode](value) {
      return value[$replaceAll](multipart_request._newlineRegExp, "%0D%0A")[$replaceAll]("\"", "%22");
    }
    [_boundaryString]() {
      let prefix = "dart-http-boundary-";
      let list = T$.ListOfint().generate(70 - prefix.length, dart.fn(index => boundary_characters.boundaryCharacters[$_get](multipart_request.MultipartRequest._random.nextInt(boundary_characters.boundaryCharacters[$length])), T$.intToint()), {growable: false});
      return prefix + core.String.fromCharCodes(list);
    }
  };
  (multipart_request.MultipartRequest.new = function(method, url) {
    this[fields] = new (T$.IdentityMapOfString$String()).new();
    this[files] = T$.JSArrayOfMultipartFile().of([]);
    multipart_request.MultipartRequest.__proto__.new.call(this, method, url);
    ;
  }).prototype = multipart_request.MultipartRequest.prototype;
  dart.addTypeTests(multipart_request.MultipartRequest);
  dart.addTypeCaches(multipart_request.MultipartRequest);
  dart.setMethodSignature(multipart_request.MultipartRequest, () => ({
    __proto__: dart.getMethods(multipart_request.MultipartRequest.__proto__),
    [_finalize]: dart.fnType(async.Stream$(core.List$(core.int)), [core.String]),
    [_headerForField]: dart.fnType(core.String, [core.String, core.String]),
    [_headerForFile]: dart.fnType(core.String, [multipart_file.MultipartFile]),
    [_browserEncode]: dart.fnType(core.String, [core.String]),
    [_boundaryString]: dart.fnType(core.String, [])
  }));
  dart.setGetterSignature(multipart_request.MultipartRequest, () => ({
    __proto__: dart.getGetters(multipart_request.MultipartRequest.__proto__),
    contentLength: core.int
  }));
  dart.setLibraryUri(multipart_request.MultipartRequest, I[75]);
  dart.setFieldSignature(multipart_request.MultipartRequest, () => ({
    __proto__: dart.getFields(multipart_request.MultipartRequest.__proto__),
    fields: dart.finalFieldType(core.Map$(core.String, core.String)),
    files: dart.finalFieldType(core.List$(multipart_file.MultipartFile))
  }));
  dart.setStaticFieldSignature(multipart_request.MultipartRequest, () => ['_boundaryLength', '_random']);
  dart.defineLazy(multipart_request.MultipartRequest, {
    /*multipart_request.MultipartRequest._boundaryLength*/get _boundaryLength() {
      return 70;
    },
    /*multipart_request.MultipartRequest._random*/get _random() {
      return math.Random.new();
    }
  }, false);
  dart.defineLazy(multipart_request, {
    /*multipart_request._newlineRegExp*/get _newlineRegExp() {
      return core.RegExp.new("\\r\\n|\\r|\\n");
    }
  }, false);
  var stream$ = dart.privateName(streamed_response, "StreamedResponse.stream");
  streamed_response.StreamedResponse = class StreamedResponse extends base_response.BaseResponse {
    get stream() {
      return this[stream$];
    }
    set stream(value) {
      super.stream = value;
    }
    static ['_#new#tearOff'](stream, statusCode, opts) {
      let contentLength = opts && 'contentLength' in opts ? opts.contentLength : null;
      let request = opts && 'request' in opts ? opts.request : null;
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : null;
      let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : null;
      let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
      return new streamed_response.StreamedResponse.new(stream, statusCode, {contentLength: contentLength, request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    }
  };
  (streamed_response.StreamedResponse.new = function(stream, statusCode, opts) {
    let contentLength = opts && 'contentLength' in opts ? opts.contentLength : null;
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[106] || CT.C106;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    this[stream$] = utils.toByteStream(stream);
    streamed_response.StreamedResponse.__proto__.new.call(this, statusCode, {contentLength: contentLength, request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    ;
  }).prototype = streamed_response.StreamedResponse.prototype;
  dart.addTypeTests(streamed_response.StreamedResponse);
  dart.addTypeCaches(streamed_response.StreamedResponse);
  dart.setLibraryUri(streamed_response.StreamedResponse, I[76]);
  dart.setFieldSignature(streamed_response.StreamedResponse, () => ({
    __proto__: dart.getFields(streamed_response.StreamedResponse.__proto__),
    stream: dart.finalFieldType(byte_stream.ByteStream)
  }));
  dart.defineLazy(colors$1, {
    /*colors$1.cRed*/get cRed() {
      return C[9] || CT.C9;
    },
    /*colors$1.cBlue*/get cBlue() {
      return C[10] || CT.C10;
    },
    /*colors$1.cGreen*/get cGreen() {
      return C[22] || CT.C22;
    },
    /*colors$1.cYellow*/get cYellow() {
      return C[23] || CT.C23;
    },
    /*colors$1.cGrey*/get cGrey() {
      return C[35] || CT.C35;
    },
    /*colors$1.cWhite*/get cWhite() {
      return C[36] || CT.C36;
    },
    /*colors$1.cBlack*/get cBlack() {
      return C[37] || CT.C37;
    },
    /*colors$1.cTransparent*/get cTransparent() {
      return C[38] || CT.C38;
    },
    /*colors$1.cPrimer*/get cPrimer() {
      return C[39] || CT.C39;
    },
    /*colors$1.cSecond*/get cSecond() {
      return C[40] || CT.C40;
    },
    /*colors$1.cTx1*/get cTx1() {
      return C[37] || CT.C37;
    },
    /*colors$1.cTx2*/get cTx2() {
      return C[41] || CT.C41;
    },
    /*colors$1.cBg1*/get cBg1() {
      return colors.Colors.grey.shade300;
    },
    set cBg1(value) {},
    /*colors$1.cBg2*/get cBg2() {
      return C[42] || CT.C42;
    },
    /*colors$1.cStroke1*/get cStroke1() {
      return C[37] || CT.C37;
    },
    /*colors$1.cElement1*/get cElement1() {
      return C[43] || CT.C43;
    },
    /*colors$1.cBSPrimary*/get cBSPrimary() {
      return C[44] || CT.C44;
    },
    /*colors$1.cBSSecondary*/get cBSSecondary() {
      return C[45] || CT.C45;
    },
    /*colors$1.cBSSuccess*/get cBSSuccess() {
      return C[46] || CT.C46;
    },
    /*colors$1.cBSDanger*/get cBSDanger() {
      return C[47] || CT.C47;
    },
    /*colors$1.cBSWarning*/get cBSWarning() {
      return C[48] || CT.C48;
    },
    /*colors$1.cBSInfo*/get cBSInfo() {
      return C[49] || CT.C49;
    },
    /*colors$1.cBSLight*/get cBSLight() {
      return C[50] || CT.C50;
    },
    /*colors$1.cBSDark*/get cBSDark() {
      return C[51] || CT.C51;
    },
    /*colors$1.cBSDefault*/get cBSDefault() {
      return C[52] || CT.C52;
    },
    /*colors$1.cGradientPrim*/get cGradientPrim() {
      return C[53] || CT.C53;
    },
    /*colors$1.cGradientSec*/get cGradientSec() {
      return C[58] || CT.C58;
    },
    /*colors$1.cGradientBox*/get cGradientBox() {
      return C[62] || CT.C62;
    }
  }, false);
  dart.defineLazy(keys$, {
    /*keys$.API_KEY*/get API_KEY() {
      return "AIzaSyClb4GDpsXDFSvWumM4vyFj7dMT2ShTWak";
    }
  }, false);
  dart.defineLazy(paths$, {
    /*paths$._iconBase*/get _iconBase() {
      return "lib/assets/icons";
    },
    /*paths$.pathSvgMenu*/get pathSvgMenu() {
      return "lib/assets/icons/menu.svg";
    },
    /*paths$._imageBase*/get _imageBase() {
      return "lib/assets/images";
    },
    /*paths$.pathImgNoImage*/get pathImgNoImage() {
      return "lib/assets/images" + "/noimage.jpg";
    },
    /*paths$.pathSvgNoImage*/get pathSvgNoImage() {
      return "lib/assets/images" + "/file.svg";
    }
  }, false);
  styles$.outlineInputBorder = function outlineInputBorder$() {
    return new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(15), borderSide: C[67] || CT.C67});
  };
  dart.defineLazy(styles$, {
    /*styles$.kDefaultShadow*/get kDefaultShadow() {
      return C[69] || CT.C69;
    },
    /*styles$.kTextStyle*/get kTextStyle() {
      return C[73] || CT.C73;
    },
    /*styles$.kHeadingStyle*/get kHeadingStyle() {
      return new text_style.TextStyle.new({fontSize: 21, fontWeight: ui.FontWeight.bold, color: colors.Colors.black, height: 1.5});
    },
    /*styles$.otpInputDecoration*/get otpInputDecoration() {
      return new input_decorator.InputDecoration.new({contentPadding: C[75] || CT.C75, border: styles$.outlineInputBorder(), focusedBorder: styles$.outlineInputBorder(), enabledBorder: styles$.outlineInputBorder()});
    }
  }, false);
  themes$.Themes = class Themes extends core.Object {
    static ['_#new#tearOff']() {
      return new themes$.Themes.new();
    }
  };
  (themes$.Themes.new = function() {
    ;
  }).prototype = themes$.Themes.prototype;
  dart.addTypeTests(themes$.Themes);
  dart.addTypeCaches(themes$.Themes);
  dart.setLibraryUri(themes$.Themes, I[77]);
  dart.setStaticFieldSignature(themes$.Themes, () => ['light', 'dark']);
  dart.defineLazy(themes$.Themes, {
    /*themes$.Themes.light*/get light() {
      return theme_data.ThemeData.new({colorScheme: new color_scheme.ColorScheme.light({background: colors$1.cBg1, primary: colors$1.cWhite, secondary: colors$1.cSecond, inversePrimary: colors$1.cPrimer}), primarySwatch: colors.Colors.brown, brightness: ui.Brightness.light, primaryIconTheme: new icon_theme_data.IconThemeData.new({color: colors$1.cWhite}), fontFamily: "Poppins", appBarTheme: new app_bar_theme.AppBarTheme.new({backgroundColor: colors$1.cPrimer})});
    },
    /*themes$.Themes.dark*/get dark() {
      return theme_data.ThemeData.new({colorScheme: new color_scheme.ColorScheme.light({background: colors.Colors.grey.shade300, primary: colors$1.cWhite, secondary: colors$1.cSecond, inversePrimary: colors$1.cPrimer}), primaryColor: colors$1.cGrey, brightness: ui.Brightness.dark, fontFamily: "Poppins"});
    }
  }, false);
  dart.copyProperties(themes$, {
    get myLinkText() {
      return new text_style.TextStyle.new({fontFamily: "Poppins", fontSize: 14, color: colors$1.cYellow});
    },
    get myLinkText2() {
      return new text_style.TextStyle.new({fontFamily: "Poppins", fontSize: 14, color: colors$1.cBlue, decoration: ui.TextDecoration.underline, decorationStyle: ui.TextDecorationStyle.double});
    }
  });
  dart.defineLazy(variables$, {
    /*variables$.dbName*/get dbName() {
      return "dbName.db";
    },
    /*variables$.APP_NAME*/get APP_NAME() {
      return "KAMSYA";
    },
    /*variables$.APP_DESC*/get APP_DESC() {
      return "POS Kambingnya Abu Rasya";
    },
    /*variables$.TAG_LINE*/get TAG_LINE() {
      return "InshaAllah Barokah";
    },
    /*variables$.WA_ADMIN*/get WA_ADMIN() {
      return "08123456789";
    },
    /*variables$.APP_VERSI*/get APP_VERSI() {
      return "2.2111.6";
    },
    /*variables$.BASE_URL*/get BASE_URL() {
      return "http://10.0.2.2:8000/api/";
    },
    /*variables$.API_URL_1*/get API_URL_1() {
      return "https://fakestoreapi.com/";
    },
    /*variables$.kDefaultPadding*/get kDefaultPadding() {
      return 20;
    },
    /*variables$.kMobileWidth*/get kMobileWidth() {
      return 600;
    },
    /*variables$.kTabletWdth*/get kTabletWdth() {
      return 1200;
    },
    /*variables$.kTabletBreakpointWidth*/get kTabletBreakpointWidth() {
      return 768;
    },
    /*variables$.kDesktopBreakpointWidth*/get kDesktopBreakpointWidth() {
      return 1440;
    },
    /*variables$.kSideMenuWidth*/get kSideMenuWidth() {
      return 300;
    },
    /*variables$.kNavigationRailWidth*/get kNavigationRailWidth() {
      return 72;
    },
    /*variables$.TIME_OUT_DURATION*/get TIME_OUT_DURATION() {
      return 30;
    },
    /*variables$.kAnimationDuration*/get kAnimationDuration() {
      return C[76] || CT.C76;
    },
    /*variables$.kDefaultDuration*/get kDefaultDuration() {
      return C[77] || CT.C77;
    },
    /*variables$.tableCategoryName*/get tableCategoryName() {
      return "Category";
    },
    /*variables$.colMainCategoryId*/get colMainCategoryId() {
      return "ID";
    },
    /*variables$.colMainCategoryName*/get colMainCategoryName() {
      return "Name";
    },
    /*variables$.colMainCategoryImage*/get colMainCategoryImage() {
      return "Image";
    },
    /*variables$.tableQuestionName*/get tableQuestionName() {
      return "Question";
    },
    /*variables$.colQuestionId*/get colQuestionId() {
      return "ID";
    },
    /*variables$.colQuestionText*/get colQuestionText() {
      return "QuestionText";
    },
    /*variables$.colQuestionIsImage*/get colQuestionIsImage() {
      return "IsImageQuestion";
    },
    /*variables$.colQuestionImage*/get colQuestionImage() {
      return "QuestionImage";
    },
    /*variables$.colQuestionAnswerA*/get colQuestionAnswerA() {
      return "AnswerA";
    },
    /*variables$.colQuestionAnswerB*/get colQuestionAnswerB() {
      return "AnswerB";
    },
    /*variables$.colQuestionAnswerC*/get colQuestionAnswerC() {
      return "AnswerC";
    },
    /*variables$.colQuestionAnswerD*/get colQuestionAnswerD() {
      return "AnswerD";
    },
    /*variables$.colQuestionCorrectAnswer*/get colQuestionCorrectAnswer() {
      return "CorrectAnswer";
    },
    /*variables$.colQuestionCategoryId*/get colQuestionCategoryId() {
      return "CategoryID";
    },
    /*variables$.sSuccess*/get sSuccess() {
      return "Great";
    },
    /*variables$.sFail*/get sFail() {
      return "Failed";
    },
    /*variables$.sError*/get sError() {
      return "Eror";
    },
    /*variables$.sMsgSuccessExecution*/get sMsgSuccessExecution() {
      return "Process sucessfully executed";
    },
    /*variables$.sMsgSuccessAddData*/get sMsgSuccessAddData() {
      return "New data sucessfully added";
    },
    /*variables$.sMsgSuccessUpdateData*/get sMsgSuccessUpdateData() {
      return "Data sucessfully updated";
    },
    /*variables$.sMsgSuccessDeleteData*/get sMsgSuccessDeleteData() {
      return "Data sucessfully deleted";
    },
    /*variables$.sMsgFailExecution*/get sMsgFailExecution() {
      return "Process failed to be executed";
    },
    /*variables$.sMsgFailAddData*/get sMsgFailAddData() {
      return "New data failed to be added";
    },
    /*variables$.sMsgFailUpdateData*/get sMsgFailUpdateData() {
      return "Data failed to be updated";
    },
    /*variables$.sMsgFailDeleteData*/get sMsgFailDeleteData() {
      return "Data failed to be deleted";
    },
    /*variables$.sAuthFail*/get sAuthFail() {
      return "User ID is not registered, or Wrong Password!";
    },
    /*variables$.kEmailValidatorRegExp*/get kEmailValidatorRegExp() {
      return core.RegExp.new("^[a-zA-Z0-9.]+@[a-zA-Z0-9]+\\.[a-zA-Z]+");
    },
    /*variables$.kUserNullError*/get kUserNullError() {
      return "Please Enter your User ID";
    },
    /*variables$.kPassNullError*/get kPassNullError() {
      return "Please Enter your Password";
    },
    /*variables$.kEmailNullError*/get kEmailNullError() {
      return "Please Enter Valid Email";
    },
    /*variables$.kInvalidEmailError*/get kInvalidEmailError() {
      return "Please Enter Valid Email";
    },
    /*variables$.kFieldNullError*/get kFieldNullError() {
      return "The field cannot be empty";
    },
    /*variables$.kShortPassError*/get kShortPassError() {
      return "Password is too short";
    },
    /*variables$.kMatchPassError*/get kMatchPassError() {
      return "Passwords doesn't match";
    },
    /*variables$.kNamelNullError*/get kNamelNullError() {
      return "Please Enter your name";
    },
    /*variables$.kPhoneNumberNullError*/get kPhoneNumberNullError() {
      return "Please Enter your phone number";
    },
    /*variables$.kAddressNullError*/get kAddressNullError() {
      return "Please Enter your address";
    }
  }, false);
  var withCredentials = dart.privateName(browser_client, "BrowserClient.withCredentials");
  var _xhrs = dart.privateName(browser_client, "_xhrs");
  var _isClosed = dart.privateName(browser_client, "_isClosed");
  browser_client.BrowserClient = class BrowserClient extends base_client.BaseClient {
    get withCredentials() {
      return this[withCredentials];
    }
    set withCredentials(value) {
      this[withCredentials] = value;
    }
    send(request) {
      return async.async(streamed_response.StreamedResponse, (function* send() {
        let t61;
        if (this[_isClosed]) {
          dart.throw(new exception.ClientException.new("HTTP request failed. Client is already closed.", request.url));
        }
        let bytes = (yield request.finalize().toBytes());
        let xhr = html.HttpRequest.new();
        this[_xhrs].add(xhr);
        t61 = xhr;
        (() => {
          t61.open(request.method, dart.str(request.url), {async: true});
          t61[$responseType] = "arraybuffer";
          t61.withCredentials = this.withCredentials;
          return t61;
        })();
        request.headers[$forEach](dart.bind(xhr, 'setRequestHeader'));
        let completer = T$.CompleterOfStreamedResponse().new();
        async.unawaited(xhr[$onLoad].first.then(dart.void, dart.fn(_ => {
          let body = typed_data.ByteBuffer.as(xhr[$response])[$asUint8List]();
          completer.complete(new streamed_response.StreamedResponse.new(byte_stream.ByteStream.fromBytes(body), dart.nullCheck(xhr.status), {contentLength: body[$length], request: request, headers: xhr[$responseHeaders], reasonPhrase: xhr.statusText}));
        }, T$.ProgressEventToNull())));
        async.unawaited(xhr[$onError].first.then(dart.void, dart.fn(_ => {
          completer.completeError(new exception.ClientException.new("XMLHttpRequest error.", request.url), core.StackTrace.current);
        }, T$.ProgressEventToNull())));
        xhr.send(bytes);
        try {
          return yield completer.future;
        } finally {
          this[_xhrs].remove(xhr);
        }
      }).bind(this));
    }
    close() {
      this[_isClosed] = true;
      for (let xhr of this[_xhrs]) {
        xhr.abort();
      }
      this[_xhrs].clear();
    }
    static ['_#new#tearOff']() {
      return new browser_client.BrowserClient.new();
    }
  };
  (browser_client.BrowserClient.new = function() {
    this[_xhrs] = T$.LinkedHashSetOfHttpRequest().new();
    this[withCredentials] = false;
    this[_isClosed] = false;
    ;
  }).prototype = browser_client.BrowserClient.prototype;
  dart.addTypeTests(browser_client.BrowserClient);
  dart.addTypeCaches(browser_client.BrowserClient);
  dart.setMethodSignature(browser_client.BrowserClient, () => ({
    __proto__: dart.getMethods(browser_client.BrowserClient.__proto__),
    send: dart.fnType(async.Future$(streamed_response.StreamedResponse), [base_request.BaseRequest])
  }));
  dart.setLibraryUri(browser_client.BrowserClient, I[78]);
  dart.setFieldSignature(browser_client.BrowserClient, () => ({
    __proto__: dart.getFields(browser_client.BrowserClient.__proto__),
    [_xhrs]: dart.finalFieldType(core.Set$(html.HttpRequest)),
    withCredentials: dart.fieldType(core.bool),
    [_isClosed]: dart.fieldType(core.bool)
  }));
  browser_client.createClient = function createClient() {
    ;
    return new browser_client.BrowserClient.new();
  };
  var Latin1Codec__allowInvalid = dart.privateName(convert, "Latin1Codec._allowInvalid");
  utils.mapToQuery = function mapToQuery(map, opts) {
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    let pairs = T$.JSArrayOfListOfString().of([]);
    map[$forEach](dart.fn((key, value) => {
      let t61, t61$;
      return pairs[$add](T$.JSArrayOfString().of([core.Uri.encodeQueryComponent(key, {encoding: (t61 = encoding, t61 == null ? convert.utf8 : t61)}), core.Uri.encodeQueryComponent(value, {encoding: (t61$ = encoding, t61$ == null ? convert.utf8 : t61$)})]));
    }, T$.StringAndStringTovoid()));
    return pairs[$map](core.String, dart.fn(pair => pair[$_get](0) + "=" + pair[$_get](1), T$.ListOfStringToString()))[$join]("&");
  };
  utils.encodingForCharset = function encodingForCharset(charset, fallback = C[109] || CT.C109) {
    let t61;
    if (charset == null) return fallback;
    t61 = convert.Encoding.getByName(charset);
    return t61 == null ? fallback : t61;
  };
  utils.requiredEncodingForCharset = function requiredEncodingForCharset(charset) {
    let t61;
    t61 = convert.Encoding.getByName(charset);
    return t61 == null ? dart.throw(new core.FormatException.new("Unsupported encoding \"" + charset + "\".")) : t61;
  };
  utils.isPlainAscii = function isPlainAscii(string) {
    return utils._asciiOnly.hasMatch(string);
  };
  utils.toUint8List = function toUint8List(input) {
    if (typed_data.Uint8List.is(input)) return input;
    if (typed_data.TypedData.is(input)) {
      return typed_data.Uint8List.view(typed_data.TypedData.as(input)[$buffer]);
    }
    return _native_typed_data.NativeUint8List.fromList(input);
  };
  utils.toByteStream = function toByteStream(stream) {
    if (byte_stream.ByteStream.is(stream)) return stream;
    return new byte_stream.ByteStream.new(stream);
  };
  utils.onDone = function onDone(T, stream, onDone) {
    return stream.transform(T, new (async._StreamHandlerTransformer$(T, T)).new({handleDone: dart.fn(sink => {
        sink.close();
        onDone();
      }, dart.fnType(dart.void, [async.EventSink$(T)]))}));
  };
  dart.defineLazy(utils, {
    /*utils._asciiOnly*/get _asciiOnly() {
      return core.RegExp.new("^[\\x00-\\x7F]+$");
    }
  }, false);
  multipart_file_stub.multipartFileFromPath = function multipartFileFromPath(field, filePath, opts) {
    let filename = opts && 'filename' in opts ? opts.filename : null;
    let contentType = opts && 'contentType' in opts ? opts.contentType : null;
    return dart.throw(new core.UnsupportedError.new("MultipartFile is only supported where dart:io is available."));
  };
  dart.defineLazy(boundary_characters, {
    /*boundary_characters.boundaryCharacters*/get boundaryCharacters() {
      return C[110] || CT.C110;
    }
  }, false);
  var scheme$ = dart.privateName(authentication_challenge, "AuthenticationChallenge.scheme");
  var parameters$ = dart.privateName(authentication_challenge, "AuthenticationChallenge.parameters");
  authentication_challenge.AuthenticationChallenge = class AuthenticationChallenge extends core.Object {
    get scheme() {
      return this[scheme$];
    }
    set scheme(value) {
      super.scheme = value;
    }
    get parameters() {
      return this[parameters$];
    }
    set parameters(value) {
      super.parameters = value;
    }
    static parseHeader(header) {
      return utils$.wrapFormatException(T$.ListOfAuthenticationChallenge(), "authentication header", header, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(header);
        scanner.scan(scan.whitespace);
        let challenges = scan.parseList(authentication_challenge.AuthenticationChallenge, scanner, dart.fn(() => {
          let scheme = authentication_challenge.AuthenticationChallenge._scanScheme(scanner, {whitespaceName: "\" \" or \"=\""});
          let params = new (T$.IdentityMapOfString$String()).new();
          while (scanner.scan(",")) {
            scanner.scan(scan.whitespace);
          }
          authentication_challenge.AuthenticationChallenge._scanAuthParam(scanner, params);
          let beforeComma = scanner.position;
          while (scanner.scan(",")) {
            scanner.scan(scan.whitespace);
            if (scanner.matches(",") || scanner.isDone) continue;
            scanner.expect(scan.token, {name: "a token"});
            let name = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
            scanner.scan(scan.whitespace);
            if (!scanner.scan("=")) {
              scanner.position = beforeComma;
              break;
            }
            scanner.scan(scan.whitespace);
            if (scanner.scan(scan.token)) {
              params[$_set](name, dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)));
            } else {
              params[$_set](name, scan.expectQuotedString(scanner, {name: "a token or a quoted string"}));
            }
            scanner.scan(scan.whitespace);
            beforeComma = scanner.position;
          }
          return new authentication_challenge.AuthenticationChallenge.new(scheme, params);
        }, T$.VoidToAuthenticationChallenge()));
        scanner.expectDone();
        return challenges;
      }, T$.VoidToListOfAuthenticationChallenge()));
    }
    static parse(challenge) {
      return utils$.wrapFormatException(authentication_challenge.AuthenticationChallenge, "authentication challenge", challenge, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(challenge);
        scanner.scan(scan.whitespace);
        let scheme = authentication_challenge.AuthenticationChallenge._scanScheme(scanner);
        let params = new (T$.IdentityMapOfString$String()).new();
        scan.parseList(dart.void, scanner, dart.fn(() => authentication_challenge.AuthenticationChallenge._scanAuthParam(scanner, params), T$.VoidTovoid()));
        scanner.expectDone();
        return new authentication_challenge.AuthenticationChallenge.new(scheme, params);
      }, T$.VoidToAuthenticationChallenge()));
    }
    static ['_#parse#tearOff'](challenge) {
      return authentication_challenge.AuthenticationChallenge.parse(challenge);
    }
    static _scanScheme(scanner, opts) {
      let whitespaceName = opts && 'whitespaceName' in opts ? opts.whitespaceName : null;
      scanner.expect(scan.token, {name: "a token"});
      let scheme = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))[$toLowerCase]();
      scanner.scan(scan.whitespace);
      if (scanner.lastMatch == null || !dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))[$contains](" ")) {
        scanner.expect(" ", {name: whitespaceName});
      }
      return scheme;
    }
    static _scanAuthParam(scanner, params) {
      scanner.expect(scan.token, {name: "a token"});
      let name = dart.nullCheck(scanner.lastMatch)._get(0);
      scanner.scan(scan.whitespace);
      scanner.expect("=");
      scanner.scan(scan.whitespace);
      if (scanner.scan(scan.token)) {
        params[$_set](name, dart.nullCheck(scanner.lastMatch)._get(0));
      } else {
        params[$_set](name, scan.expectQuotedString(scanner, {name: "a token or a quoted string"}));
      }
      scanner.scan(scan.whitespace);
    }
    static ['_#new#tearOff'](scheme, parameters) {
      return new authentication_challenge.AuthenticationChallenge.new(scheme, parameters);
    }
  };
  (authentication_challenge.AuthenticationChallenge.new = function(scheme, parameters) {
    this[scheme$] = scheme;
    this[parameters$] = new (T$.UnmodifiableMapViewOfString$String()).new(new (T$.CaseInsensitiveMapOfString()).from(parameters));
    ;
  }).prototype = authentication_challenge.AuthenticationChallenge.prototype;
  dart.addTypeTests(authentication_challenge.AuthenticationChallenge);
  dart.addTypeCaches(authentication_challenge.AuthenticationChallenge);
  dart.setStaticMethodSignature(authentication_challenge.AuthenticationChallenge, () => ['parseHeader', 'parse', '_scanScheme', '_scanAuthParam']);
  dart.setLibraryUri(authentication_challenge.AuthenticationChallenge, I[79]);
  dart.setFieldSignature(authentication_challenge.AuthenticationChallenge, () => ({
    __proto__: dart.getFields(authentication_challenge.AuthenticationChallenge.__proto__),
    scheme: dart.finalFieldType(core.String),
    parameters: dart.finalFieldType(core.Map$(core.String, core.String))
  }));
  const _is_CaseInsensitiveMap_default = Symbol('_is_CaseInsensitiveMap_default');
  case_insensitive_map.CaseInsensitiveMap$ = dart.generic(V => {
    class CaseInsensitiveMap extends canonicalized_map.CanonicalizedMap$(core.String, core.String, V) {
      static ['_#new#tearOff'](V) {
        return new (case_insensitive_map.CaseInsensitiveMap$(V)).new();
      }
      static ['_#from#tearOff'](V, other) {
        return new (case_insensitive_map.CaseInsensitiveMap$(V)).from(other);
      }
    }
    (CaseInsensitiveMap.new = function() {
      CaseInsensitiveMap.__proto__.new.call(this, dart.fn(key => key[$toLowerCase](), T$.StringToString()));
      ;
    }).prototype = CaseInsensitiveMap.prototype;
    (CaseInsensitiveMap.from = function(other) {
      CaseInsensitiveMap.__proto__.from.call(this, other, dart.fn(key => key[$toLowerCase](), T$.StringToString()));
      ;
    }).prototype = CaseInsensitiveMap.prototype;
    dart.addTypeTests(CaseInsensitiveMap);
    CaseInsensitiveMap.prototype[_is_CaseInsensitiveMap_default] = true;
    dart.addTypeCaches(CaseInsensitiveMap);
    dart.setLibraryUri(CaseInsensitiveMap, I[80]);
    return CaseInsensitiveMap;
  });
  case_insensitive_map.CaseInsensitiveMap = case_insensitive_map.CaseInsensitiveMap$();
  dart.addTypeTests(case_insensitive_map.CaseInsensitiveMap, _is_CaseInsensitiveMap_default);
  chunked_coding.ChunkedCodingCodec = class ChunkedCodingCodec extends convert.Codec$(core.List$(core.int), core.List$(core.int)) {
    get encoder() {
      return encoder.chunkedCodingEncoder;
    }
    get decoder() {
      return decoder.chunkedCodingDecoder;
    }
    static ['_#_#tearOff']() {
      return new chunked_coding.ChunkedCodingCodec.__();
    }
  };
  (chunked_coding.ChunkedCodingCodec.__ = function() {
    chunked_coding.ChunkedCodingCodec.__proto__.new.call(this);
    ;
  }).prototype = chunked_coding.ChunkedCodingCodec.prototype;
  dart.addTypeTests(chunked_coding.ChunkedCodingCodec);
  dart.addTypeCaches(chunked_coding.ChunkedCodingCodec);
  dart.setGetterSignature(chunked_coding.ChunkedCodingCodec, () => ({
    __proto__: dart.getGetters(chunked_coding.ChunkedCodingCodec.__proto__),
    encoder: encoder.ChunkedCodingEncoder,
    decoder: decoder.ChunkedCodingDecoder
  }));
  dart.setLibraryUri(chunked_coding.ChunkedCodingCodec, I[81]);
  dart.defineLazy(chunked_coding, {
    /*chunked_coding.chunkedCoding*/get chunkedCoding() {
      return C[111] || CT.C111;
    }
  }, false);
  http_date.formatHttpDate = function formatHttpDate(date) {
    let t61;
    date = date.toUtc();
    let buffer = (t61 = new core.StringBuffer.new(), (() => {
      t61.write(http_date._weekdays[$_get](date.weekday - 1));
      t61.write(", ");
      t61.write(date.day <= 9 ? "0" : "");
      t61.write(date.day[$toString]());
      t61.write(" ");
      t61.write(http_date._months[$_get](date.month - 1));
      t61.write(" ");
      t61.write(date.year[$toString]());
      t61.write(date.hour <= 9 ? " 0" : " ");
      t61.write(date.hour[$toString]());
      t61.write(date.minute <= 9 ? ":0" : ":");
      t61.write(date.minute[$toString]());
      t61.write(date.second <= 9 ? ":0" : ":");
      t61.write(date.second[$toString]());
      t61.write(" GMT");
      return t61;
    })());
    return buffer.toString();
  };
  http_date.parseHttpDate = function parseHttpDate(date) {
    return utils$.wrapFormatException(core.DateTime, "HTTP date", date, dart.fn(() => {
      let scanner = new string_scanner.StringScanner.new(date);
      if (scanner.scan(http_date._longWeekdayRegExp)) {
        scanner.expect(", ");
        let day = http_date._parseInt(scanner, 2);
        scanner.expect("-");
        let month = http_date._parseMonth(scanner);
        scanner.expect("-");
        let year = 1900 + http_date._parseInt(scanner, 2);
        scanner.expect(" ");
        let time = http_date._parseTime(scanner);
        scanner.expect(" GMT");
        scanner.expectDone();
        return http_date._makeDateTime(year, month, day, time);
      }
      scanner.expect(http_date._shortWeekdayRegExp);
      if (scanner.scan(", ")) {
        let day = http_date._parseInt(scanner, 2);
        scanner.expect(" ");
        let month = http_date._parseMonth(scanner);
        scanner.expect(" ");
        let year = http_date._parseInt(scanner, 4);
        scanner.expect(" ");
        let time = http_date._parseTime(scanner);
        scanner.expect(" GMT");
        scanner.expectDone();
        return http_date._makeDateTime(year, month, day, time);
      }
      scanner.expect(" ");
      let month = http_date._parseMonth(scanner);
      scanner.expect(" ");
      let day = scanner.scan(" ") ? http_date._parseInt(scanner, 1) : http_date._parseInt(scanner, 2);
      scanner.expect(" ");
      let time = http_date._parseTime(scanner);
      scanner.expect(" ");
      let year = http_date._parseInt(scanner, 4);
      scanner.expectDone();
      return http_date._makeDateTime(year, month, day, time);
    }, T$.VoidToDateTime()));
  };
  http_date._parseMonth = function _parseMonth(scanner) {
    scanner.expect(http_date._monthRegExp);
    return http_date._months[$indexOf](dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))) + 1;
  };
  http_date._parseInt = function _parseInt(scanner, digits) {
    scanner.expect(http_date._digitRegExp);
    if (dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)).length !== digits) {
      scanner.error("expected a " + dart.str(digits) + "-digit number.");
    }
    return core.int.parse(dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)));
  };
  http_date._parseTime = function _parseTime(scanner) {
    let hours = http_date._parseInt(scanner, 2);
    if (hours >= 24) scanner.error("hours may not be greater than 24.");
    scanner.expect(":");
    let minutes = http_date._parseInt(scanner, 2);
    if (minutes >= 60) scanner.error("minutes may not be greater than 60.");
    scanner.expect(":");
    let seconds = http_date._parseInt(scanner, 2);
    if (seconds >= 60) scanner.error("seconds may not be greater than 60.");
    return new core.DateTime.new(1, 1, 1, hours, minutes, seconds);
  };
  http_date._makeDateTime = function _makeDateTime(year, month, day, time) {
    let dateTime = new core.DateTime.utc(year, month, day, time.hour, time.minute, time.second);
    if (dateTime.month !== month) {
      dart.throw(new core.FormatException.new("invalid day '" + dart.str(day) + "' for month '" + dart.str(month) + "'."));
    }
    return dateTime;
  };
  dart.defineLazy(http_date, {
    /*http_date._weekdays*/get _weekdays() {
      return C[112] || CT.C112;
    },
    /*http_date._months*/get _months() {
      return C[113] || CT.C113;
    },
    /*http_date._shortWeekdayRegExp*/get _shortWeekdayRegExp() {
      return core.RegExp.new("Mon|Tue|Wed|Thu|Fri|Sat|Sun");
    },
    /*http_date._longWeekdayRegExp*/get _longWeekdayRegExp() {
      return core.RegExp.new("Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday");
    },
    /*http_date._monthRegExp*/get _monthRegExp() {
      return core.RegExp.new("Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec");
    },
    /*http_date._digitRegExp*/get _digitRegExp() {
      return core.RegExp.new("\\d+");
    }
  }, false);
  var type$3 = dart.privateName(media_type, "MediaType.type");
  var subtype$ = dart.privateName(media_type, "MediaType.subtype");
  var parameters$0 = dart.privateName(media_type, "MediaType.parameters");
  media_type.MediaType = class MediaType extends core.Object {
    get type() {
      return this[type$3];
    }
    set type(value) {
      super.type = value;
    }
    get subtype() {
      return this[subtype$];
    }
    set subtype(value) {
      super.subtype = value;
    }
    get parameters() {
      return this[parameters$0];
    }
    set parameters(value) {
      super.parameters = value;
    }
    get mimeType() {
      return this.type + "/" + this.subtype;
    }
    static parse(mediaType) {
      return utils$.wrapFormatException(media_type.MediaType, "media type", mediaType, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(mediaType);
        scanner.scan(scan.whitespace);
        scanner.expect(scan.token);
        let type = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
        scanner.expect("/");
        scanner.expect(scan.token);
        let subtype = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
        scanner.scan(scan.whitespace);
        let parameters = new (T$.IdentityMapOfString$String()).new();
        while (scanner.scan(";")) {
          scanner.scan(scan.whitespace);
          scanner.expect(scan.token);
          let attribute = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
          scanner.expect("=");
          let value = null;
          if (scanner.scan(scan.token)) {
            value = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
          } else {
            value = scan.expectQuotedString(scanner);
          }
          scanner.scan(scan.whitespace);
          parameters[$_set](attribute, value);
        }
        scanner.expectDone();
        return new media_type.MediaType.new(type, subtype, parameters);
      }, T$.VoidToMediaType()));
    }
    static ['_#parse#tearOff'](mediaType) {
      return media_type.MediaType.parse(mediaType);
    }
    static ['_#new#tearOff'](type, subtype, parameters = null) {
      return new media_type.MediaType.new(type, subtype, parameters);
    }
    change(opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let subtype = opts && 'subtype' in opts ? opts.subtype : null;
      let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let clearParameters = opts && 'clearParameters' in opts ? opts.clearParameters : false;
      if (mimeType != null) {
        if (type != null) {
          dart.throw(new core.ArgumentError.new("You may not pass both [type] and [mimeType]."));
        } else if (subtype != null) {
          dart.throw(new core.ArgumentError.new("You may not pass both [subtype] and " + "[mimeType]."));
        }
        let segments = mimeType[$split]("/");
        if (segments[$length] !== 2) {
          dart.throw(new core.FormatException.new("Invalid mime type \"" + dart.str(mimeType) + "\"."));
        }
        type = segments[$_get](0);
        subtype = segments[$_get](1);
      }
      type == null ? type = this.type : null;
      subtype == null ? subtype = this.subtype : null;
      parameters == null ? parameters = new (T$.IdentityMapOfString$String()).new() : null;
      if (!clearParameters) {
        let newParameters = parameters;
        parameters = T$.LinkedHashMapOfString$String().from(this.parameters);
        parameters[$addAll](newParameters);
      }
      return new media_type.MediaType.new(type, subtype, parameters);
    }
    toString() {
      let t61;
      let buffer = (t61 = new core.StringBuffer.new(), (() => {
        t61.write(this.type);
        t61.write("/");
        t61.write(this.subtype);
        return t61;
      })());
      this.parameters[$forEach](dart.fn((attribute, value) => {
        let t61;
        buffer.write("; " + attribute + "=");
        if (scan.nonToken.hasMatch(value)) {
          t61 = buffer;
          (() => {
            t61.write("\"");
            t61.write(value[$replaceAllMapped](media_type._escapedChar, dart.fn(match => "\\" + dart.str(match._get(0)), T$.MatchToString())));
            t61.write("\"");
            return t61;
          })();
        } else {
          buffer.write(value);
        }
      }, T$.StringAndStringTovoid()));
      return buffer.toString();
    }
  };
  (media_type.MediaType.new = function(type, subtype, parameters = null) {
    this[type$3] = type[$toLowerCase]();
    this[subtype$] = subtype[$toLowerCase]();
    this[parameters$0] = new (T$.UnmodifiableMapViewOfString$String()).new(parameters == null ? new (T$.IdentityMapOfString$String()).new() : new (T$.CaseInsensitiveMapOfString()).from(parameters));
    ;
  }).prototype = media_type.MediaType.prototype;
  dart.addTypeTests(media_type.MediaType);
  dart.addTypeCaches(media_type.MediaType);
  dart.setMethodSignature(media_type.MediaType, () => ({
    __proto__: dart.getMethods(media_type.MediaType.__proto__),
    change: dart.fnType(media_type.MediaType, [], {clearParameters: core.bool, mimeType: dart.nullable(core.String), parameters: dart.nullable(core.Map$(core.String, core.String)), subtype: dart.nullable(core.String), type: dart.nullable(core.String)}, {})
  }));
  dart.setStaticMethodSignature(media_type.MediaType, () => ['parse']);
  dart.setGetterSignature(media_type.MediaType, () => ({
    __proto__: dart.getGetters(media_type.MediaType.__proto__),
    mimeType: core.String
  }));
  dart.setLibraryUri(media_type.MediaType, I[82]);
  dart.setFieldSignature(media_type.MediaType, () => ({
    __proto__: dart.getFields(media_type.MediaType.__proto__),
    type: dart.finalFieldType(core.String),
    subtype: dart.finalFieldType(core.String),
    parameters: dart.finalFieldType(core.Map$(core.String, core.String))
  }));
  dart.defineExtensionMethods(media_type.MediaType, ['toString']);
  dart.defineLazy(media_type, {
    /*media_type._escapedChar*/get _escapedChar() {
      return core.RegExp.new("[\"\\x00-\\x1F\\x7F]");
    }
  }, false);
  scan.parseList = function parseList(T, scanner, parseElement) {
    let result = _interceptors.JSArray$(T).of([]);
    while (scanner.scan(",")) {
      scanner.scan(scan.whitespace);
    }
    result[$add](parseElement());
    scanner.scan(scan.whitespace);
    while (scanner.scan(",")) {
      scanner.scan(scan.whitespace);
      if (scanner.matches(",") || scanner.isDone) continue;
      result[$add](parseElement());
      scanner.scan(scan.whitespace);
    }
    return result;
  };
  scan.expectQuotedString = function expectQuotedString(scanner, opts) {
    let name = opts && 'name' in opts ? opts.name : "quoted string";
    scanner.expect(scan._quotedString, {name: name});
    let string = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
    return string[$substring](1, string.length - 1)[$replaceAllMapped](scan._quotedPair, dart.fn(match => dart.nullCheck(match._get(1)), T$.MatchToString()));
  };
  dart.defineLazy(scan, {
    /*scan.token*/get token() {
      return core.RegExp.new("[^()<>@,;:\"\\\\/[\\]?={} \\t\\x00-\\x1F\\x7F]+");
    },
    /*scan._lws*/get _lws() {
      return core.RegExp.new("(?:\\r\\n)?[ \\t]+");
    },
    /*scan._quotedString*/get _quotedString() {
      return core.RegExp.new("\"(?:[^\"\\x00-\\x1F\\x7F]|\\\\.)*\"");
    },
    /*scan._quotedPair*/get _quotedPair() {
      return core.RegExp.new("\\\\(.)");
    },
    /*scan.nonToken*/get nonToken() {
      return core.RegExp.new("[()<>@,;:\"\\\\/\\[\\]?={} \\t\\x00-\\x1F\\x7F]");
    },
    /*scan.whitespace*/get whitespace() {
      return core.RegExp.new("(?:" + scan._lws.pattern + ")*");
    }
  }, false);
  utils$.wrapFormatException = function wrapFormatException(T, name, value, body) {
    try {
      return body();
    } catch (e) {
      let ex = dart.getThrown(e);
      if (span_exception.SourceSpanFormatException.is(ex)) {
        let error = ex;
        dart.throw(new span_exception.SourceSpanFormatException.new("Invalid " + name + ": " + error.message, error.span, error.source));
      } else if (core.FormatException.is(ex)) {
        let error = ex;
        dart.throw(new core.FormatException.new("Invalid " + name + " \"" + value + "\": " + error.message, error.source, error.offset));
      } else
        throw e;
    }
  };
  var _decode = dart.privateName(decoder, "_decode");
  var _state = dart.privateName(decoder, "_state");
  decoder.ChunkedCodingDecoder = class ChunkedCodingDecoder extends convert.Converter$(core.List$(core.int), core.List$(core.int)) {
    static ['_#_#tearOff']() {
      return new decoder.ChunkedCodingDecoder.__();
    }
    convert(input) {
      T$.ListOfint().as(input);
      let sink = new decoder._Sink.new(T$.StreamControllerOfListOfint().new());
      let output = sink[_decode](input, 0, input[$length]);
      if (sink[_state][$_equals](decoder._State.end)) return output;
      dart.throw(new core.FormatException.new("Input ended unexpectedly.", input, input[$length]));
    }
    startChunkedConversion(sink) {
      T$.SinkOfListOfint().as(sink);
      return new decoder._Sink.new(sink);
    }
  };
  (decoder.ChunkedCodingDecoder.__ = function() {
    decoder.ChunkedCodingDecoder.__proto__.new.call(this);
    ;
  }).prototype = decoder.ChunkedCodingDecoder.prototype;
  dart.addTypeTests(decoder.ChunkedCodingDecoder);
  dart.addTypeCaches(decoder.ChunkedCodingDecoder);
  dart.setMethodSignature(decoder.ChunkedCodingDecoder, () => ({
    __proto__: dart.getMethods(decoder.ChunkedCodingDecoder.__proto__),
    convert: dart.fnType(core.List$(core.int), [dart.nullable(core.Object)]),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(decoder.ChunkedCodingDecoder, I[83]);
  var ___Sink__size = dart.privateName(decoder, "_#_Sink#_size");
  var _sink$ = dart.privateName(decoder, "_sink");
  var _size = dart.privateName(decoder, "_size");
  var _close = dart.privateName(decoder, "_close");
  var _digitForByte = dart.privateName(decoder, "_digitForByte");
  var _State__name = dart.privateName(decoder, "_State._name");
  decoder._Sink = class _Sink extends convert.ByteConversionSinkBase {
    get [_size]() {
      let t63;
      t63 = this[___Sink__size];
      return t63 == null ? dart.throw(new _internal.LateError.fieldNI("_size")) : t63;
    }
    set [_size](_size$35param) {
      this[___Sink__size] = _size$35param;
    }
    static ['_#new#tearOff'](_sink) {
      return new decoder._Sink.new(_sink);
    }
    add(chunk) {
      T$.ListOfint().as(chunk);
      return this.addSlice(chunk, 0, chunk[$length], false);
    }
    addSlice(chunk, start, end, isLast) {
      core.RangeError.checkValidRange(start, end, chunk[$length]);
      let output = this[_decode](chunk, start, end);
      if (output[$isNotEmpty]) this[_sink$].add(output);
      if (isLast) this[_close](chunk, end);
    }
    close() {
      return this[_close]();
    }
    [_close](chunk = null, index = null) {
      if (!this[_state][$_equals](decoder._State.end)) {
        dart.throw(new core.FormatException.new("Input ended unexpectedly.", chunk, index));
      }
      this[_sink$].close();
    }
    [_decode](bytes, start, end) {
      function assertCurrentChar(char, name) {
        if (bytes[$_get](start) !== char) {
          dart.throw(new core.FormatException.new("Expected " + name + ".", bytes, start));
        }
      }
      dart.fn(assertCurrentChar, T$.intAndStringTovoid());
      let buffer = new typed_buffer.Uint8Buffer.new();
      while (start !== end) {
        switch (this[_state]) {
          case C[114] || CT.C114:
            {
              this[_size] = this[_digitForByte](bytes, start);
              this[_state] = decoder._State.size;
              start = start + 1;
              break;
            }
          case C[115] || CT.C115:
            {
              if (bytes[$_get](start) === 13) {
                this[_state] = decoder._State.sizeBeforeLF;
              } else {
                this[_size] = (this[_size] << 4 >>> 0) + this[_digitForByte](bytes, start);
              }
              start = start + 1;
              break;
            }
          case C[116] || CT.C116:
            {
              assertCurrentChar(10, "LF");
              this[_state] = this[_size] === 0 ? decoder._State.endBeforeCR : decoder._State.body;
              start = start + 1;
              break;
            }
          case C[117] || CT.C117:
            {
              let chunkEnd = math.min(core.int, end, start + this[_size]);
              buffer.addAll(bytes, start, chunkEnd);
              this[_size] = this[_size] - (chunkEnd - start);
              start = chunkEnd;
              if (this[_size] === 0) this[_state] = decoder._State.bodyBeforeCR;
              break;
            }
          case C[118] || CT.C118:
            {
              assertCurrentChar(13, "CR");
              this[_state] = decoder._State.bodyBeforeLF;
              start = start + 1;
              break;
            }
          case C[119] || CT.C119:
            {
              assertCurrentChar(10, "LF");
              this[_state] = decoder._State.boundary;
              start = start + 1;
              break;
            }
          case C[120] || CT.C120:
            {
              assertCurrentChar(13, "CR");
              this[_state] = decoder._State.endBeforeLF;
              start = start + 1;
              break;
            }
          case C[121] || CT.C121:
            {
              assertCurrentChar(10, "LF");
              this[_state] = decoder._State.end;
              start = start + 1;
              break;
            }
          case C[122] || CT.C122:
            {
              dart.throw(new core.FormatException.new("Expected no more data.", bytes, start));
            }
        }
      }
      return buffer.buffer[$asUint8List](0, buffer.length);
    }
    [_digitForByte](bytes, index) {
      let byte = bytes[$_get](index);
      let digit = (48 ^ byte) >>> 0;
      if (digit <= 9) {
        if (digit >= 0) return digit;
      } else {
        let letter = (32 | byte) >>> 0;
        if (97 <= letter && letter <= 102) return letter - 97 + 10;
      }
      dart.throw(new core.FormatException.new("Invalid hexadecimal byte 0x" + byte[$toRadixString](16)[$toUpperCase]() + ".", bytes, index));
    }
  };
  (decoder._Sink.new = function(_sink) {
    this[_state] = decoder._State.boundary;
    this[___Sink__size] = null;
    this[_sink$] = _sink;
    decoder._Sink.__proto__.new.call(this);
    ;
  }).prototype = decoder._Sink.prototype;
  dart.addTypeTests(decoder._Sink);
  dart.addTypeCaches(decoder._Sink);
  dart.setMethodSignature(decoder._Sink, () => ({
    __proto__: dart.getMethods(decoder._Sink.__proto__),
    add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    close: dart.fnType(dart.void, []),
    [_close]: dart.fnType(dart.void, [], [dart.nullable(core.List$(core.int)), dart.nullable(core.int)]),
    [_decode]: dart.fnType(typed_data.Uint8List, [core.List$(core.int), core.int, core.int]),
    [_digitForByte]: dart.fnType(core.int, [core.List$(core.int), core.int])
  }));
  dart.setGetterSignature(decoder._Sink, () => ({
    __proto__: dart.getGetters(decoder._Sink.__proto__),
    [_size]: core.int
  }));
  dart.setSetterSignature(decoder._Sink, () => ({
    __proto__: dart.getSetters(decoder._Sink.__proto__),
    [_size]: core.int
  }));
  dart.setLibraryUri(decoder._Sink, I[83]);
  dart.setFieldSignature(decoder._Sink, () => ({
    __proto__: dart.getFields(decoder._Sink.__proto__),
    [_sink$]: dart.finalFieldType(core.Sink$(core.List$(core.int))),
    [_state]: dart.fieldType(decoder._State),
    [___Sink__size]: dart.fieldType(dart.nullable(core.int))
  }));
  var _name$ = dart.privateName(decoder, "_name");
  const _name$0 = _State__name;
  decoder._State = class _State extends core.Object {
    get [_name$]() {
      return this[_name$0];
    }
    set [_name$](value) {
      super[_name$] = value;
    }
    static ['_#_#tearOff'](_name) {
      return new decoder._State.__(_name);
    }
    toString() {
      return this[_name$];
    }
  };
  (decoder._State.__ = function(_name) {
    this[_name$0] = _name;
    ;
  }).prototype = decoder._State.prototype;
  dart.addTypeTests(decoder._State);
  dart.addTypeCaches(decoder._State);
  dart.setLibraryUri(decoder._State, I[83]);
  dart.setFieldSignature(decoder._State, () => ({
    __proto__: dart.getFields(decoder._State.__proto__),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(decoder._State, () => ['boundary', 'size', 'sizeBeforeLF', 'body', 'bodyBeforeCR', 'bodyBeforeLF', 'endBeforeCR', 'endBeforeLF', 'end']);
  dart.defineExtensionMethods(decoder._State, ['toString']);
  dart.defineLazy(decoder._State, {
    /*decoder._State.boundary*/get boundary() {
      return C[114] || CT.C114;
    },
    /*decoder._State.size*/get size() {
      return C[115] || CT.C115;
    },
    /*decoder._State.sizeBeforeLF*/get sizeBeforeLF() {
      return C[116] || CT.C116;
    },
    /*decoder._State.body*/get body() {
      return C[117] || CT.C117;
    },
    /*decoder._State.bodyBeforeCR*/get bodyBeforeCR() {
      return C[118] || CT.C118;
    },
    /*decoder._State.bodyBeforeLF*/get bodyBeforeLF() {
      return C[119] || CT.C119;
    },
    /*decoder._State.endBeforeCR*/get endBeforeCR() {
      return C[120] || CT.C120;
    },
    /*decoder._State.endBeforeLF*/get endBeforeLF() {
      return C[121] || CT.C121;
    },
    /*decoder._State.end*/get end() {
      return C[122] || CT.C122;
    }
  }, false);
  dart.defineLazy(decoder, {
    /*decoder.chunkedCodingDecoder*/get chunkedCodingDecoder() {
      return C[123] || CT.C123;
    }
  }, false);
  encoder.ChunkedCodingEncoder = class ChunkedCodingEncoder extends convert.Converter$(core.List$(core.int), core.List$(core.int)) {
    static ['_#_#tearOff']() {
      return new encoder.ChunkedCodingEncoder.__();
    }
    convert(input) {
      T$.ListOfint().as(input);
      return encoder._convert(input, 0, input[$length], {isLast: true});
    }
    startChunkedConversion(sink) {
      T$.SinkOfListOfint().as(sink);
      return new encoder._Sink.new(sink);
    }
  };
  (encoder.ChunkedCodingEncoder.__ = function() {
    encoder.ChunkedCodingEncoder.__proto__.new.call(this);
    ;
  }).prototype = encoder.ChunkedCodingEncoder.prototype;
  dart.addTypeTests(encoder.ChunkedCodingEncoder);
  dart.addTypeCaches(encoder.ChunkedCodingEncoder);
  dart.setMethodSignature(encoder.ChunkedCodingEncoder, () => ({
    __proto__: dart.getMethods(encoder.ChunkedCodingEncoder.__proto__),
    convert: dart.fnType(core.List$(core.int), [dart.nullable(core.Object)]),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(encoder.ChunkedCodingEncoder, I[84]);
  var _sink$0 = dart.privateName(encoder, "_sink");
  encoder._Sink = class _Sink extends convert.ByteConversionSinkBase {
    static ['_#new#tearOff'](_sink) {
      return new encoder._Sink.new(_sink);
    }
    add(chunk) {
      T$.ListOfint().as(chunk);
      this[_sink$0].add(encoder._convert(chunk, 0, chunk[$length]));
    }
    addSlice(chunk, start, end, isLast) {
      core.RangeError.checkValidRange(start, end, chunk[$length]);
      this[_sink$0].add(encoder._convert(chunk, start, end, {isLast: isLast}));
      if (isLast) this[_sink$0].close();
    }
    close() {
      this[_sink$0].add(encoder._doneChunk);
      this[_sink$0].close();
    }
  };
  (encoder._Sink.new = function(_sink) {
    this[_sink$0] = _sink;
    encoder._Sink.__proto__.new.call(this);
    ;
  }).prototype = encoder._Sink.prototype;
  dart.addTypeTests(encoder._Sink);
  dart.addTypeCaches(encoder._Sink);
  dart.setMethodSignature(encoder._Sink, () => ({
    __proto__: dart.getMethods(encoder._Sink.__proto__),
    add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    close: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(encoder._Sink, I[84]);
  dart.setFieldSignature(encoder._Sink, () => ({
    __proto__: dart.getFields(encoder._Sink.__proto__),
    [_sink$0]: dart.finalFieldType(core.Sink$(core.List$(core.int)))
  }));
  encoder._convert = function _convert(bytes, start, end, opts) {
    let t63, t63$, t63$0, t63$1;
    let isLast = opts && 'isLast' in opts ? opts.isLast : false;
    if (end === start) return isLast ? encoder._doneChunk : C[124] || CT.C124;
    let size = end - start;
    let sizeInHex = size[$toRadixString](16);
    let footerSize = isLast ? encoder._doneChunk[$length] : 0;
    let list = _native_typed_data.NativeUint8List.new(sizeInHex.length + 4 + size + footerSize);
    list[$setRange](0, sizeInHex.length, sizeInHex[$codeUnits]);
    let cursor = sizeInHex.length;
    list[$_set]((t63 = cursor, cursor = t63 + 1, t63), 13);
    list[$_set]((t63$ = cursor, cursor = t63$ + 1, t63$), 10);
    list[$setRange](cursor, cursor + end - start, bytes, start);
    cursor = cursor + (end - start);
    list[$_set]((t63$0 = cursor, cursor = t63$0 + 1, t63$0), 13);
    list[$_set]((t63$1 = cursor, cursor = t63$1 + 1, t63$1), 10);
    if (isLast) {
      list[$setRange](list[$length] - footerSize, list[$length], encoder._doneChunk);
    }
    return list;
  };
  dart.defineLazy(encoder, {
    /*encoder.chunkedCodingEncoder*/get chunkedCodingEncoder() {
      return C[125] || CT.C125;
    },
    /*encoder._doneChunk*/get _doneChunk() {
      return _native_typed_data.NativeUint8List.fromList(T$.JSArrayOfint().of([48, 13, 10, 13, 10]));
    }
  }, false);
  dart.defineLazy(charcodes, {
    /*charcodes.$lf*/get $lf() {
      return 10;
    },
    /*charcodes.$cr*/get $cr() {
      return 13;
    },
    /*charcodes.$0*/get $0() {
      return 48;
    },
    /*charcodes.$1*/get $1() {
      return 49;
    },
    /*charcodes.$3*/get $3() {
      return 51;
    },
    /*charcodes.$4*/get $4() {
      return 52;
    },
    /*charcodes.$7*/get $7() {
      return 55;
    },
    /*charcodes.$A*/get $A() {
      return 65;
    },
    /*charcodes.$q*/get $q() {
      return 113;
    },
    /*charcodes.$a*/get $a() {
      return 97;
    },
    /*charcodes.$f*/get $f() {
      return 102;
    }
  }, false);
  var _table = dart.privateName(typed_queue, "_TypedQueue._table");
  var _head = dart.privateName(typed_queue, "_TypedQueue._head");
  var _tail = dart.privateName(typed_queue, "_TypedQueue._tail");
  var _table$ = dart.privateName(typed_queue, "_table");
  var _head$ = dart.privateName(typed_queue, "_head");
  var _tail$ = dart.privateName(typed_queue, "_tail");
  var _createBuffer = dart.privateName(typed_queue, "_createBuffer");
  var _createList = dart.privateName(typed_queue, "_createList");
  var _writeToList = dart.privateName(typed_queue, "_writeToList");
  var _growAtCapacity = dart.privateName(typed_queue, "_growAtCapacity");
  var _growTo = dart.privateName(typed_queue, "_growTo");
  var _defaultValue = dart.privateName(typed_queue, "_defaultValue");
  const _is__TypedQueue_default = Symbol('_is__TypedQueue_default');
  typed_queue._TypedQueue$ = dart.generic((E, L) => {
    var __t$IterableOfE = () => (__t$IterableOfE = dart.constFn(core.Iterable$(E)))();
    var __t$ListOfE = () => (__t$ListOfE = dart.constFn(core.List$(E)))();
    var __t$EN = () => (__t$EN = dart.constFn(dart.nullable(E)))();
    const Object_ListMixin$36 = class Object_ListMixin extends core.Object {};
    (Object_ListMixin$36.new = function() {
    }).prototype = Object_ListMixin$36.prototype;
    dart.applyMixin(Object_ListMixin$36, collection.ListMixin$(E));
    class _TypedQueue extends Object_ListMixin$36 {
      get [_table$]() {
        return this[_table];
      }
      set [_table$](value) {
        this[_table] = value;
      }
      get [_head$]() {
        return this[_head];
      }
      set [_head$](value) {
        this[_head] = value;
      }
      get [_tail$]() {
        return this[_tail];
      }
      set [_tail$](value) {
        this[_tail] = value;
      }
      get length() {
        return (this[_tail$] - this[_head$] & this[_table$][$length] - 1) >>> 0;
      }
      toList(opts) {
        let growable = opts && 'growable' in opts ? opts.growable : true;
        let list = growable ? this[_createBuffer](this.length) : this[_createList](this.length);
        this[_writeToList](list);
        return list;
      }
      cast(T) {
        if (queue_list.QueueList$(T).is(this)) return queue_list.QueueList$(T).as(this);
        dart.throw(new core.UnsupportedError.new(dart.str(this) + " cannot be cast to the desired type."));
      }
      retype(T) {
        return this.cast(T);
      }
      addLast(value) {
        E.as(value);
        this[_table$][$_set](this[_tail$], value);
        this[_tail$] = (this[_tail$] + 1 & this[_table$][$length] - 1) >>> 0;
        if (this[_head$] === this[_tail$]) this[_growAtCapacity]();
      }
      addFirst(value) {
        E.as(value);
        this[_head$] = (this[_head$] - 1 & this[_table$][$length] - 1) >>> 0;
        this[_table$][$_set](this[_head$], value);
        if (this[_head$] === this[_tail$]) this[_growAtCapacity]();
      }
      removeFirst() {
        if (this[_head$] === this[_tail$]) dart.throw(new core.StateError.new("No element"));
        let result = this[_table$][$_get](this[_head$]);
        this[_head$] = (this[_head$] + 1 & this[_table$][$length] - 1) >>> 0;
        return result;
      }
      removeLast() {
        if (this[_head$] === this[_tail$]) dart.throw(new core.StateError.new("No element"));
        this[_tail$] = (this[_tail$] - 1 & this[_table$][$length] - 1) >>> 0;
        return this[_table$][$_get](this[_tail$]);
      }
      add(value) {
        E.as(value);
        return this.addLast(value);
      }
      set length(value) {
        core.RangeError.checkNotNegative(value, "length");
        let delta = value - this.length;
        if (delta >= 0) {
          let needsToGrow = this[_table$][$length] <= value;
          if (needsToGrow) this[_growTo](value);
          this[_tail$] = (this[_tail$] + delta & this[_table$][$length] - 1) >>> 0;
          if (!needsToGrow) this.fillRange(value - delta, value, this[_defaultValue]);
        } else {
          this.removeRange(value, this.length);
        }
      }
      _get(index) {
        core.RangeError.checkValidIndex(index, this, null, this.length);
        return this[_table$][$_get]((this[_head$] + index & this[_table$][$length] - 1) >>> 0);
      }
      _set(index, value$) {
        let value = value$;
        E.as(value);
        core.RangeError.checkValidIndex(index, this);
        this[_table$][$_set]((this[_head$] + index & this[_table$][$length] - 1) >>> 0, value);
        return value$;
      }
      removeRange(start, end) {
        let length = this.length;
        core.RangeError.checkValidRange(start, end, length);
        if (start === 0) {
          this[_head$] = (this[_head$] + end & this[_table$][$length] - 1) >>> 0;
          return;
        }
        let elementsAfter = length - end;
        if (elementsAfter === 0) {
          this[_tail$] = (this[_head$] + start & this[_table$][$length] - 1) >>> 0;
          return;
        }
        let removedElements = end - start;
        if (start < elementsAfter) {
          this.setRange(removedElements, end, this);
          this[_head$] = (this[_head$] + removedElements & this[_table$][$length] - 1) >>> 0;
        } else {
          this.setRange(start, length - removedElements, this, end);
          this[_tail$] = (this[_tail$] - removedElements & this[_table$][$length] - 1) >>> 0;
        }
      }
      setRange(start, end, iterable, skipCount = 0) {
        __t$IterableOfE().as(iterable);
        core.RangeError.checkValidRange(start, end, this.length);
        if (start === end) return;
        let targetStart = (this[_head$] + start & this[_table$][$length] - 1) >>> 0;
        let targetEnd = (this[_head$] + end & this[_table$][$length] - 1) >>> 0;
        let targetIsContiguous = targetStart < targetEnd;
        if (iterable === this) {
          let sourceStart = (this[_head$] + skipCount & this[_table$][$length] - 1) >>> 0;
          let sourceEnd = (sourceStart + (end - start) & this[_table$][$length] - 1) >>> 0;
          if (sourceStart === targetStart) return;
          let sourceIsContiguous = sourceStart < sourceEnd;
          if (targetIsContiguous && sourceIsContiguous) {
            this[_table$][$setRange](targetStart, targetEnd, this[_table$], sourceStart);
          } else if (!targetIsContiguous && !sourceIsContiguous) {
            if (sourceStart > targetStart) {
              let startGap = sourceStart - targetStart;
              let firstEnd = this[_table$][$length] - startGap;
              this[_table$][$setRange](targetStart, firstEnd, this[_table$], sourceStart);
              this[_table$][$setRange](firstEnd, this[_table$][$length], this[_table$]);
              this[_table$][$setRange](0, targetEnd, this[_table$], startGap);
            } else if (sourceEnd < targetEnd) {
              let firstStart = targetEnd - sourceEnd;
              this[_table$][$setRange](firstStart, targetEnd, this[_table$]);
              this[_table$][$setRange](0, firstStart, this[_table$], this[_table$][$length] - firstStart);
              this[_table$][$setRange](targetStart, this[_table$][$length], this[_table$], sourceStart);
            }
          } else if (sourceStart < targetEnd) {
            if (sourceIsContiguous) {
              this[_table$][$setRange](targetStart, this[_table$][$length], this[_table$], sourceStart);
              this[_table$][$setRange](0, targetEnd, this[_table$], sourceStart + (this[_table$][$length] - targetStart));
            } else {
              let firstEnd = this[_table$][$length] - sourceStart;
              this[_table$][$setRange](targetStart, firstEnd, this[_table$], sourceStart);
              this[_table$][$setRange](firstEnd, targetEnd, this[_table$]);
            }
          } else {
            if (sourceIsContiguous) {
              this[_table$][$setRange](0, targetEnd, this[_table$], sourceStart + (this[_table$][$length] - targetStart));
              this[_table$][$setRange](targetStart, this[_table$][$length], this[_table$], sourceStart);
            } else {
              let firstStart = targetEnd - sourceEnd;
              this[_table$][$setRange](firstStart, targetEnd, this[_table$]);
              this[_table$][$setRange](targetStart, firstStart, this[_table$], sourceStart);
            }
          }
        } else if (targetIsContiguous) {
          this[_table$][$setRange](targetStart, targetEnd, iterable, skipCount);
        } else if (__t$ListOfE().is(iterable)) {
          this[_table$][$setRange](targetStart, this[_table$][$length], iterable, skipCount);
          this[_table$][$setRange](0, targetEnd, iterable, skipCount + (this[_table$][$length] - targetStart));
        } else {
          super.setRange(start, end, iterable, skipCount);
        }
      }
      fillRange(start, end, value = null) {
        __t$EN().as(value);
        let startInTable = (this[_head$] + start & this[_table$][$length] - 1) >>> 0;
        let endInTable = (this[_head$] + end & this[_table$][$length] - 1) >>> 0;
        if (startInTable <= endInTable) {
          this[_table$][$fillRange](startInTable, endInTable, value);
        } else {
          this[_table$][$fillRange](startInTable, this[_table$][$length], value);
          this[_table$][$fillRange](0, endInTable, value);
        }
      }
      sublist(start, end = null) {
        let length = this.length;
        let nonNullEnd = core.RangeError.checkValidRange(start, end, length);
        let list = this[_createList](nonNullEnd - start);
        this[_writeToList](list, start, nonNullEnd);
        return list;
      }
      [_writeToList](target, start = null, end = null) {
        start == null ? start = 0 : null;
        end == null ? end = this.length : null;
        if (!(target[$length] >= dart.notNull(end) - dart.notNull(start))) dart.assertFailed(null, I[85], 278, 12, "target.length >= end - start");
        if (!(dart.notNull(start) <= dart.notNull(end))) dart.assertFailed(null, I[85], 279, 12, "start <= end");
        let elementsToWrite = dart.notNull(end) - dart.notNull(start);
        let startInTable = (this[_head$] + dart.notNull(start) & this[_table$][$length] - 1) >>> 0;
        let endInTable = (this[_head$] + dart.notNull(end) & this[_table$][$length] - 1) >>> 0;
        if (startInTable <= endInTable) {
          target[$setRange](0, elementsToWrite, this[_table$], startInTable);
        } else {
          let firstPartSize = this[_table$][$length] - startInTable;
          target[$setRange](0, firstPartSize, this[_table$], startInTable);
          target[$setRange](firstPartSize, firstPartSize + endInTable, this[_table$], 0);
        }
        return elementsToWrite;
      }
      [_growAtCapacity]() {
        if (!(this[_head$] === this[_tail$])) dart.assertFailed(null, I[85], 297, 12, "_head == _tail");
        let newTable = this[_createList](this[_table$][$length] * 2);
        let partitionPoint = this[_table$][$length] - this[_head$];
        newTable[$setRange](0, partitionPoint, this[_table$], this[_head$]);
        if (partitionPoint !== this[_table$][$length]) {
          newTable[$setRange](partitionPoint, this[_table$][$length], this[_table$]);
        }
        this[_head$] = 0;
        this[_tail$] = this[_table$][$length];
        this[_table$] = newTable;
      }
      [_growTo](newElementCount) {
        if (!(newElementCount >= this.length)) dart.assertFailed(null, I[85], 316, 12, "newElementCount >= length");
        newElementCount = newElementCount + newElementCount[$rightShift](1);
        let newTable = this[_createList](typed_queue._nextPowerOf2(newElementCount));
        this[_tail$] = this[_writeToList](newTable);
        this[_table$] = newTable;
        this[_head$] = 0;
      }
    }
    (_TypedQueue.new = function(table) {
      this[_table] = L.as(table);
      this[_head] = 0;
      this[_tail] = 0;
      ;
    }).prototype = _TypedQueue.prototype;
    dart.addTypeTests(_TypedQueue);
    _TypedQueue.prototype[_is__TypedQueue_default] = true;
    dart.addTypeCaches(_TypedQueue);
    dart.setMethodSignature(_TypedQueue, () => ({
      __proto__: dart.getMethods(_TypedQueue.__proto__),
      cast: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      [$cast]: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      retype: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      addLast: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      addFirst: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      removeFirst: dart.fnType(E, []),
      _get: dart.fnType(E, [core.int]),
      [$_get]: dart.fnType(E, [core.int]),
      _set: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [$_set]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      sublist: dart.fnType(L, [core.int], [dart.nullable(core.int)]),
      [$sublist]: dart.fnType(L, [core.int], [dart.nullable(core.int)]),
      [_writeToList]: dart.fnType(core.int, [core.List$(E)], [dart.nullable(core.int), dart.nullable(core.int)]),
      [_growAtCapacity]: dart.fnType(dart.void, []),
      [_growTo]: dart.fnType(dart.void, [core.int])
    }));
    dart.setGetterSignature(_TypedQueue, () => ({
      __proto__: dart.getGetters(_TypedQueue.__proto__),
      length: core.int,
      [$length]: core.int
    }));
    dart.setSetterSignature(_TypedQueue, () => ({
      __proto__: dart.getSetters(_TypedQueue.__proto__),
      length: core.int,
      [$length]: core.int
    }));
    dart.setLibraryUri(_TypedQueue, I[86]);
    dart.setFieldSignature(_TypedQueue, () => ({
      __proto__: dart.getFields(_TypedQueue.__proto__),
      [_table$]: dart.fieldType(L),
      [_head$]: dart.fieldType(core.int),
      [_tail$]: dart.fieldType(core.int)
    }));
    dart.defineExtensionMethods(_TypedQueue, [
      'toList',
      'cast',
      'removeLast',
      'add',
      '_get',
      '_set',
      'removeRange',
      'setRange',
      'fillRange',
      'sublist'
    ]);
    dart.defineExtensionAccessors(_TypedQueue, ['length']);
    return _TypedQueue;
  });
  typed_queue._TypedQueue = typed_queue._TypedQueue$();
  dart.addTypeTests(typed_queue._TypedQueue, _is__TypedQueue_default);
  const _is__IntQueue_default = Symbol('_is__IntQueue_default');
  typed_queue._IntQueue$ = dart.generic(L => {
    class _IntQueue extends typed_queue._TypedQueue$(core.int, L) {
      get [_defaultValue]() {
        return 0;
      }
    }
    (_IntQueue.new = function(queue) {
      _IntQueue.__proto__.new.call(this, queue);
      ;
    }).prototype = _IntQueue.prototype;
    dart.addTypeTests(_IntQueue);
    _IntQueue.prototype[_is__IntQueue_default] = true;
    dart.addTypeCaches(_IntQueue);
    dart.setGetterSignature(_IntQueue, () => ({
      __proto__: dart.getGetters(_IntQueue.__proto__),
      [_defaultValue]: core.int
    }));
    dart.setLibraryUri(_IntQueue, I[86]);
    return _IntQueue;
  });
  typed_queue._IntQueue = typed_queue._IntQueue$();
  dart.addTypeTests(typed_queue._IntQueue, _is__IntQueue_default);
  const _is__FloatQueue_default = Symbol('_is__FloatQueue_default');
  typed_queue._FloatQueue$ = dart.generic(L => {
    class _FloatQueue extends typed_queue._TypedQueue$(core.double, L) {
      get [_defaultValue]() {
        return 0;
      }
    }
    (_FloatQueue.new = function(queue) {
      _FloatQueue.__proto__.new.call(this, queue);
      ;
    }).prototype = _FloatQueue.prototype;
    dart.addTypeTests(_FloatQueue);
    _FloatQueue.prototype[_is__FloatQueue_default] = true;
    dart.addTypeCaches(_FloatQueue);
    dart.setGetterSignature(_FloatQueue, () => ({
      __proto__: dart.getGetters(_FloatQueue.__proto__),
      [_defaultValue]: core.double
    }));
    dart.setLibraryUri(_FloatQueue, I[86]);
    return _FloatQueue;
  });
  typed_queue._FloatQueue = typed_queue._FloatQueue$();
  dart.addTypeTests(typed_queue._FloatQueue, _is__FloatQueue_default);
  var _add = dart.privateName(typed_queue, "_add");
  var _add$ = dart.privateName(queue_list, "_add");
  var _head$0 = dart.privateName(queue_list, "_head");
  var _writeToList$ = dart.privateName(queue_list, "_writeToList");
  var _grow = dart.privateName(typed_queue, "_grow");
  var _grow$ = dart.privateName(queue_list, "_grow");
  var _preGrow = dart.privateName(typed_queue, "_preGrow");
  var _preGrow$ = dart.privateName(queue_list, "_preGrow");
  var _table$0 = dart.privateName(queue_list, "_table");
  var _tail$0 = dart.privateName(queue_list, "_tail");
  var _head_ = dart.privateName(typed_queue, "_head=");
  var _table_ = dart.privateName(typed_queue, "_table=");
  var _tail_ = dart.privateName(typed_queue, "_tail=");
  typed_queue.Uint8Queue = class Uint8Queue extends typed_queue._IntQueue$(typed_data.Uint8List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint8Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t63;
      t63 = new typed_queue.Uint8Queue.new(elements[$length]);
      return (() => {
        t63.addAll(elements);
        return t63;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint8Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeUint8List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Uint8Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[126] || CT.C126, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[127] || CT.C127)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[128] || CT.C128, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[129] || CT.C129, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[130] || CT.C130, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[131] || CT.C131)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[132] || CT.C132)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[133] || CT.C133, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[134] || CT.C134, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[135] || CT.C135, value)));
    }
  };
  (typed_queue.Uint8Queue.new = function(initialCapacity = null) {
    typed_queue.Uint8Queue.__proto__.new.call(this, _native_typed_data.NativeUint8List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint8Queue.prototype;
  dart.addTypeTests(typed_queue.Uint8Queue);
  dart.addTypeCaches(typed_queue.Uint8Queue);
  typed_queue.Uint8Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint8Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Uint8List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Uint8Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint8Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint8Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint8Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint8Queue, I[86]);
  typed_queue.Int8Queue = class Int8Queue extends typed_queue._IntQueue$(typed_data.Int8List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int8Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t63;
      t63 = new typed_queue.Int8Queue.new(elements[$length]);
      return (() => {
        t63.addAll(elements);
        return t63;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int8Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeInt8List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Int8Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[126] || CT.C126, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[127] || CT.C127)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[128] || CT.C128, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[129] || CT.C129, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[130] || CT.C130, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[131] || CT.C131)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[132] || CT.C132)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[133] || CT.C133, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[134] || CT.C134, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[135] || CT.C135, value)));
    }
  };
  (typed_queue.Int8Queue.new = function(initialCapacity = null) {
    typed_queue.Int8Queue.__proto__.new.call(this, _native_typed_data.NativeInt8List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int8Queue.prototype;
  dart.addTypeTests(typed_queue.Int8Queue);
  dart.addTypeCaches(typed_queue.Int8Queue);
  typed_queue.Int8Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int8Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Int8List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Int8Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int8Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int8Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int8Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int8Queue, I[86]);
  typed_queue.Uint8ClampedQueue = class Uint8ClampedQueue extends typed_queue._IntQueue$(typed_data.Uint8ClampedList) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint8ClampedQueue.new(initialCapacity);
    }
    static fromList(elements) {
      let t63;
      t63 = new typed_queue.Uint8ClampedQueue.new(elements[$length]);
      return (() => {
        t63.addAll(elements);
        return t63;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint8ClampedQueue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeUint8ClampedList.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Uint8ClampedBuffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[126] || CT.C126, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[127] || CT.C127)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[128] || CT.C128, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[129] || CT.C129, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[130] || CT.C130, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[131] || CT.C131)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[132] || CT.C132)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[133] || CT.C133, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[134] || CT.C134, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[135] || CT.C135, value)));
    }
  };
  (typed_queue.Uint8ClampedQueue.new = function(initialCapacity = null) {
    typed_queue.Uint8ClampedQueue.__proto__.new.call(this, _native_typed_data.NativeUint8ClampedList.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint8ClampedQueue.prototype;
  dart.addTypeTests(typed_queue.Uint8ClampedQueue);
  dart.addTypeCaches(typed_queue.Uint8ClampedQueue);
  typed_queue.Uint8ClampedQueue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint8ClampedQueue.__proto__),
    [_createList]: dart.fnType(typed_data.Uint8ClampedList, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Uint8ClampedBuffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint8ClampedQueue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint8ClampedQueue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint8ClampedQueue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint8ClampedQueue, I[86]);
  typed_queue.Uint16Queue = class Uint16Queue extends typed_queue._IntQueue$(typed_data.Uint16List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint16Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t63;
      t63 = new typed_queue.Uint16Queue.new(elements[$length]);
      return (() => {
        t63.addAll(elements);
        return t63;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint16Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeUint16List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Uint16Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[126] || CT.C126, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[127] || CT.C127)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[128] || CT.C128, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[129] || CT.C129, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[130] || CT.C130, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[131] || CT.C131)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[132] || CT.C132)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[133] || CT.C133, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[134] || CT.C134, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[135] || CT.C135, value)));
    }
  };
  (typed_queue.Uint16Queue.new = function(initialCapacity = null) {
    typed_queue.Uint16Queue.__proto__.new.call(this, _native_typed_data.NativeUint16List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint16Queue.prototype;
  dart.addTypeTests(typed_queue.Uint16Queue);
  dart.addTypeCaches(typed_queue.Uint16Queue);
  typed_queue.Uint16Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint16Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Uint16List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Uint16Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint16Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint16Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint16Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint16Queue, I[86]);
  typed_queue.Int16Queue = class Int16Queue extends typed_queue._IntQueue$(typed_data.Int16List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int16Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t63;
      t63 = new typed_queue.Int16Queue.new(elements[$length]);
      return (() => {
        t63.addAll(elements);
        return t63;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int16Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeInt16List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Int16Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[126] || CT.C126, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[127] || CT.C127)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[128] || CT.C128, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[129] || CT.C129, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[130] || CT.C130, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[131] || CT.C131)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[132] || CT.C132)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[133] || CT.C133, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[134] || CT.C134, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[135] || CT.C135, value)));
    }
  };
  (typed_queue.Int16Queue.new = function(initialCapacity = null) {
    typed_queue.Int16Queue.__proto__.new.call(this, _native_typed_data.NativeInt16List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int16Queue.prototype;
  dart.addTypeTests(typed_queue.Int16Queue);
  dart.addTypeCaches(typed_queue.Int16Queue);
  typed_queue.Int16Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int16Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Int16List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Int16Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int16Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int16Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int16Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int16Queue, I[86]);
  typed_queue.Uint32Queue = class Uint32Queue extends typed_queue._IntQueue$(typed_data.Uint32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t63;
      t63 = new typed_queue.Uint32Queue.new(elements[$length]);
      return (() => {
        t63.addAll(elements);
        return t63;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint32Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeUint32List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Uint32Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[126] || CT.C126, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[127] || CT.C127)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[128] || CT.C128, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[129] || CT.C129, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[130] || CT.C130, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[131] || CT.C131)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[132] || CT.C132)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[133] || CT.C133, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[134] || CT.C134, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[135] || CT.C135, value)));
    }
  };
  (typed_queue.Uint32Queue.new = function(initialCapacity = null) {
    typed_queue.Uint32Queue.__proto__.new.call(this, _native_typed_data.NativeUint32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint32Queue.prototype;
  dart.addTypeTests(typed_queue.Uint32Queue);
  dart.addTypeCaches(typed_queue.Uint32Queue);
  typed_queue.Uint32Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint32Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Uint32List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Uint32Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint32Queue, I[86]);
  typed_queue.Int32Queue = class Int32Queue extends typed_queue._IntQueue$(typed_data.Int32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t63;
      t63 = new typed_queue.Int32Queue.new(elements[$length]);
      return (() => {
        t63.addAll(elements);
        return t63;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int32Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeInt32List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Int32Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[126] || CT.C126, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[127] || CT.C127)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[128] || CT.C128, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[129] || CT.C129, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[130] || CT.C130, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[131] || CT.C131)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[132] || CT.C132)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[133] || CT.C133, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[134] || CT.C134, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[135] || CT.C135, value)));
    }
  };
  (typed_queue.Int32Queue.new = function(initialCapacity = null) {
    typed_queue.Int32Queue.__proto__.new.call(this, _native_typed_data.NativeInt32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int32Queue.prototype;
  dart.addTypeTests(typed_queue.Int32Queue);
  dart.addTypeCaches(typed_queue.Int32Queue);
  typed_queue.Int32Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int32Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Int32List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Int32Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int32Queue, I[86]);
  typed_queue.Uint64Queue = class Uint64Queue extends typed_queue._IntQueue$(typed_data.Uint64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t63;
      t63 = new typed_queue.Uint64Queue.new(elements[$length]);
      return (() => {
        t63.addAll(elements);
        return t63;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint64Queue.fromList(elements);
    }
    [_createList](size) {
      return typed_data.Uint64List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Uint64Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[126] || CT.C126, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[127] || CT.C127)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[128] || CT.C128, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[129] || CT.C129, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[130] || CT.C130, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[131] || CT.C131)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[132] || CT.C132)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[133] || CT.C133, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[134] || CT.C134, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[135] || CT.C135, value)));
    }
  };
  (typed_queue.Uint64Queue.new = function(initialCapacity = null) {
    typed_queue.Uint64Queue.__proto__.new.call(this, typed_data.Uint64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint64Queue.prototype;
  dart.addTypeTests(typed_queue.Uint64Queue);
  dart.addTypeCaches(typed_queue.Uint64Queue);
  typed_queue.Uint64Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint64Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Uint64List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Uint64Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint64Queue, I[86]);
  typed_queue.Int64Queue = class Int64Queue extends typed_queue._IntQueue$(typed_data.Int64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t63;
      t63 = new typed_queue.Int64Queue.new(elements[$length]);
      return (() => {
        t63.addAll(elements);
        return t63;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int64Queue.fromList(elements);
    }
    [_createList](size) {
      return typed_data.Int64List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Int64Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[126] || CT.C126, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[127] || CT.C127)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[128] || CT.C128, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[129] || CT.C129, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[130] || CT.C130, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[131] || CT.C131)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[132] || CT.C132)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[133] || CT.C133, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[134] || CT.C134, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[135] || CT.C135, value)));
    }
  };
  (typed_queue.Int64Queue.new = function(initialCapacity = null) {
    typed_queue.Int64Queue.__proto__.new.call(this, typed_data.Int64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int64Queue.prototype;
  dart.addTypeTests(typed_queue.Int64Queue);
  dart.addTypeCaches(typed_queue.Int64Queue);
  typed_queue.Int64Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int64Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Int64List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Int64Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int64Queue, I[86]);
  typed_queue.Float32Queue = class Float32Queue extends typed_queue._FloatQueue$(typed_data.Float32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t63;
      t63 = new typed_queue.Float32Queue.new(elements[$length]);
      return (() => {
        t63.addAll(elements);
        return t63;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float32Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeFloat32List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Float32Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[126] || CT.C126, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[127] || CT.C127)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[128] || CT.C128, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[129] || CT.C129, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[130] || CT.C130, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[131] || CT.C131)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[132] || CT.C132)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[133] || CT.C133, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[134] || CT.C134, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[135] || CT.C135, value)));
    }
  };
  (typed_queue.Float32Queue.new = function(initialCapacity = null) {
    typed_queue.Float32Queue.__proto__.new.call(this, _native_typed_data.NativeFloat32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float32Queue.prototype;
  dart.addTypeTests(typed_queue.Float32Queue);
  dart.addTypeCaches(typed_queue.Float32Queue);
  typed_queue.Float32Queue[dart.implements] = () => [queue_list.QueueList$(core.double)];
  dart.setMethodSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float32Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Float32List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Float32Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.double]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.double))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.double)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.double)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float32Queue, I[86]);
  typed_queue.Float64Queue = class Float64Queue extends typed_queue._FloatQueue$(typed_data.Float64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t63;
      t63 = new typed_queue.Float64Queue.new(elements[$length]);
      return (() => {
        t63.addAll(elements);
        return t63;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float64Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeFloat64List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Float64Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[126] || CT.C126, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[127] || CT.C127)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[128] || CT.C128, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[129] || CT.C129, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[130] || CT.C130, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[131] || CT.C131)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[132] || CT.C132)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[133] || CT.C133, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[134] || CT.C134, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[135] || CT.C135, value)));
    }
  };
  (typed_queue.Float64Queue.new = function(initialCapacity = null) {
    typed_queue.Float64Queue.__proto__.new.call(this, _native_typed_data.NativeFloat64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float64Queue.prototype;
  dart.addTypeTests(typed_queue.Float64Queue);
  dart.addTypeCaches(typed_queue.Float64Queue);
  typed_queue.Float64Queue[dart.implements] = () => [queue_list.QueueList$(core.double)];
  dart.setMethodSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float64Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Float64List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Float64Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.double]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.double))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.double)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.double)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float64Queue, I[86]);
  typed_queue.Int32x4Queue = class Int32x4Queue extends typed_queue._TypedQueue$(typed_data.Int32x4, typed_data.Int32x4List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int32x4Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t63;
      t63 = new typed_queue.Int32x4Queue.new(elements[$length]);
      return (() => {
        t63.addAll(elements);
        return t63;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int32x4Queue.fromList(elements);
    }
    [_createList](size) {
      return new _native_typed_data.NativeInt32x4List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Int32x4Buffer.new(size);
    }
    get [_defaultValue]() {
      return typed_queue.Int32x4Queue._zero;
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[126] || CT.C126, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[127] || CT.C127)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[128] || CT.C128, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[129] || CT.C129, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[130] || CT.C130, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[131] || CT.C131)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[132] || CT.C132)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[133] || CT.C133, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[134] || CT.C134, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[135] || CT.C135, value)));
    }
  };
  (typed_queue.Int32x4Queue.new = function(initialCapacity = null) {
    typed_queue.Int32x4Queue.__proto__.new.call(this, new _native_typed_data.NativeInt32x4List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int32x4Queue.prototype;
  dart.addTypeTests(typed_queue.Int32x4Queue);
  dart.addTypeCaches(typed_queue.Int32x4Queue);
  typed_queue.Int32x4Queue[dart.implements] = () => [queue_list.QueueList$(typed_data.Int32x4)];
  dart.setMethodSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int32x4Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Int32x4List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Int32x4Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [typed_data.Int32x4]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(typed_data.Int32x4))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int32x4Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int32x4Queue.__proto__),
    [_defaultValue]: typed_data.Int32x4,
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(typed_data.Int32x4)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int32x4Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(typed_data.Int32x4)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int32x4Queue, I[86]);
  dart.setStaticFieldSignature(typed_queue.Int32x4Queue, () => ['_zero']);
  dart.defineLazy(typed_queue.Int32x4Queue, {
    /*typed_queue.Int32x4Queue._zero*/get _zero() {
      return new _native_typed_data.NativeInt32x4.new(0, 0, 0, 0);
    }
  }, false);
  typed_queue.Float32x4Queue = class Float32x4Queue extends typed_queue._TypedQueue$(typed_data.Float32x4, typed_data.Float32x4List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float32x4Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t63;
      t63 = new typed_queue.Float32x4Queue.new(elements[$length]);
      return (() => {
        t63.addAll(elements);
        return t63;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float32x4Queue.fromList(elements);
    }
    [_createList](size) {
      return new _native_typed_data.NativeFloat32x4List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Float32x4Buffer.new(size);
    }
    get [_defaultValue]() {
      return new _native_typed_data.NativeFloat32x4.zero();
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[126] || CT.C126, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[127] || CT.C127)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[128] || CT.C128, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[129] || CT.C129, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[130] || CT.C130, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[131] || CT.C131)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[132] || CT.C132)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[133] || CT.C133, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[134] || CT.C134, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[135] || CT.C135, value)));
    }
  };
  (typed_queue.Float32x4Queue.new = function(initialCapacity = null) {
    typed_queue.Float32x4Queue.__proto__.new.call(this, new _native_typed_data.NativeFloat32x4List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float32x4Queue.prototype;
  dart.addTypeTests(typed_queue.Float32x4Queue);
  dart.addTypeCaches(typed_queue.Float32x4Queue);
  typed_queue.Float32x4Queue[dart.implements] = () => [queue_list.QueueList$(typed_data.Float32x4)];
  dart.setMethodSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float32x4Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Float32x4List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Float32x4Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [typed_data.Float32x4]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(typed_data.Float32x4))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float32x4Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float32x4Queue.__proto__),
    [_defaultValue]: typed_data.Float32x4,
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(typed_data.Float32x4)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float32x4Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(typed_data.Float32x4)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float32x4Queue, I[86]);
  typed_queue._chooseRealInitialCapacity = function _chooseRealInitialCapacity(initialCapacity) {
    if (initialCapacity == null || dart.notNull(initialCapacity) < 16) {
      return 16;
    } else if (!typed_queue._isPowerOf2(initialCapacity)) {
      return typed_queue._nextPowerOf2(initialCapacity);
    } else {
      return initialCapacity;
    }
  };
  typed_queue._isPowerOf2 = function _isPowerOf2(number) {
    return (number & number - 1) === 0;
  };
  typed_queue._nextPowerOf2 = function _nextPowerOf2(number) {
    if (!(number > 0)) dart.assertFailed(null, I[85], 691, 10, "number > 0");
    number = (number << 1 >>> 0) - 1;
    for (;;) {
      let nextNumber = (number & number - 1) >>> 0;
      if (nextNumber === 0) return number;
      number = nextNumber;
    }
  };
  dart.defineLazy(typed_queue, {
    /*typed_queue._defaultInitialCapacity*/get _defaultInitialCapacity() {
      return 16;
    }
  }, false);
  var _buffer = dart.privateName(typed_buffer, "_buffer");
  var _length = dart.privateName(typed_buffer, "_length");
  var _typedBuffer = dart.privateName(typed_buffer, "_typedBuffer");
  var _defaultValue$ = dart.privateName(typed_buffer, "_defaultValue");
  var _createBuffer$ = dart.privateName(typed_buffer, "_createBuffer");
  var _createBiggerBuffer = dart.privateName(typed_buffer, "_createBiggerBuffer");
  var _grow$0 = dart.privateName(typed_buffer, "_grow");
  var _add$0 = dart.privateName(typed_buffer, "_add");
  var _addAll = dart.privateName(typed_buffer, "_addAll");
  var _insertKnownLength = dart.privateName(typed_buffer, "_insertKnownLength");
  var _ensureCapacity = dart.privateName(typed_buffer, "_ensureCapacity");
  var _setRange = dart.privateName(typed_buffer, "_setRange");
  const _is_TypedDataBuffer_default = Symbol('_is_TypedDataBuffer_default');
  typed_buffer.TypedDataBuffer$ = dart.generic(E => {
    var __t$IterableOfE = () => (__t$IterableOfE = dart.constFn(core.Iterable$(E)))();
    var __t$TypedDataBufferOfE = () => (__t$TypedDataBufferOfE = dart.constFn(typed_buffer.TypedDataBuffer$(E)))();
    class TypedDataBuffer extends collection.ListBase$(E) {
      get [_typedBuffer]() {
        return typed_data.TypedData.as(this[_buffer]);
      }
      get length() {
        return this[_length];
      }
      _get(index) {
        if (index >= this.length) dart.throw(new core.IndexError.new(index, this));
        return this[_buffer][$_get](index);
      }
      _set(index, value$) {
        let value = value$;
        E.as(value);
        if (index >= this.length) dart.throw(new core.IndexError.new(index, this));
        this[_buffer][$_set](index, value);
        return value$;
      }
      set length(newLength) {
        if (newLength < this[_length]) {
          let defaultValue = this[_defaultValue$];
          for (let i = newLength; i < this[_length]; i = i + 1) {
            this[_buffer][$_set](i, defaultValue);
          }
        } else if (newLength > this[_buffer][$length]) {
          let newBuffer = null;
          if (this[_buffer][$isEmpty]) {
            newBuffer = this[_createBuffer$](newLength);
          } else {
            newBuffer = this[_createBiggerBuffer](newLength);
          }
          newBuffer[$setRange](0, this[_length], this[_buffer]);
          this[_buffer] = newBuffer;
        }
        this[_length] = newLength;
      }
      [_add$0](value) {
        let t63;
        if (this[_length] === this[_buffer][$length]) this[_grow$0](this[_length]);
        this[_buffer][$_set]((t63 = this[_length], this[_length] = t63 + 1, t63), value);
      }
      add(element) {
        E.as(element);
        this[_add$0](element);
      }
      addAll(values, start = 0, end = null) {
        __t$IterableOfE().as(values);
        core.RangeError.checkNotNegative(start, "start");
        if (end != null && start > dart.notNull(end)) {
          dart.throw(new core.RangeError.range(end, start, null, "end"));
        }
        this[_addAll](values, start, end);
      }
      insertAll(index, values, start = 0, end = null) {
        let t63;
        __t$IterableOfE().as(values);
        core.RangeError.checkValidIndex(index, this, "index", this[_length] + 1);
        core.RangeError.checkNotNegative(start, "start");
        if (end != null) {
          if (start > dart.notNull(end)) {
            dart.throw(new core.RangeError.range(end, start, null, "end"));
          }
          if (start === end) return;
        }
        if (index === this[_length]) {
          this[_addAll](values, start, end);
          return;
        }
        if (end == null && core.List.is(values)) {
          end = values[$length];
        }
        if (end != null) {
          this[_insertKnownLength](index, values, start, end);
          return;
        }
        let writeIndex = this[_length];
        let skipCount = start;
        for (let value of values) {
          if (skipCount > 0) {
            skipCount = skipCount - 1;
            continue;
          }
          if (writeIndex === this[_buffer][$length]) {
            this[_grow$0](writeIndex);
          }
          this[_buffer][$_set]((t63 = writeIndex, writeIndex = t63 + 1, t63), value);
        }
        if (skipCount > 0) {
          dart.throw(new core.StateError.new("Too few elements"));
        }
        if (end != null && writeIndex < dart.notNull(end)) {
          dart.throw(new core.RangeError.range(end, start, writeIndex, "end"));
        }
        typed_buffer.TypedDataBuffer._reverse(this[_buffer], index, this[_length]);
        typed_buffer.TypedDataBuffer._reverse(this[_buffer], this[_length], writeIndex);
        typed_buffer.TypedDataBuffer._reverse(this[_buffer], index, writeIndex);
        this[_length] = writeIndex;
        return;
      }
      static _reverse(buffer, start, end) {
        end = end - 1;
        while (start < end) {
          let first = buffer[$_get](start);
          let last = buffer[$_get](end);
          buffer[$_set](end, first);
          buffer[$_set](start, last);
          start = start + 1;
          end = end - 1;
        }
      }
      [_addAll](values, start = 0, end = null) {
        if (core.List.is(values)) end == null ? end = values[$length] : null;
        if (end != null) {
          this[_insertKnownLength](this[_length], values, start, end);
          return;
        }
        let i = 0;
        for (let value of values) {
          if (i >= start) this.add(value);
          i = i + 1;
        }
        if (i < start) dart.throw(new core.StateError.new("Too few elements"));
      }
      [_insertKnownLength](index, values, start, end) {
        if (core.List.is(values)) {
          if (start > values[$length] || end > values[$length]) {
            dart.throw(new core.StateError.new("Too few elements"));
          }
        }
        let valuesLength = end - start;
        let newLength = this[_length] + valuesLength;
        this[_ensureCapacity](newLength);
        this[_buffer][$setRange](index + valuesLength, this[_length] + valuesLength, this[_buffer], index);
        this[_buffer][$setRange](index, index + valuesLength, values, start);
        this[_length] = newLength;
      }
      insert(index, element) {
        E.as(element);
        if (index < 0 || index > this[_length]) {
          dart.throw(new core.RangeError.range(index, 0, this[_length]));
        }
        if (this[_length] < this[_buffer][$length]) {
          this[_buffer][$setRange](index + 1, this[_length] + 1, this[_buffer], index);
          this[_buffer][$_set](index, element);
          this[_length] = this[_length] + 1;
          return;
        }
        let newBuffer = this[_createBiggerBuffer](null);
        newBuffer[$setRange](0, index, this[_buffer]);
        newBuffer[$setRange](index + 1, this[_length] + 1, this[_buffer], index);
        newBuffer[$_set](index, element);
        this[_length] = this[_length] + 1;
        this[_buffer] = newBuffer;
      }
      [_ensureCapacity](requiredCapacity) {
        if (requiredCapacity <= this[_buffer][$length]) return;
        let newBuffer = this[_createBiggerBuffer](requiredCapacity);
        newBuffer[$setRange](0, this[_length], this[_buffer]);
        this[_buffer] = newBuffer;
      }
      [_createBiggerBuffer](requiredCapacity) {
        let newLength = this[_buffer][$length] * 2;
        if (requiredCapacity != null && dart.notNull(newLength) < dart.notNull(requiredCapacity)) {
          newLength = requiredCapacity;
        } else if (dart.notNull(newLength) < 8) {
          newLength = 8;
        }
        return this[_createBuffer$](newLength);
      }
      [_grow$0](length) {
        let t63;
        this[_buffer] = (t63 = this[_createBiggerBuffer](null), (() => {
          t63[$setRange](0, length, this[_buffer]);
          return t63;
        })());
      }
      setRange(start, end, iterable, skipCount = 0) {
        __t$IterableOfE().as(iterable);
        if (end > this[_length]) dart.throw(new core.RangeError.range(end, 0, this[_length]));
        this[_setRange](start, end, iterable, skipCount);
      }
      [_setRange](start, end, source, skipCount) {
        if (__t$TypedDataBufferOfE().is(source)) {
          this[_buffer][$setRange](start, end, source[_buffer], skipCount);
        } else {
          this[_buffer][$setRange](start, end, source, skipCount);
        }
      }
      get elementSizeInBytes() {
        return this[_typedBuffer][$elementSizeInBytes];
      }
      get lengthInBytes() {
        return this[_length] * this[_typedBuffer][$elementSizeInBytes];
      }
      get offsetInBytes() {
        return this[_typedBuffer][$offsetInBytes];
      }
      get buffer() {
        return this[_typedBuffer][$buffer];
      }
    }
    (TypedDataBuffer.new = function(buffer) {
      this[_buffer] = buffer;
      this[_length] = buffer[$length];
      ;
    }).prototype = TypedDataBuffer.prototype;
    dart.addTypeTests(TypedDataBuffer);
    TypedDataBuffer.prototype[_is_TypedDataBuffer_default] = true;
    dart.addTypeCaches(TypedDataBuffer);
    dart.setMethodSignature(TypedDataBuffer, () => ({
      __proto__: dart.getMethods(TypedDataBuffer.__proto__),
      _get: dart.fnType(E, [core.int]),
      [$_get]: dart.fnType(E, [core.int]),
      _set: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [$_set]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [_add$0]: dart.fnType(dart.void, [E]),
      addAll: dart.fnType(dart.void, [dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [$addAll]: dart.fnType(dart.void, [dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      insertAll: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [$insertAll]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [_addAll]: dart.fnType(dart.void, [core.Iterable$(E)], [core.int, dart.nullable(core.int)]),
      [_insertKnownLength]: dart.fnType(dart.void, [core.int, core.Iterable$(E), core.int, core.int]),
      [_ensureCapacity]: dart.fnType(dart.void, [core.int]),
      [_createBiggerBuffer]: dart.fnType(core.List$(E), [dart.nullable(core.int)]),
      [_grow$0]: dart.fnType(dart.void, [core.int]),
      [_setRange]: dart.fnType(dart.void, [core.int, core.int, core.Iterable$(E), core.int])
    }));
    dart.setStaticMethodSignature(TypedDataBuffer, () => ['_reverse']);
    dart.setGetterSignature(TypedDataBuffer, () => ({
      __proto__: dart.getGetters(TypedDataBuffer.__proto__),
      [_typedBuffer]: typed_data.TypedData,
      length: core.int,
      [$length]: core.int,
      elementSizeInBytes: core.int,
      lengthInBytes: core.int,
      offsetInBytes: core.int,
      buffer: typed_data.ByteBuffer
    }));
    dart.setSetterSignature(TypedDataBuffer, () => ({
      __proto__: dart.getSetters(TypedDataBuffer.__proto__),
      length: core.int,
      [$length]: core.int
    }));
    dart.setLibraryUri(TypedDataBuffer, I[87]);
    dart.setFieldSignature(TypedDataBuffer, () => ({
      __proto__: dart.getFields(TypedDataBuffer.__proto__),
      [_buffer]: dart.fieldType(core.List$(E)),
      [_length]: dart.fieldType(core.int)
    }));
    dart.setStaticFieldSignature(TypedDataBuffer, () => ['_initialLength']);
    dart.defineExtensionMethods(TypedDataBuffer, [
      '_get',
      '_set',
      'add',
      'addAll',
      'insertAll',
      'insert',
      'setRange'
    ]);
    dart.defineExtensionAccessors(TypedDataBuffer, ['length']);
    return TypedDataBuffer;
  });
  typed_buffer.TypedDataBuffer = typed_buffer.TypedDataBuffer$();
  dart.defineLazy(typed_buffer.TypedDataBuffer, {
    /*typed_buffer.TypedDataBuffer._initialLength*/get _initialLength() {
      return 8;
    }
  }, false);
  dart.addTypeTests(typed_buffer.TypedDataBuffer, _is_TypedDataBuffer_default);
  typed_buffer._IntBuffer = class _IntBuffer extends typed_buffer.TypedDataBuffer$(core.int) {
    get [_defaultValue$]() {
      return 0;
    }
  };
  (typed_buffer._IntBuffer.new = function(buffer) {
    typed_buffer._IntBuffer.__proto__.new.call(this, buffer);
    ;
  }).prototype = typed_buffer._IntBuffer.prototype;
  dart.addTypeTests(typed_buffer._IntBuffer);
  dart.addTypeCaches(typed_buffer._IntBuffer);
  dart.setGetterSignature(typed_buffer._IntBuffer, () => ({
    __proto__: dart.getGetters(typed_buffer._IntBuffer.__proto__),
    [_defaultValue$]: core.int
  }));
  dart.setLibraryUri(typed_buffer._IntBuffer, I[87]);
  typed_buffer._FloatBuffer = class _FloatBuffer extends typed_buffer.TypedDataBuffer$(core.double) {
    get [_defaultValue$]() {
      return 0;
    }
  };
  (typed_buffer._FloatBuffer.new = function(buffer) {
    typed_buffer._FloatBuffer.__proto__.new.call(this, buffer);
    ;
  }).prototype = typed_buffer._FloatBuffer.prototype;
  dart.addTypeTests(typed_buffer._FloatBuffer);
  dart.addTypeCaches(typed_buffer._FloatBuffer);
  dart.setGetterSignature(typed_buffer._FloatBuffer, () => ({
    __proto__: dart.getGetters(typed_buffer._FloatBuffer.__proto__),
    [_defaultValue$]: core.double
  }));
  dart.setLibraryUri(typed_buffer._FloatBuffer, I[87]);
  typed_buffer.Uint8Buffer = class Uint8Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint8Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeUint8List.new(size);
    }
  };
  (typed_buffer.Uint8Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint8Buffer.__proto__.new.call(this, _native_typed_data.NativeUint8List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint8Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint8Buffer);
  dart.addTypeCaches(typed_buffer.Uint8Buffer);
  dart.setMethodSignature(typed_buffer.Uint8Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint8Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Uint8List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint8Buffer, I[87]);
  typed_buffer.Int8Buffer = class Int8Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int8Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeInt8List.new(size);
    }
  };
  (typed_buffer.Int8Buffer.new = function(initialLength = 0) {
    typed_buffer.Int8Buffer.__proto__.new.call(this, _native_typed_data.NativeInt8List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int8Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int8Buffer);
  dart.addTypeCaches(typed_buffer.Int8Buffer);
  dart.setMethodSignature(typed_buffer.Int8Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int8Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Int8List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int8Buffer, I[87]);
  typed_buffer.Uint8ClampedBuffer = class Uint8ClampedBuffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint8ClampedBuffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeUint8ClampedList.new(size);
    }
  };
  (typed_buffer.Uint8ClampedBuffer.new = function(initialLength = 0) {
    typed_buffer.Uint8ClampedBuffer.__proto__.new.call(this, _native_typed_data.NativeUint8ClampedList.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint8ClampedBuffer.prototype;
  dart.addTypeTests(typed_buffer.Uint8ClampedBuffer);
  dart.addTypeCaches(typed_buffer.Uint8ClampedBuffer);
  dart.setMethodSignature(typed_buffer.Uint8ClampedBuffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint8ClampedBuffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Uint8ClampedList, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint8ClampedBuffer, I[87]);
  typed_buffer.Uint16Buffer = class Uint16Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint16Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeUint16List.new(size);
    }
  };
  (typed_buffer.Uint16Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint16Buffer.__proto__.new.call(this, _native_typed_data.NativeUint16List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint16Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint16Buffer);
  dart.addTypeCaches(typed_buffer.Uint16Buffer);
  dart.setMethodSignature(typed_buffer.Uint16Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint16Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Uint16List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint16Buffer, I[87]);
  typed_buffer.Int16Buffer = class Int16Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int16Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeInt16List.new(size);
    }
  };
  (typed_buffer.Int16Buffer.new = function(initialLength = 0) {
    typed_buffer.Int16Buffer.__proto__.new.call(this, _native_typed_data.NativeInt16List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int16Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int16Buffer);
  dart.addTypeCaches(typed_buffer.Int16Buffer);
  dart.setMethodSignature(typed_buffer.Int16Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int16Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Int16List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int16Buffer, I[87]);
  typed_buffer.Uint32Buffer = class Uint32Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint32Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeUint32List.new(size);
    }
  };
  (typed_buffer.Uint32Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint32Buffer.__proto__.new.call(this, _native_typed_data.NativeUint32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint32Buffer);
  dart.addTypeCaches(typed_buffer.Uint32Buffer);
  dart.setMethodSignature(typed_buffer.Uint32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint32Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Uint32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint32Buffer, I[87]);
  typed_buffer.Int32Buffer = class Int32Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int32Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeInt32List.new(size);
    }
  };
  (typed_buffer.Int32Buffer.new = function(initialLength = 0) {
    typed_buffer.Int32Buffer.__proto__.new.call(this, _native_typed_data.NativeInt32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int32Buffer);
  dart.addTypeCaches(typed_buffer.Int32Buffer);
  dart.setMethodSignature(typed_buffer.Int32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int32Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Int32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int32Buffer, I[87]);
  typed_buffer.Uint64Buffer = class Uint64Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint64Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return typed_data.Uint64List.new(size);
    }
  };
  (typed_buffer.Uint64Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint64Buffer.__proto__.new.call(this, typed_data.Uint64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint64Buffer);
  dart.addTypeCaches(typed_buffer.Uint64Buffer);
  dart.setMethodSignature(typed_buffer.Uint64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint64Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Uint64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint64Buffer, I[87]);
  typed_buffer.Int64Buffer = class Int64Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int64Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return typed_data.Int64List.new(size);
    }
  };
  (typed_buffer.Int64Buffer.new = function(initialLength = 0) {
    typed_buffer.Int64Buffer.__proto__.new.call(this, typed_data.Int64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int64Buffer);
  dart.addTypeCaches(typed_buffer.Int64Buffer);
  dart.setMethodSignature(typed_buffer.Int64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int64Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Int64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int64Buffer, I[87]);
  typed_buffer.Float32Buffer = class Float32Buffer extends typed_buffer._FloatBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float32Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeFloat32List.new(size);
    }
  };
  (typed_buffer.Float32Buffer.new = function(initialLength = 0) {
    typed_buffer.Float32Buffer.__proto__.new.call(this, _native_typed_data.NativeFloat32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float32Buffer);
  dart.addTypeCaches(typed_buffer.Float32Buffer);
  dart.setMethodSignature(typed_buffer.Float32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float32Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Float32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Float32Buffer, I[87]);
  typed_buffer.Float64Buffer = class Float64Buffer extends typed_buffer._FloatBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float64Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeFloat64List.new(size);
    }
  };
  (typed_buffer.Float64Buffer.new = function(initialLength = 0) {
    typed_buffer.Float64Buffer.__proto__.new.call(this, _native_typed_data.NativeFloat64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float64Buffer);
  dart.addTypeCaches(typed_buffer.Float64Buffer);
  dart.setMethodSignature(typed_buffer.Float64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float64Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Float64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Float64Buffer, I[87]);
  typed_buffer.Int32x4Buffer = class Int32x4Buffer extends typed_buffer.TypedDataBuffer$(typed_data.Int32x4) {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int32x4Buffer.new(initialLength);
    }
    get [_defaultValue$]() {
      return typed_buffer.Int32x4Buffer._zero;
    }
    [_createBuffer$](size) {
      return new _native_typed_data.NativeInt32x4List.new(size);
    }
  };
  (typed_buffer.Int32x4Buffer.new = function(initialLength = 0) {
    typed_buffer.Int32x4Buffer.__proto__.new.call(this, new _native_typed_data.NativeInt32x4List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int32x4Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int32x4Buffer);
  dart.addTypeCaches(typed_buffer.Int32x4Buffer);
  dart.setMethodSignature(typed_buffer.Int32x4Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int32x4Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Int32x4List, [core.int])
  }));
  dart.setGetterSignature(typed_buffer.Int32x4Buffer, () => ({
    __proto__: dart.getGetters(typed_buffer.Int32x4Buffer.__proto__),
    [_defaultValue$]: typed_data.Int32x4
  }));
  dart.setLibraryUri(typed_buffer.Int32x4Buffer, I[87]);
  dart.setStaticFieldSignature(typed_buffer.Int32x4Buffer, () => ['_zero']);
  dart.defineLazy(typed_buffer.Int32x4Buffer, {
    /*typed_buffer.Int32x4Buffer._zero*/get _zero() {
      return new _native_typed_data.NativeInt32x4.new(0, 0, 0, 0);
    }
  }, false);
  typed_buffer.Float32x4Buffer = class Float32x4Buffer extends typed_buffer.TypedDataBuffer$(typed_data.Float32x4) {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float32x4Buffer.new(initialLength);
    }
    get [_defaultValue$]() {
      return new _native_typed_data.NativeFloat32x4.zero();
    }
    [_createBuffer$](size) {
      return new _native_typed_data.NativeFloat32x4List.new(size);
    }
  };
  (typed_buffer.Float32x4Buffer.new = function(initialLength = 0) {
    typed_buffer.Float32x4Buffer.__proto__.new.call(this, new _native_typed_data.NativeFloat32x4List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float32x4Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float32x4Buffer);
  dart.addTypeCaches(typed_buffer.Float32x4Buffer);
  dart.setMethodSignature(typed_buffer.Float32x4Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float32x4Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Float32x4List, [core.int])
  }));
  dart.setGetterSignature(typed_buffer.Float32x4Buffer, () => ({
    __proto__: dart.getGetters(typed_buffer.Float32x4Buffer.__proto__),
    [_defaultValue$]: typed_data.Float32x4
  }));
  dart.setLibraryUri(typed_buffer.Float32x4Buffer, I[87]);
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:provider/provider.dart": provider,
    "package:flutter_app/controllers/cart_prov.dart": cart_prov,
    "file:///zapp/project/lib/configs/x_configs.dart": x_configs,
    "file:///zapp/project/lib/modules/features/x_features.dart": x_features,
    "file:///zapp/project/lib/modules/home/x_homes.dart": x_homes,
    "file:///zapp/project/lib/modules/product/x_product.dart": x_product,
    "file:///zapp/project/lib/modules/sliver_screen/x_sliver_screens.dart": x_sliver_screens,
    "file:///zapp/project/lib/pages/examples/form_input_pg.dart": form_input_pg,
    "package:shared_preferences_web/shared_preferences_web.dart": shared_preferences_web,
    "package:provider/src/async_provider.dart": async_provider,
    "package:provider/src/change_notifier_provider.dart": change_notifier_provider,
    "package:provider/src/consumer.dart": consumer,
    "package:provider/src/listenable_provider.dart": listenable_provider,
    "package:provider/src/provider.dart": provider$,
    "package:provider/src/proxy_provider.dart": proxy_provider,
    "package:provider/src/reassemble_handler.dart": reassemble_handler,
    "package:provider/src/selector.dart": selector$,
    "package:provider/src/value_listenable_provider.dart": value_listenable_provider,
    "package:flutter_app/models/x_models.dart": x_models,
    "file:///zapp/project/lib/configs/colors.dart": colors$0,
    "file:///zapp/project/lib/configs/keys.dart": keys,
    "file:///zapp/project/lib/configs/paths.dart": paths,
    "file:///zapp/project/lib/configs/styles.dart": styles,
    "file:///zapp/project/lib/configs/themes.dart": themes,
    "file:///zapp/project/lib/configs/variables.dart": variables,
    "file:///zapp/project/lib/modules/features/pages/button_pg.dart": button_pg,
    "file:///zapp/project/lib/modules/home/pages/home_pg.dart": home_pg,
    "file:///zapp/project/lib/modules/product/pages/product_pg.dart": product_pg,
    "file:///zapp/project/lib/modules/product/pages/cart_pg.dart": cart_pg,
    "file:///zapp/project/lib/modules/sliver_screen/models/car_mdl.dart": car_mdl,
    "file:///zapp/project/lib/modules/sliver_screen/views/sliver_vw.dart": sliver_vw,
    "file:///zapp/project/lib/widgets/x_widgets.dart": x_widgets,
    "package:shared_preferences_platform_interface/shared_preferences_platform_interface.dart": shared_preferences_platform_interface,
    "package:shared_preferences_platform_interface/types.dart": types,
    "package:nested/nested.dart": nested,
    "package:flutter_app/models/product_mdl.dart": product_mdl,
    "package:flutter_app/models/store_mdl.dart": store_mdl,
    "package:flutter_app/helpers/x_helpers.dart": x_helpers,
    "package:flutter_app/pages/x_pages.dart": x_pages,
    "package:flutter_app/widgets/x_widgets.dart": x_widgets$,
    "file:///zapp/project/lib/datasources/local/product_dt.dart": product_dt,
    "file:///zapp/project/lib/models/x_models.dart": x_models$,
    "file:///zapp/project/lib/controllers/cart_prov.dart": cart_prov$,
    "file:///zapp/project/lib/widgets/button_wdg.dart": button_wdg,
    "file:///zapp/project/lib/widgets/dialog_wdg.dart": dialog_wdg,
    "file:///zapp/project/lib/widgets/snackbar_wdg.dart": snackbar_wdg,
    "file:///zapp/project/lib/widgets/textfield_wdg.dart": textfield_wdg,
    "file:///zapp/project/lib/widgets/form_input_wdg.dart": form_input_wdg,
    "file:///zapp/project/lib/widgets/my_box_decoration.dart": my_box_decoration,
    "file:///zapp/project/lib/widgets/my_text.dart": my_text,
    "package:plugin_platform_interface/plugin_platform_interface.dart": plugin_platform_interface,
    "package:shared_preferences_platform_interface/method_channel_shared_preferences.dart": method_channel_shared_preferences,
    "package:flutter_app/helpers/base_client_http_hlp.dart": base_client_http_hlp,
    "package:flutter_app/helpers/exception_hlp.dart": exception_hlp,
    "package:flutter_app/helpers/extension_hlp.dart": extension_hlp,
    "package:flutter_app/helpers/dialog_hlp.dart": dialog_hlp,
    "package:flutter_app/helpers/material_color_hlp.dart": material_color_hlp,
    "package:flutter_app/helpers/responsive_hlp.dart": responsive_hlp,
    "package:flutter_app/helpers/session_hlp.dart": session_hlp,
    "package:flutter_app/helpers/utils_hlp.dart": utils_hlp,
    "package:flutter_app/helpers/widgets_hlp.dart": widgets_hlp,
    "package:flutter_app/pages/examples/form_input_pg.dart": form_input_pg$,
    "package:flutter_app/widgets/button_wdg.dart": button_wdg$,
    "package:flutter_app/widgets/dialog_wdg.dart": dialog_wdg$,
    "package:flutter_app/widgets/snackbar_wdg.dart": snackbar_wdg$,
    "package:flutter_app/widgets/textfield_wdg.dart": textfield_wdg$,
    "package:flutter_app/widgets/form_input_wdg.dart": form_input_wdg$,
    "package:flutter_app/widgets/my_box_decoration.dart": my_box_decoration$,
    "package:flutter_app/widgets/my_text.dart": my_text$,
    "file:///zapp/project/lib/models/product_mdl.dart": product_mdl$,
    "file:///zapp/project/lib/models/store_mdl.dart": store_mdl$,
    "file:///zapp/project/lib/helpers/x_helpers.dart": x_helpers$,
    "package:http/http.dart": http,
    "package:flutter_app/configs/x_configs.dart": x_configs$,
    "package:shared_preferences/shared_preferences.dart": shared_preferences,
    "file:///zapp/project/lib/helpers/base_client_http_hlp.dart": base_client_http_hlp$,
    "file:///zapp/project/lib/helpers/exception_hlp.dart": exception_hlp$,
    "file:///zapp/project/lib/helpers/extension_hlp.dart": extension_hlp$,
    "file:///zapp/project/lib/helpers/dialog_hlp.dart": dialog_hlp$,
    "file:///zapp/project/lib/helpers/material_color_hlp.dart": material_color_hlp$,
    "file:///zapp/project/lib/helpers/responsive_hlp.dart": responsive_hlp$,
    "file:///zapp/project/lib/helpers/session_hlp.dart": session_hlp$,
    "file:///zapp/project/lib/helpers/utils_hlp.dart": utils_hlp$,
    "file:///zapp/project/lib/helpers/widgets_hlp.dart": widgets_hlp$,
    "package:http/src/client.dart": client$,
    "package:http/src/exception.dart": exception,
    "package:http/src/request.dart": request$,
    "package:http/src/response.dart": response$,
    "package:http/src/streamed_request.dart": streamed_request,
    "package:http/src/base_client.dart": base_client,
    "package:http/src/base_request.dart": base_request,
    "package:http/src/base_response.dart": base_response,
    "package:http/src/byte_stream.dart": byte_stream,
    "package:http/src/multipart_file.dart": multipart_file,
    "package:http/src/multipart_request.dart": multipart_request,
    "package:http/src/streamed_response.dart": streamed_response,
    "package:flutter_app/configs/colors.dart": colors$1,
    "package:flutter_app/configs/keys.dart": keys$,
    "package:flutter_app/configs/paths.dart": paths$,
    "package:flutter_app/configs/styles.dart": styles$,
    "package:flutter_app/configs/themes.dart": themes$,
    "package:flutter_app/configs/variables.dart": variables$,
    "package:http/src/browser_client.dart": browser_client,
    "package:http_parser/http_parser.dart": http_parser,
    "package:http/src/utils.dart": utils,
    "package:http/src/multipart_file_stub.dart": multipart_file_stub,
    "package:http/src/boundary_characters.dart": boundary_characters,
    "package:http_parser/src/authentication_challenge.dart": authentication_challenge,
    "package:http_parser/src/case_insensitive_map.dart": case_insensitive_map,
    "package:http_parser/src/chunked_coding.dart": chunked_coding,
    "package:http_parser/src/http_date.dart": http_date,
    "package:http_parser/src/media_type.dart": media_type,
    "package:http_parser/src/scan.dart": scan,
    "package:http_parser/src/utils.dart": utils$,
    "package:http_parser/src/chunked_coding/decoder.dart": decoder,
    "package:http_parser/src/chunked_coding/encoder.dart": encoder,
    "package:typed_data/typed_data.dart": typed_data$,
    "package:http_parser/src/chunked_coding/charcodes.dart": charcodes,
    "package:typed_data/src/typed_queue.dart": typed_queue,
    "package:typed_data/typed_buffers.dart": typed_buffers,
    "package:typed_data/src/typed_buffer.dart": typed_buffer
  }, {
    "package:provider/src/provider.dart": ["deferred_inherited_provider.dart", "devtool.dart", "inherited_provider.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/controllers/cart_prov.dart","/zapp/project/lib/pages/examples/form_input_pg.dart","/zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.6/lib/plugin_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/shared_preferences_platform_interface-2.3.1/lib/shared_preferences_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/shared_preferences_web-2.2.1/lib/shared_preferences_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/nested-1.0.0/lib/nested.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/inherited_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/deferred_inherited_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/async_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/listenable_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/change_notifier_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/consumer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/devtool.dart","/workspace/build/dart-sdk/packages/flutter/lib/src/widgets/framework.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/proxy_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/reassemble_handler.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/selector.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/value_listenable_provider.dart","/zapp/project/lib/configs/colors.dart","/zapp/project/lib/configs/keys.dart","/zapp/project/lib/configs/paths.dart","/zapp/project/lib/configs/styles.dart","/zapp/project/lib/configs/themes.dart","/zapp/project/lib/configs/variables.dart","/zapp/project/lib/modules/features/pages/button_pg.dart","/zapp/project/lib/modules/home/pages/home_pg.dart","/zapp/project/lib/modules/product/pages/product_pg.dart","/zapp/project/lib/modules/product/pages/cart_pg.dart","/zapp/project/lib/modules/sliver_screen/models/car_mdl.dart","/zapp/project/lib/modules/sliver_screen/views/sliver_vw.dart","/zapp/pub/.pub_cache/hosted/pub.dev/shared_preferences_platform_interface-2.3.1/lib/types.dart","/zapp/project/lib/models/product_mdl.dart","/zapp/project/lib/models/store_mdl.dart","/zapp/project/lib/datasources/local/product_dt.dart","/zapp/project/lib/widgets/button_wdg.dart","/zapp/project/lib/widgets/dialog_wdg.dart","/zapp/project/lib/widgets/snackbar_wdg.dart","/zapp/project/lib/widgets/textfield_wdg.dart","/zapp/project/lib/widgets/form_input_wdg.dart","/zapp/project/lib/widgets/my_box_decoration.dart","/zapp/project/lib/widgets/my_text.dart","/zapp/pub/.pub_cache/hosted/pub.dev/shared_preferences_platform_interface-2.3.1/lib/method_channel_shared_preferences.dart","/zapp/project/lib/helpers/base_client_http_hlp.dart","/zapp/project/lib/helpers/exception_hlp.dart","/zapp/project/lib/helpers/extension_hlp.dart","/zapp/project/lib/helpers/dialog_hlp.dart","/zapp/project/lib/helpers/material_color_hlp.dart","/zapp/project/lib/helpers/responsive_hlp.dart","/zapp/project/lib/helpers/session_hlp.dart","/zapp/project/lib/helpers/utils_hlp.dart","/zapp/project/lib/helpers/widgets_hlp.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/http.dart","/zapp/pub/.pub_cache/hosted/pub.dev/shared_preferences-2.2.2/lib/shared_preferences.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/client.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/base_request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/base_response.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/response.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/streamed_request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/base_client.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/byte_stream.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/multipart_file.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/multipart_request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/streamed_response.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/browser_client.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/multipart_file_stub.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/boundary_characters.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/authentication_challenge.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/case_insensitive_map.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/http_date.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/media_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/scan.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/decoder.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/encoder.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/charcodes.dart","/zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_queue.dart","/zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_buffer.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    provider: provider,
    controllers__cart_prov: cart_prov,
    zapp__project__lib__configs__x_configs: x_configs,
    zapp__project__lib__modules__features__x_features: x_features,
    zapp__project__lib__modules__home__x_homes: x_homes,
    zapp__project__lib__modules__product__x_product: x_product,
    zapp__project__lib__modules__sliver_screen__x_sliver_screens: x_sliver_screens,
    zapp__project__lib__pages__examples__form_input_pg: form_input_pg,
    shared_preferences_web: shared_preferences_web,
    src__async_provider: async_provider,
    src__change_notifier_provider: change_notifier_provider,
    src__consumer: consumer,
    src__listenable_provider: listenable_provider,
    src__provider: provider$,
    src__proxy_provider: proxy_provider,
    src__reassemble_handler: reassemble_handler,
    src__selector: selector$,
    src__value_listenable_provider: value_listenable_provider,
    models__x_models: x_models,
    zapp__project__lib__configs__colors: colors$0,
    zapp__project__lib__configs__keys: keys,
    zapp__project__lib__configs__paths: paths,
    zapp__project__lib__configs__styles: styles,
    zapp__project__lib__configs__themes: themes,
    zapp__project__lib__configs__variables: variables,
    zapp__project__lib__modules__features__pages__button_pg: button_pg,
    zapp__project__lib__modules__home__pages__home_pg: home_pg,
    zapp__project__lib__modules__product__pages__product_pg: product_pg,
    zapp__project__lib__modules__product__pages__cart_pg: cart_pg,
    zapp__project__lib__modules__sliver_screen__models__car_mdl: car_mdl,
    zapp__project__lib__modules__sliver_screen__views__sliver_vw: sliver_vw,
    zapp__project__lib__widgets__x_widgets: x_widgets,
    shared_preferences_platform_interface: shared_preferences_platform_interface,
    types: types,
    nested: nested,
    models__product_mdl: product_mdl,
    models__store_mdl: store_mdl,
    helpers__x_helpers: x_helpers,
    pages__x_pages: x_pages,
    widgets__x_widgets: x_widgets$,
    zapp__project__lib__datasources__local__product_dt: product_dt,
    zapp__project__lib__models__x_models: x_models$,
    zapp__project__lib__controllers__cart_prov: cart_prov$,
    zapp__project__lib__widgets__button_wdg: button_wdg,
    zapp__project__lib__widgets__dialog_wdg: dialog_wdg,
    zapp__project__lib__widgets__snackbar_wdg: snackbar_wdg,
    zapp__project__lib__widgets__textfield_wdg: textfield_wdg,
    zapp__project__lib__widgets__form_input_wdg: form_input_wdg,
    zapp__project__lib__widgets__my_box_decoration: my_box_decoration,
    zapp__project__lib__widgets__my_text: my_text,
    plugin_platform_interface: plugin_platform_interface,
    method_channel_shared_preferences: method_channel_shared_preferences,
    helpers__base_client_http_hlp: base_client_http_hlp,
    helpers__exception_hlp: exception_hlp,
    helpers__extension_hlp: extension_hlp,
    helpers__dialog_hlp: dialog_hlp,
    helpers__material_color_hlp: material_color_hlp,
    helpers__responsive_hlp: responsive_hlp,
    helpers__session_hlp: session_hlp,
    helpers__utils_hlp: utils_hlp,
    helpers__widgets_hlp: widgets_hlp,
    pages__examples__form_input_pg: form_input_pg$,
    widgets__button_wdg: button_wdg$,
    widgets__dialog_wdg: dialog_wdg$,
    widgets__snackbar_wdg: snackbar_wdg$,
    widgets__textfield_wdg: textfield_wdg$,
    widgets__form_input_wdg: form_input_wdg$,
    widgets__my_box_decoration: my_box_decoration$,
    widgets__my_text: my_text$,
    zapp__project__lib__models__product_mdl: product_mdl$,
    zapp__project__lib__models__store_mdl: store_mdl$,
    zapp__project__lib__helpers__x_helpers: x_helpers$,
    http: http,
    configs__x_configs: x_configs$,
    shared_preferences: shared_preferences,
    zapp__project__lib__helpers__base_client_http_hlp: base_client_http_hlp$,
    zapp__project__lib__helpers__exception_hlp: exception_hlp$,
    zapp__project__lib__helpers__extension_hlp: extension_hlp$,
    zapp__project__lib__helpers__dialog_hlp: dialog_hlp$,
    zapp__project__lib__helpers__material_color_hlp: material_color_hlp$,
    zapp__project__lib__helpers__responsive_hlp: responsive_hlp$,
    zapp__project__lib__helpers__session_hlp: session_hlp$,
    zapp__project__lib__helpers__utils_hlp: utils_hlp$,
    zapp__project__lib__helpers__widgets_hlp: widgets_hlp$,
    src__client: client$,
    src__exception: exception,
    src__request: request$,
    src__response: response$,
    src__streamed_request: streamed_request,
    src__base_client: base_client,
    src__base_request: base_request,
    src__base_response: base_response,
    src__byte_stream: byte_stream,
    src__multipart_file: multipart_file,
    src__multipart_request: multipart_request,
    src__streamed_response: streamed_response,
    configs__colors: colors$1,
    configs__keys: keys$,
    configs__paths: paths$,
    configs__styles: styles$,
    configs__themes: themes$,
    configs__variables: variables$,
    src__browser_client: browser_client,
    http_parser: http_parser,
    src__utils: utils,
    src__multipart_file_stub: multipart_file_stub,
    src__boundary_characters: boundary_characters,
    src__authentication_challenge: authentication_challenge,
    src__case_insensitive_map: case_insensitive_map,
    src__chunked_coding: chunked_coding,
    src__http_date: http_date,
    src__media_type: media_type,
    src__scan: scan,
    src__utils: utils$,
    src__chunked_coding__decoder: decoder,
    src__chunked_coding__encoder: encoder,
    typed_data: typed_data$,
    src__chunked_coding__charcodes: charcodes,
    src__typed_queue: typed_queue,
    typed_buffers: typed_buffers,
    src__typed_buffer: typed_buffer
  };
}));

//# sourceMappingURL=main.js.map
